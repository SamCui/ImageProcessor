<?xml version="1.0"?>
<doc processed="true">
  <assembly>
    <name>Leadtools.ImageProcessing.Core</name>
  </assembly>
  <members>
    <member name="T:Leadtools.ImageProcessing.Core.ObjectCounterCommandEventArgs">
      <summary>Handles each object found by <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents objectCounterCommand_S2 As ObjectCounterCommand
   Public Sub ObjectCounterCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      objectCounterCommand_S2 = New ObjectCounterCommand
      objectCounterCommand_S2.Run(leadImage)

   End Sub

   Private Sub ObjectCounterCommand_ObjectCounter_S2(ByVal sender As Object, ByVal e As ObjectCounterCommandEventArgs) Handles objectCounterCommand_S2.ObjectCounter
      Dim ee As ObjectCounterCommandEventArgs = New ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void ObjectCounterCommandEventArgsExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            ObjectCounterCommand command = new ObjectCounterCommand();
            command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S2);
            command.Run(image);

        }

        private void ObjectCounterEvent_S2(object sender, ObjectCounterCommandEventArgs e)
        {
            ObjectCounterCommandEventArgs ee = new ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task ObjectCounterCommandEventArgsExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        ObjectCounterCommand command = new ObjectCounterCommand();
   //        command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S2);
   //        command.Run(image);

   //    }

   //    private void ObjectCounterEvent_S2(object sender, ObjectCounterCommandEventArgs e)
   //    {
   //        ObjectCounterCommandEventArgs ee = new ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData);

   //    }
   //     </code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ObjectCounterCommandEventArgs.#ctor(Leadtools.LeadRect,System.Int32[][])">
      <summary>Initializes a new ObjectCounterCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="objectrectangle">Rectangle surrounding the object.</param>
      <param name="objectdata">Two dimension array containing the location of the pixels belonging
            to the object. Elements in the array with value 1 belong to the object, otherwise they do not</param>
      <example>
        <code lang="VB">   Public WithEvents objectCounterCommand_S2 As ObjectCounterCommand
   Public Sub ObjectCounterCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      objectCounterCommand_S2 = New ObjectCounterCommand
      objectCounterCommand_S2.Run(leadImage)

   End Sub

   Private Sub ObjectCounterCommand_ObjectCounter_S2(ByVal sender As Object, ByVal e As ObjectCounterCommandEventArgs) Handles objectCounterCommand_S2.ObjectCounter
      Dim ee As ObjectCounterCommandEventArgs = New ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void ObjectCounterCommandEventArgsExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            ObjectCounterCommand command = new ObjectCounterCommand();
            command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S2);
            command.Run(image);

        }

        private void ObjectCounterEvent_S2(object sender, ObjectCounterCommandEventArgs e)
        {
            ObjectCounterCommandEventArgs ee = new ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task ObjectCounterCommandEventArgsExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        ObjectCounterCommand command = new ObjectCounterCommand();
   //        command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S2);
   //        command.Run(image);

   //    }

   //    private void ObjectCounterEvent_S2(object sender, ObjectCounterCommandEventArgs e)
   //    {
   //        ObjectCounterCommandEventArgs ee = new ObjectCounterCommandEventArgs(e.ObjectRectangle, e.ObjectData);

   //    }
   //     </code>
      </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ObjectCounterCommandEventArgs.ObjectRectangle">
      <summary>Gets Object rectangle surrounding the object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Rectangle surrounding the object.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ObjectCounterCommandEventArgs.ObjectData">
      <summary>Gets the two dimensional array corresponding to the location of the object pixels in the object rectangle. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Two dimensional array corresponding to the location of the object pixels in the object rectangle.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand">
      <summary>Gets the number of black objects in a binary image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description> This command retrieves the number of black objects on a white background in a binary image.
             The behavior of this command can be further modified by using an Event Handler that handles the <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommandEventArgs" />. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If there isn't a region selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public WithEvents objectCounterCommand_S1 As ObjectCounterCommand
   Public Sub ObjectCounterCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      objectCounterCommand_S1 = New ObjectCounterCommand
      objectCounterCommand_S1.Run(leadImage)


   End Sub

   Private Sub ObjectCounterCommand_ObjectCounter_S1(ByVal sender As Object, ByVal e As ObjectCounterCommandEventArgs) Handles objectCounterCommand_S1.ObjectCounter

      Dim nRegionPixelSize As Integer
      Dim i As Integer
      Dim j As Integer
      nRegionPixelSize = 0
      For i = e.ObjectRectangle.Left To e.ObjectRectangle.Right - 1
         For j = e.ObjectRectangle.Top To e.ObjectRectangle.Bottom - 1
            nRegionPixelSize = nRegionPixelSize + 1
         Next j
      Next i
      MessageBox.Show("Region size in pixels is " + "( " + nRegionPixelSize.ToString() + " )")
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void ObjectCounterCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            ObjectCounterCommand command = new ObjectCounterCommand();
            command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S1);
            command.Run(image);

            MessageBox.Show("ObjectCountis" + "( " + command.Count + " )");

        }

        private void ObjectCounterEvent_S1(object sender, ObjectCounterCommandEventArgs e)
        {
            int RegionPixelSize;
            RegionPixelSize = 0;

            for(int i = e.ObjectRectangle.Left; i &lt; e.ObjectRectangle.Right; i ++)
            {
                for (int j = e.ObjectRectangle.Top; j &lt; e.ObjectRectangle.Bottom; j++)
                { 
                    if ( e.ObjectData[i][j] == 1)
                    {
                        RegionPixelSize++;
                    }
                }
            }

            MessageBox.Show("Region size in pixels is" + "( " + RegionPixelSize + " )");
        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task ObjectCounterCommandExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        ObjectCounterCommand command = new ObjectCounterCommand();
   //        command.ObjectCounter += new EventHandler&lt;ObjectCounterCommandEventArgs&gt;(ObjectCounterEvent_S1);
   //        command.Run(image);

   //        Debug.WriteLine("ObjectCountis" + "( " + command.Count + " )");

   //    }

   //    private void ObjectCounterEvent_S1(object sender, ObjectCounterCommandEventArgs e)
   //    {
   //        int RegionPixelSize;
   //        RegionPixelSize = 0;
           
   //        for(int i = e.ObjectRectangle.X; i &lt; e.ObjectRectangle.Width; i ++)
   //        {
   //            for (int j = e.ObjectRectangle.Y; j &lt; e.ObjectRectangle.Height; j++)
   //            { 
   //                if ( e.ObjectData[i][j] == 1)
   //                {
   //                    RegionPixelSize++;
   //                }
   //            }
   //        }
           
   //        Debug.WriteLine("Region size in pixels is" + "( " + RegionPixelSize + " )");
   //    }
   //     </code>
      </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ObjectCounterCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ObjectCounterCommand.#ctor">
      <summary>Initiailzes a new ObjectCounterCommand with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" /></example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ObjectCounterCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ObjectCounterCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.ObjectCounterCommand.ObjectCounter">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ObjectCounterCommand.Count">
      <summary>Gets the number of objects in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>The number of objects in the image.</value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.ObjectCounterCommand" /></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">
      <summary>
        <para>Flags that determine the behavior of the dot removal process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTDotRemoveCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum DotRemoveCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseDpi">
      <summary>The unit of measure for all properties of the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> 
            is thousandths of an inch. Use the image's DPI to convert to pixels. This allows the processing of many images 
            with different DPI. If this flag is not set, the unit of measure for all properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> is pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_UseDpi</pre>
      </objectivec>
      <java>
        <pre>USE_DPI</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.SingleRegion">
      <summary>For each dot encountered by <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>, the removed dot is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>, 
            the dot is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region" /> will 
            reference a region that contains all the removed dots. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion" /> will be 
            updated with a shallow copy of image that has a LEAD region that contains all the removed dots. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all the removed dots. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed (either region allocated in <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_SingleRegion</pre>
      </objectivec>
      <java>
        <pre>SINGLE_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.LeadRegion">
      <summary>When <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion" /> 
            is updated with a shallow copy of the image that also contains a region with all the removed dots. 
            This flag must be used in conjunction with SingleRegion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_LeadRegion</pre>
      </objectivec>
      <java>
        <pre>LEAD_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.CallBackRegion">
      <summary>The <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region" /> property is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> 
            that contains the current dot to be removed. Setting this flag lets the user create his or her own composite of removed 
            dots by combining the regions received, if <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>. The regions can be combined using a logical OR operator. 
            Combining all regions received when the <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> results in a region identical to the region created 
            when SingleRegion is set in <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Flags" />. 
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />. 
            When the region received by the <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region" /> property 
            is no longer needed, it must be released. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_CallBackRegion</pre>
      </objectivec>
      <java>
        <pre>CALLBACK_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.ImageUnchanged">
      <summary>The resulting image is unchanged. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_ImageUnchanged</pre>
      </objectivec>
      <java>
        <pre>IMAGE_UNCHANGED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseSize">
      <summary>Use the <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight" /> properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> to indicate the size of the dots to remove. 
            If this flag is not set, default values for the four sizes will be used. These defaults are as follows: 
             <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth" /> = 1, 
             <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight" /> = 1, 
             <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth" /> = 2, 
             <see cref="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight" />= 2. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_UseSize</pre>
      </objectivec>
      <java>
        <pre>USE_SIZE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags.UseDiagonals">
      <summary>Considers pixels that are diagonal as part of the dot. Consider the "speck" below consisting of nine pixels.
            <br><img src="DotDiag.jpg" /></br><br>If this flag is used, this speck is considered a single dot that is 5x5 pixels.  If this flag is not used, 
            the speck is considered three dots (2x2, 1x1, 2x2).</br><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotRemoveCommandFlags_UseDiagonals</pre>
      </objectivec>
      <java>
        <pre>USE_DIAGONALS</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs">
      <summary>Handles each dot found by <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents dotRemoveCommandCallback_S4 As DotRemoveCommand
   Public Sub DotRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      dotRemoveCommandCallback_S4 = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10)
      dotRemoveCommandCallback_S4.Run(leadImage)

   End Sub

   Private Sub DotRemoveCommand_DotRemove_S4(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs) Handles dotRemoveCommandCallback_S4.DotRemove
      Dim ee As DotRemoveCommandEventArgs = New DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
      'Do not remove the speck if it contains any white pixels
      If (e.WhiteCount &gt; 0) Then
         e.Status = RemoveStatus.NoRemove
      Else
         e.Status = RemoveStatus.Remove
      End If

      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DotRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);

      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DotRemoveCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DotRemoveCommand(DotRemoveCommandFlags.useSize | DotRemoveCommandFlags.callBackRegion, 1, 1, 10, 10);
         command.addEventListener("dotremove", DotRemoveEvent_S4);
         command.run(image);
      }
   });
}

function DotRemoveEvent_S4(e) {

   with (Leadtools.ImageProcessing.Core) {
      var ee = new DotRemoveCommandEventArgs(e.image, e.region, e.boundingRectangle, e.whiteCount, e.blackCount);
      // Do not remove the speck if it contains any white pixels
      if (e.whiteCount &gt; 0) {
         e.status = RemoveStatus.noRemove;
      }
      else {
         e.status = RemoveStatus.remove;
      }

      if (e.region != null) {
         e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task DotRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);

      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
        <code lang="SilverlightCSharp">      public void DotRemoveCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image,null, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }
      }</code>
        <code lang="VB">      Public Sub DotRemoveCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DotRemoveCommand = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10)
         AddHandler command.DotRemove, AddressOf DotRemoveEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub DotRemoveEvent_S4(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs)
         Dim ee As DotRemoveCommandEventArgs = New DotRemoveCommandEventArgs(e.Image,Nothing, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
         ' Do not remove the speck if it contains any white pixels
         If e.WhiteCount &gt; 0 Then
            e.Status= RemoveStatus.NoRemove
         Else
            e.Status= RemoveStatus.Remove
         End If
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTDotRemoveCommandEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class DotRemoveCommandEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">
      <summary>Initializes a new DotRemoveCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the image to be modified.</param>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the dot to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</param>
      <param name="boundingRectangle">The bounding rectangle of the dot being processed.</param>
      <param name="whiteCount">Total number of white pixels in the dot being processed.</param>
      <param name="blackCount">Total number of black pixels in the dot being processed.</param>
      <example>
        <code lang="VB">   Public WithEvents dotRemoveCommandCallback_S4 As DotRemoveCommand
   Public Sub DotRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      dotRemoveCommandCallback_S4 = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10)
      dotRemoveCommandCallback_S4.Run(leadImage)

   End Sub

   Private Sub DotRemoveCommand_DotRemove_S4(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs) Handles dotRemoveCommandCallback_S4.DotRemove
      Dim ee As DotRemoveCommandEventArgs = New DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
      'Do not remove the speck if it contains any white pixels
      If (e.WhiteCount &gt; 0) Then
         e.Status = RemoveStatus.NoRemove
      Else
         e.Status = RemoveStatus.Remove
      End If

      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DotRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);

      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DotRemoveCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DotRemoveCommand(DotRemoveCommandFlags.useSize | DotRemoveCommandFlags.callBackRegion, 1, 1, 10, 10);
         command.addEventListener("dotremove", DotRemoveEvent_S4);
         command.run(image);
      }
   });
}

function DotRemoveEvent_S4(e) {

   with (Leadtools.ImageProcessing.Core) {
      var ee = new DotRemoveCommandEventArgs(e.image, e.region, e.boundingRectangle, e.whiteCount, e.blackCount);
      // Do not remove the speck if it contains any white pixels
      if (e.whiteCount &gt; 0) {
         e.status = RemoveStatus.noRemove;
      }
      else {
         e.status = RemoveStatus.remove;
      }

      if (e.region != null) {
         e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task DotRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);

      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
        <code lang="SilverlightCSharp">      public void DotRemoveCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void DotRemoveEvent_S4(object sender, DotRemoveCommandEventArgs e)
      {
         DotRemoveCommandEventArgs ee = new DotRemoveCommandEventArgs(e.Image,null, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }
      }</code>
        <code lang="VB">      Public Sub DotRemoveCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DotRemoveCommand = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.CallBackRegion, 1, 1, 10, 10)
         AddHandler command.DotRemove, AddressOf DotRemoveEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub DotRemoveEvent_S4(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs)
         Dim ee As DotRemoveCommandEventArgs = New DotRemoveCommandEventArgs(e.Image,Nothing, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
         ' Do not remove the speck if it contains any white pixels
         If e.WhiteCount &gt; 0 Then
            e.Status= RemoveStatus.NoRemove
         Else
            e.Status= RemoveStatus.Remove
         End If
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithImage:(LTRasterImage*)image 
             region:(LTRasterRegion*)region 
  boundingRectangle:(LeadRect)boundingRectangle 
         whiteCount:(int)whiteCount 
         blackCount:(int)blackCount;            </pre>
      </objectivec>
      <java>
        <pre>
public DotRemoveCommandEvent(
   Object source, 
   RasterImage image, 
   RasterRegion region, 
   LeadRect boundingRectangle, 
   int whiteCount, 
   int blackCount
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object that references the image to be modified. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> object that references the image to be modified.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,LeadRect,int,int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Region">
      <summary>Gets the LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the dot to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the dot to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,LeadRect,int,int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.BoundingRectangle">
      <summary>Gets the bounding rectangle of the dot being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bounding rectangle of the dot being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect boundingRectangle;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getBoundingRectangle()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.WhiteCount">
      <summary>Gets the total number of white pixels in the dot being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Total number of white pixels in the dot being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int whiteCount;</pre>
      </objectivec>
      <java>
        <pre>public int getWhiteCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.BlackCount">
      <summary>Gets the total number of black pixels in the dot being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Total number of black pixels in the dot being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int blackCount;</pre>
      </objectivec>
      <java>
        <pre>public int getBlackCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.Status">
      <summary>Gets or sets a value that indicates the status of the dot removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the status of the dot removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRemoveStatus status;</pre>
      </objectivec>
      <java>
        <pre>
public RemoveStatus getStatus()
public void setStatus(RemoveStatus value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DotRemoveCommand">
      <summary>Finds and removes dots and specks of various sizes. This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Document cleanup|Removing|Dots|Cleanup|1-bit images|Specks</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>This method finds and removes dots, specks, and blobs of various sizes in 1-bit documents. 
            The dots, specks, and blobs may or may not be all black.  The behavior of this method can be modified by using an Event Handler that handles the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs" />.</description>
          </item>
          <item>
            <description>This method works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this method.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public WithEvents dotRemoveCommandCallback_S1 As DotRemoveCommand
   Public Sub DotRemoveCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      dotRemoveCommandCallback_S1 = New DotRemoveCommand
      dotRemoveCommandCallback_S1.Flags = DotRemoveCommandFlags.UseSize
      dotRemoveCommandCallback_S1.MaximumDotHeight = 10
      dotRemoveCommandCallback_S1.MaximumDotWidth = 10
      dotRemoveCommandCallback_S1.MinimumDotHeight = 1
      dotRemoveCommandCallback_S1.MinimumDotWidth = 1

      dotRemoveCommandCallback_S1.Run(leadImage)

   End Sub

   Private Sub DotRemoveCommand_DotRemove_S1(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs) Handles dotRemoveCommandCallback_S1.DotRemove
      MessageBox.Show("Size   " + Convert.ToString(e.BoundingRectangle.Width) + Convert.ToString(e.BoundingRectangle.Height) + "Bounds" _
               + Convert.ToString(e.BoundingRectangle.Left) + "," + Convert.ToString(e.BoundingRectangle.Top) + "," + Convert.ToString(e.BoundingRectangle.Right) + "," + Convert.ToString(e.BoundingRectangle.Bottom) + "," _
               + "     WhiteCount" + Convert.ToString(e.WhiteCount) + "    BlackCount" + Convert.ToString(e.BlackCount), "DotRemove Event")

      'Do not remove the speck if it contains any white pixels
      If (e.WhiteCount &gt; 0) Then
         e.Status = RemoveStatus.NoRemove
      Else
         e.Status = RemoveStatus.Remove
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DotRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S1);
         command.Flags            = DotRemoveCommandFlags.UseSize ;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth  = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth  = 1;

         command.Run(image);

      }

      private void DotRemoveEvent_S1(object sender, DotRemoveCommandEventArgs e)
      {
         MessageBox.Show("Size   " + e.BoundingRectangle.Width + e.BoundingRectangle.Height + "Bounds" 
            + e.BoundingRectangle.Left + ","+ e.BoundingRectangle.Top + ","+ e.BoundingRectangle.Right + ","+ e.BoundingRectangle.Bottom + ","
            + "     WhiteCount" + e.WhiteCount + "    BlackCount"+ e.BlackCount,"DotRemove Event" );

         //Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DotRemoveCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DotRemoveCommand();
         command.addEventListener("dotremove", DotRemoveEvent_S1);
         command.flags = DotRemoveCommandFlags.useSize;
         command.maximumDotHeight = 10;
         command.maximumDotWidth = 10;
         command.minimumDotHeight = 1;
         command.minimumDotWidth = 1;

         command.run(image);
      }
   });
}

function DotRemoveEvent_S1(e) {
   console.error("Size   " + e.boundingRectangle.width + "," + e.boundingRectangle.height + " Bounds "
      + e.boundingRectangle.x + "," + e.boundingRectangle.y + "," + e.boundingRectangle.width + "," + e.boundingRectangle.height
      + "     WhiteCount " + e.whiteCount + "    BlackCount " + e.blackCount, " DotRemove Event");

   with (Leadtools.ImageProcessing.Core) {
      //Do not remove the speck if it contains any white pixels
      if (e.whiteCount &gt; 0) {
         e.status = RemoveStatus.noRemove;
      }
      else {
         e.status = RemoveStatus.remove;
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task DotRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S1);
         command.Flags            = DotRemoveCommandFlags.UseSize ;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth  = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth  = 1;

         command.Run(image);

      }

      private void DotRemoveEvent_S1(object sender, DotRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Size   " + e.BoundingRectangle.Width + e.BoundingRectangle.Height + "Bounds" 
            + e.BoundingRectangle.X + ","+ e.BoundingRectangle.Y + ","+ e.BoundingRectangle.Width + ","+ e.BoundingRectangle.Height + ","
            + "     WhiteCount" + e.WhiteCount + "    BlackCount"+ e.BlackCount,"DotRemove Event" );

         //Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }</code>
        <code lang="SilverlightCSharp">      public void DotRemoveCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S1);
         command.Flags            = DotRemoveCommandFlags.UseSize ;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth  = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth  = 1;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void DotRemoveEvent_S1(object sender, DotRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Size   " + e.BoundingRectangle.Width + e.BoundingRectangle.Height + "Bounds" 
            + e.BoundingRectangle.Left + ","+ e.BoundingRectangle.Top + ","+ e.BoundingRectangle.Right + ","+ e.BoundingRectangle.Bottom + ","
            + "     WhiteCount" + e.WhiteCount + "    BlackCount"+ e.BlackCount,"DotRemove Event", MessageBoxButton.OK );

         //Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }</code>
        <code lang="VB">      Public Sub DotRemoveCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DotRemoveCommand = New DotRemoveCommand()
         AddHandler command.DotRemove, AddressOf DotRemoveEvent_S1
         command.Flags = DotRemoveCommandFlags.UseSize
         command.MaximumDotHeight = 10
         command.MaximumDotWidth = 10
         command.MinimumDotHeight = 1
         command.MinimumDotWidth = 1
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub DotRemoveEvent_S1(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs)
         Debug.WriteLine("Size   " &amp; e.BoundingRectangle.Width + e.BoundingRectangle.Height &amp; "Bounds" &amp; e.BoundingRectangle.Left &amp; "," &amp; _ 
                         e.BoundingRectangle.Top &amp; "," &amp; e.BoundingRectangle.Right &amp; "," &amp; e.BoundingRectangle.Bottom &amp; "," &amp; "     _ 
                         WhiteCount" &amp; e.WhiteCount &amp; "    BlackCount" &amp; e.BlackCount,"DotRemove Event", MessageBoxButton.OK)

         'Do not remove the speck if it contains any white pixels
         If e.WhiteCount &gt; 0 Then
            e.Status = RemoveStatus.NoRemove
         Else
            e.Status = RemoveStatus.Remove
         End If
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <objectivec><pre>@interface LTDotRemoveCommand : LTRasterCommand</pre></objectivec><java><pre>public class DotRemoveCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.#ctor">
      <summary>Initializes a new DotRemoveCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public DotRemoveCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.DotRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new DotRemoveCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flag that determines the behavior of the dot removal process.</param>
      <param name="minimumDotWidth">The minimum width of a dot to be removed. If the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="minimumDotHeight">The minimum height of a dot to be removed. If the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> flag is set,
             units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="maximumDotWidth">The maximum width of a dot to be removed. If the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels. </param>
      <param name="maximumDotHeight">The maximum height of a dot to be removed. If the <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels.</param>
      <example>
        <code lang="VB">   Public WithEvents dotRemoveCommandCallback_S2 As DotRemoveCommand
   Public Sub DotRemoveConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      dotRemoveCommandCallback_S2 = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.SingleRegion, 1, 1, 10, 10)
      dotRemoveCommandCallback_S2.Run(leadImage)

   End Sub

   Private Sub DotRemoveCommand_DotRemove_S2(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs) Handles dotRemoveCommandCallback_S2.DotRemove
      ' Do not remove the speck if it contains any white pixels
      If (e.WhiteCount &gt; 0) Then
         e.Status = RemoveStatus.NoRemove
      Else
         e.Status = RemoveStatus.Remove
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DotRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S2);
         command.Run(image);

      }

      private void DotRemoveEvent_S2(object sender, DotRemoveCommandEventArgs e)
      {
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DotRemoveConstructorExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DotRemoveCommand(DotRemoveCommandFlags.useSize | DotRemoveCommandFlags.singleRegion, 1, 1, 10, 10);
         command.addEventListener("dotremove", DotRemoveEvent_S2);
         command.run(image);
      }
   });
}

function DotRemoveEvent_S2(e) {
   with (Leadtools.ImageProcessing.Core) {
      // Do not remove the speck if it contains any white pixels
      if (e.whiteCount &gt; 0) {
         e.status = RemoveStatus.noRemove;
      }
      else {
         e.status = RemoveStatus.remove;
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task DotRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S2);
         command.Run(image);

      }

      private void DotRemoveEvent_S2(object sender, DotRemoveCommandEventArgs e)
      {
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }</code>
        <code lang="SilverlightCSharp">      public void DotRemoveConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand(DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion, 1, 1, 10, 10);
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S2);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void DotRemoveEvent_S2(object sender, DotRemoveCommandEventArgs e)
      {
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0)
         {
            e.Status = RemoveStatus.NoRemove;
         }
         else
         {
            e.Status = RemoveStatus.Remove;
         }
      }</code>
        <code lang="VB">      Public Sub DotRemoveConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DotRemoveCommand = New DotRemoveCommand(DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.SingleRegion, 1, 1, 10, 10)
         AddHandler command.DotRemove, AddressOf DotRemoveEvent_S2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub DotRemoveEvent_S2(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs)
         ' Do not remove the speck if it contains any white pixels
         If e.WhiteCount &gt; 0 Then
            e.Status = RemoveStatus.NoRemove
         Else
            e.Status = RemoveStatus.Remove
         End If
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTDotRemoveCommandFlags)flags 
    minimumDotWidth:(int)minimumDotWidth 
   minimumDotHeight:(int)minimumDotHeight 
    maximumDotWidth:(int)maximumDotWidth 
   maximumDotHeight:(int)maximumDotHeight;            </pre>
      </objectivec>
      <java>
        <pre>
public DotRemoveCommand(
   int flags, 
   int minimumDotWidth, 
   int minimumDotHeight, 
   int maximumDotWidth, 
   int maximumDotHeight
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DotRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Flags">
      <summary>Gets or sets flags that determine the behavior of the dot removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that determine the behavior of the dot removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTDotRemoveCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotWidth">
      <summary>Gets or sets the minimum width of a dot to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum width of a dot to be removed. If <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumDotWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumDotWidth()
public void setMinimumDotWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MinimumDotHeight">
      <summary>Gets or sets the minimum height of a dot to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum height of a dot to be removed. If <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> is set in the Flags property,
             units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumDotHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumDotHeight()
public void setMinimumDotHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotWidth">
      <summary>Gets or sets the maximum width of a dot to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum width of a dot to be removed. If <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> is set in Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumDotWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumDotWidth()
public void setMaximumDotWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.MaximumDotHeight">
      <summary>Gets or sets the maximum height of a dot to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum height of a dot to be removed. If <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.UseDpi</see> is set in Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumDotHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumDotHeight()
public void setMaximumDotHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.ImageRegion">
      <summary>This property is updated with a shallow copy of the image that also has a region that contains the removed dots. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            A shallow copy of the image that also has a region that contains the removed dots.
            </value>
      <remarks>
            If <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see> has been set in Flags, then when 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> returns, this property is updated with a shallow copy of the image that 
            also has a region that contains the removed dots. So set Flags to (<see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see>). It is the programmer's responsibility to 
            dispose of the region when it is no longer needed.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents dotRemoveCommandCallback_S3 As DotRemoveCommand
   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      dotRemoveCommandCallback_S3 = New DotRemoveCommand
      dotRemoveCommandCallback_S3.Flags = DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.SingleRegion Or DotRemoveCommandFlags.LeadRegion
      dotRemoveCommandCallback_S3.MaximumDotHeight = 10
      dotRemoveCommandCallback_S3.MaximumDotWidth = 10
      dotRemoveCommandCallback_S3.MinimumDotHeight = 1
      dotRemoveCommandCallback_S3.MinimumDotWidth = 1
      dotRemoveCommandCallback_S3.Run(leadImage)

   End Sub

   Private Sub DotRemoveCommand_DotRemove_S3(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs) Handles dotRemoveCommandCallback_S3.DotRemove
      ' Do not remove the speck if it contains any white pixels
      If (e.WhiteCount &gt; 0) Then
         e.Status = RemoveStatus.NoRemove
      Else
         e.Status = RemoveStatus.Remove
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S3);
         command.Flags = DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion | DotRemoveCommandFlags.LeadRegion;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth = 1;

         command.Run(image);

      }

      private void DotRemoveEvent_S3(object sender, DotRemoveCommandEventArgs e)
      {               
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DotRemoveCommand();
         command.addEventListener("dotremove", DotRemoveEvent_S3);
         command.flags = DotRemoveCommandFlags.useSize | DotRemoveCommandFlags.singleRegion | DotRemoveCommandFlags.leadRegion;
         command.maximumDotHeight = 10;
         command.maximumDotWidth = 10;
         command.minimumDotHeight = 1;
         command.minimumDotWidth = 1;

         command.run(image);
      }
   });
}

function DotRemoveEvent_S3(e) {
   with (Leadtools.ImageProcessing.Core) {
      // Do not remove the speck if it contains any white pixels
      if (e.whiteCount &gt; 0) {
         e.status = RemoveStatus.noRemove;
      }
      else {
         e.status = RemoveStatus.remove;
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S3);
         command.Flags = DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion | DotRemoveCommandFlags.LeadRegion;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth = 1;

         command.Run(image);

      }

      private void DotRemoveEvent_S3(object sender, DotRemoveCommandEventArgs e)
      {               
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else 
         {
            e.Status= RemoveStatus.Remove;
         }
      }</code>
        <code lang="SilverlightCSharp">      public void ImageRegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DotRemoveCommand command = new DotRemoveCommand();
         command.DotRemove += new EventHandler&lt;DotRemoveCommandEventArgs&gt;(DotRemoveEvent_S3);
         command.Flags = DotRemoveCommandFlags.UseSize | DotRemoveCommandFlags.SingleRegion | DotRemoveCommandFlags.LeadRegion;
         command.MaximumDotHeight = 10;
         command.MaximumDotWidth = 10;
         command.MinimumDotHeight = 1;
         command.MinimumDotWidth = 1;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void DotRemoveEvent_S3(object sender, DotRemoveCommandEventArgs e)
      {
         // Do not remove the speck if it contains any white pixels
         if (e.WhiteCount &gt; 0) 
         {
            e.Status= RemoveStatus.NoRemove;
         }
         else
         {
            e.Status= RemoveStatus.Remove;
         }
      }</code>
        <code lang="VB">      Public Sub ImageRegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DotRemoveCommand = New DotRemoveCommand()
         AddHandler command.DotRemove, AddressOf DotRemoveEvent_S3
         command.Flags = DotRemoveCommandFlags.UseSize Or DotRemoveCommandFlags.SingleRegion Or DotRemoveCommandFlags.LeadRegion
         command.MaximumDotHeight = 10
         command.MaximumDotWidth = 10
         command.MinimumDotHeight = 1
         command.MinimumDotWidth = 1
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub DotRemoveEvent_S3(ByVal sender As Object, ByVal e As DotRemoveCommandEventArgs)
         ' Do not remove the speck if it contains any white pixels
         If e.WhiteCount &gt; 0 Then
            e.Status= RemoveStatus.NoRemove
         Else
            e.Status= RemoveStatus.Remove
         End If
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* imageRegion;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImageRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DotRemoveCommand.Region">
      <summary>Gets the handle to a windows region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Handle to a windows region.</value>
      <remarks>
            When <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" /> returns, 
            this property is updated with a single windows region corresponding to all changes, only if <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see> 
            has been set in Flags and <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.LeadRegion</see> has not been set. To use this property, set the Flags to 
            <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommandFlags">DotRemoveCommandFlags.SingleRegion</see>. It is the programmer's responsibility to dispose of this region when the region is no longer needed.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.DotRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">DotRemoveCommandEventArgs(RasterImage,Region,LeadRect,int,int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.DotRemoveCommand.DotRemove">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, unsafe_unretained) id&lt;LTDotRemoveCommandDelegate&gt; delegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addDotRemoveCommandListener(DotRemoveCommandListener listener)
public void removeDotRemoveCommandListener(DotRemoveCommandListener listener)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags">
      <summary>
        <para>Flags that determine the behavior of blank page detection process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTBlankPageDetectorCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum BlankPageDetectorCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectEmptyPage">
      <summary>A blank page must be totally blank. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DetectEmptyPage</pre>
      </objectivec>
      <java>
        <pre>DETECT_EMPTY_PAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectNoisyPage">
      <summary>A blank page may have some noise. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DetectNoisyPage</pre>
      </objectivec>
      <java>
        <pre>DETECT_NOISY_PAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontIgnoreBleedThrough">
      <summary>A blank page cannot have bleed-through on the page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DontIgnoreBleedThrough</pre>
      </objectivec>
      <java>
        <pre>DONT_IGNORE_BLEED_THROUGH</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.IgnoreBleedThrough">
      <summary>A blank page can have bleed-through on the page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_IgnoreBleedThrough</pre>
      </objectivec>
      <java>
        <pre>IGNORE_BLEED_THROUGH</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontDetectLinedPage">
      <summary>A blank page cannot have lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DontDetectLinedPage</pre>
      </objectivec>
      <java>
        <pre>DONT_DETECT_LINED_PAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DetectLinedPage">
      <summary>A blank page can have lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DetectLinedPage</pre>
      </objectivec>
      <java>
        <pre>DETECT_LINED_PAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.DontUseActiveArea">
      <summary>Do not ignore blank space around the page edges. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_DontUseActiveArea</pre>
      </objectivec>
      <java>
        <pre>DONT_USE_ACTIVE_AREA</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseActiveArea">
      <summary>Ignore blank space around the page edges. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_UseActiveArea</pre>
      </objectivec>
      <java>
        <pre>USE_ACTIVE_AREA</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseDefaultMargins">
      <summary>Use default margins, which are computed automatically based on the page dimensions. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_UseDefaultMargins</pre>
      </objectivec>
      <java>
        <pre>USE_DEFAULT_MARGINS</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags.UseUserMargins">
      <summary>Use the user-specified margins. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBlankPageDetectorCommandFlags_UseUserMargins</pre>
      </objectivec>
      <java>
        <pre>USE_USER_MARGINS</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand">
      <summary>Detects whether an image is a blank page. 
             This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document\Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Blank page detection|bleed-through|Is blank|Empty pages|Scanning|Documents|Detecting blank pages</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>
             For various reasons, documents being scanned can contain a significant number of blank pages. 
             Disk storage space for the scanned items can be reduced if such pages can be removed 
             before the documents are stored. 
             This command detects whether a page is blank and returns 
             an accuracy value. It can detect blank pages (despite noise, bleed-through, or lines) with 
             high precision and speed.  
             </description>
          </item>
          <item>
            <description>This command does not support 12- or 16-bit grayscale or 
             48- or 64-bit color images (Exception: Image format not recognized).</description>
          </item>
          <item>
            <description>This command does not support signed data images (Exception: Signed image data not supported).</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>For Silverlight and Windows Phone, to load a 24-bit color images, set the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap" /> 
             property to false.</description>
          </item>
        </list>
        <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
             command will fail if the image data for the RasterImage object is stored internally
              using a Silverlight WriteableBitmap object.  For more information,
             refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para>
      </remarks>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"></seealso>.
             <objectivec><pre>@interface LTBlankPageDetectorCommand : LTRasterCommand</pre></objectivec><java><pre>public class BlankPageDetectorCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public BlankPageDetectorCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.#ctor(Leadtools.ImageProcessing.Core.BlankPageDetectorCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new BlankPageDetectorCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flag that determines the behavior of the blank page detection process.</param>
      <param name="LeftMargin">Number of pixels to exclude from the left of the image.</param>
      <param name="TopMargin">Number of pixels to exclude from the top of the image.</param>
      <param name="RightMargin">Number of pixels to exclude from the right of the image.</param>
      <param name="BottomMargin">Number of pixels to exclude from the bottom of the image.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTBlankPageDetectorCommandFlags)flags 
         leftMargin:(unsigned int)leftMargin 
          topMargin:(unsigned int)topMargin 
        rightMargin:(unsigned int)rightMargin 
       bottomMargin:(unsigned int)bottomMargin;            </pre>
      </objectivec>
      <java>
        <pre>
public BlankPageDetectorCommand(
  int flags, 
  int LeftMargin, 
  int TopMargin, 
  int RightMargin, 
  int BottomMargin
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.ToString">
      <summary>Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.IsBlank">
      <summary>(Read-only) Gets a value that indicates whether the page is blank or not. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the page is blank; false otherwise.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isBlank;</pre>
      </objectivec>
      <java>
        <pre>public boolean isBlank()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.Accuracy">
      <summary>The accuracy of the result, in hundredths of a percent. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The accuracy of the result. Possible values range from 0 through 10000. 
            This value is divided internally by 100.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int accuracy;</pre>
      </objectivec>
      <java>
        <pre>public int getAccuracy()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.LeftMargin">
      <summary>Number of pixels to exclude from the left of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Number of pixels to exclude from the left of the image. 
            Possible values range from 0 to the image's width, in pixels.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int leftMargin;</pre>
      </objectivec>
      <java>
        <pre>
public int getLeftMargin()
public void setLeftMargin(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.RightMargin">
      <summary>Number of pixels to exclude from the Right of the image <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Number of pixels to exclude from the Right of the image. 
            Possible values range from 0 to the image's width, in pixels.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int rightMargin;</pre>
      </objectivec>
      <java>
        <pre>
public int getRightMargin()
public void setRightMargin(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.TopMargin">
      <summary>Number of pixels to exclude from the Top of the image <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Number of pixels to exclude from the Top of the image. 
            Possible values range from 0 to the image's height, in pixels.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int topMargin;</pre>
      </objectivec>
      <java>
        <pre>
public int getTopMargin()
public void setTopMargin(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.BottomMargin">
      <summary>Number of pixels to exclude from the Bottom of the image <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Number of pixels to exclude from the Bottom of the image. 
            Possible values range from 0 to the image's height, in pixels.</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bottomMargin;</pre>
      </objectivec>
      <java>
        <pre>
public int getBottomMargin()
public void setBottomMargin(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand.Flags">
      <summary>Gets or sets flags that indicate whether the page is empty or noisy, 
            whether to ignore bleed-through, 
            whether to ignore lines, whether to use the active area and whether to 
            use default margins or the user-specified margins. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Gets or sets flags that indicate whether the page is empty or noisy, 
            whether to ignore bleed-through, 
            whether to ignore lines, whether to use the active area 
            and whether to use default margins or the user-specified margins.
             The default value is BlankPageDetectorCommandFlags::DetectEmptyPage | BlankPageDetectorCommandFlags::DontIgnoreBleedThrough
            | BlankPageDetectorCommandFlags::DontDetectLinedPage | BlankPageDetectorCommandFlags::DontUseActiveArea | BlankPageDetectorCommandFlags::UseDefaultMargins</value>
      <example>
        <code lang="VB">   Public Sub BlankPageDetectorCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand
        'Determine whether the image is blank.
      command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage

      command.Run(leadImage)
      MessageBox.Show(" Is Blank   : " &amp; command.IsBlank &amp; "\n Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", "Blank Page Detection Results")


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         MessageBox.Show(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BlankPageDetectorCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.flags = BlankPageDetectorCommandFlags.detectNoisyPage;
         command.run(image);

         console.error(" Is Blank   : " + command.isBlank + "\n Accuracy : " + (command.accuracy * 1.0 / 100) + "% ", "Blank Page Detection Results");
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task BlankPageDetectorCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);

         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results");

      }</code>
        <code lang="SilverlightCSharp">      public void BlankPageDetectorCommandExample(RasterImage image)
      {
         // Prepare the command
         BlankPageDetectorCommand command = new BlankPageDetectorCommand();
         //Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage;
         command.Run(image);
         Debug.WriteLine(" Is Blank   : " + command.IsBlank + "\n Accuracy : " + (command.Accuracy * 1.0 / 100) + "%", "Blank Page Detection Results", MessageBoxButton.OK);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub BlankPageDetectorCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As BlankPageDetectorCommand = New BlankPageDetectorCommand()
         'Determine whether the image is a blank page
         command.Flags = BlankPageDetectorCommandFlags.DetectNoisyPage
         command.Run(image)
         Debug.WriteLine(" Is Blank   : " &amp; command.IsBlank + Constants.vbLf &amp; " Accuracy : " &amp; (command.Accuracy * 1.0 / 100) &amp; "%", _
                         "Blank Page Detection Results", MessageBoxButton.OK)

         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTBlankPageDetectorCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags">
      <summary>Enumeration that specifies the behavior when resizing the image.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that indicate the type of resizing</td><td>Normal, Resample, Bicubic</td></tr><tr><td>Flags that indicate the color to preserve when making the image smaller</td><td>FavorBlack, FavorWhite</td></tr></table></remarks>
      <noexample />
      <objectivec>
        <pre>enum LTApplyTransformationParametersCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum ApplyTransformationParametersCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.None">
      <summary>No change. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Normal">
      <summary>Resize normally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_Normal</pre>
      </objectivec>
      <java>
        <pre>NORMAL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Resample">
      <summary>Use linear interpolation and averaging to produce a higher-quality image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_Resample</pre>
      </objectivec>
      <java>
        <pre>RESAMPLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.Bicubic">
      <summary>Use bicubic interpolation and averaging to produce a higher quality image. This is slower than Resample. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_Bicubic</pre>
      </objectivec>
      <java>
        <pre>BICUBIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.FavorBlack">
      <summary>(<see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> only) Preserve black objects when making the image smaller. This option affects only 1-bit, black-and-white images, where it prevents the disappearance of thin lines. You can use a bitwise OR ( | ) to combine this flag with another one. For example, Resample | FavorBlack causes color images to be resampled, but applies the favor-black option to 1-bit, black-and-white images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_FavorBlack</pre>
      </objectivec>
      <java>
        <pre>FAVOR_BLACK</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags.FavorWhite">
      <summary>(<see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> only) Preserve white objects when making the image smaller. This option affects only 1-bit, black-and-white images, where it prevents the disappearance of thin lines. You can use a bitwise OR ( | ) to combine this flag with another one. For example, Resample | FavorWhite causes color images to be resampled, but applies the favor-white option to 1-bit, black-and-white images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTApplyTransformationParametersCommandFlags_FavorWhite</pre>
      </objectivec>
      <java>
        <pre>FAVOR_WHITE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand">
      <summary>Corrects the image by removing the translation, rotation, and scaling deformations that have been applied on the image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command corrects the image by removing the translation, rotation, and scaling deformations that have been applied to the image. These transformations make this image match a reference image.</description>
          </item>
          <item>
            <description>This command is designed to work with <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</description>
          </item>
          <item>
            <description>You can get the translation, rotation, and scaling parameters by using <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />; the returned values must be passed as they are to ApplyTransformationParametersCommand method.</description>
          </item>
          <item>
            <description>The shift operation is performed first, followed by the rotation and resize operations.</description>
          </item>
          <item>
            <description>If you simply want to automatically straighten the image, use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" /> for sample code.
            </example>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>.L_Deskew
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])"></seealso>.
            <objectivec><pre>@interface LTApplyTransformationParametersCommand : LTRasterCommand</pre></objectivec><java><pre>public class ApplyTransformationParametersCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub ApplyTransformationParametersConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim tempImage As RasterImage
      tempImage = leadImage

      Try
         tempImage = leadImage.Clone()
         If (tempImage.HasRegion) Then
            tempImage.MakeRegionEmpty()
         End If
         If (leadImage.HasRegion) Then
            leadImage.MakeRegionEmpty()
         End If

         Dim rmData() As SearchRegistrationMarksCommandData
         ReDim rmData(2)

         Dim points() As LeadPoint
         ReDim points(0)

         ' Mark1
         rmData(0) = New SearchRegistrationMarksCommandData
         rmData(0).Rectangle = New LeadRect(680, 20, 941 - 680, 218 - 20)
         rmData(0).MarkDetectedPoints = points
         rmData(0).Width = 31
         rmData(0).Height = 29
         rmData(0).Type = RegistrationMarkCommandType.TShape
         rmData(0).MinimumScale = 90
         rmData(0).MaximumScale = 110
         rmData(0).SearchMarkCount = 1

         ' Mark2
         rmData(1) = New SearchRegistrationMarksCommandData
         rmData(1).Rectangle = New LeadRect(665, 790, 899 - 665, 961 - 790)
         rmData(1).MarkDetectedPoints = points
         rmData(1).Width = 31
         rmData(1).Height = 29
         rmData(1).Type = RegistrationMarkCommandType.TShape
         rmData(1).MinimumScale = 90
         rmData(1).MaximumScale = 110
         rmData(1).SearchMarkCount = 1

         ' Mark3
         rmData(2) = New SearchRegistrationMarksCommandData(31, 29, 90, 110, New LeadRect(7, 1073, 298 - 7, 1246 - 1073), 1, points, RegistrationMarkCommandType.TShape)

         Dim command1 As SearchRegistrationMarksCommand
         command1 = New SearchRegistrationMarksCommand
         command1.SearchMarks = rmData
         command1.Run(leadImage)

         If ((rmData(2).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(1).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(0).MarkDetectedCount &lt;&gt; 1)) Then
            Return
         End If

         Dim original() As LeadPoint
         ReDim original(2)
         original(0) = New LeadPoint(81400, 11300)
         original(1) = New LeadPoint(78600, 87400)
         original(2) = New LeadPoint(14300, 115400)

         Dim detected() As LeadPoint
         ReDim detected(2)
         detected(0) = rmData(0).MarkDetectedPoints(0)
         detected(1) = rmData(1).MarkDetectedPoints(0)
         detected(2) = rmData(2).MarkDetectedPoints(0)

         ' Find center of mass for detected registration marks in the transformed image
         Dim transformed() As LeadPoint
         transformed = CoreUtilities.GetRegistrationMarksCenterMass(leadImage, detected)

         ' Find transformation parameters
         Dim parameters As TransformationParameters
         parameters = CoreUtilities.GetTransformationParameters(leadImage, original, transformed)

         ' Apply transformatin parameters to correct the image
         Dim applyCommand As ApplyTransformationParametersCommand
         applyCommand = New ApplyTransformationParametersCommand
         applyCommand.XTranslation = parameters.XTranslation
         applyCommand.YTranslation = parameters.YTranslation
         applyCommand.Angle = parameters.Angle
         applyCommand.XScale = parameters.XScale
         applyCommand.YScale = parameters.YScale
         applyCommand.Flags = ApplyTransformationParametersCommandFlags.Normal
         applyCommand.Run(tempImage)

      Catch e As Exception
         MessageBox.Show(e.Message)
      End Try

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyTransformationParametersConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage tempImage = image;
         try
         {
            tempImage = image.Clone();
            if (tempImage.HasRegion)
               tempImage.MakeRegionEmpty();
            if (image.HasRegion)
               image.MakeRegionEmpty();
            SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

            // Mark1
            rmData[0] = new SearchRegistrationMarksCommandData();
            rmData[0].Rectangle = new LeadRect (680, 20, 941 - 680, 218 - 20);
            rmData[0].MarkDetectedPoints = new LeadPoint[1];
            rmData[0].Width = 31;
            rmData[0].Height = 29;
            rmData[0].Type = RegistrationMarkCommandType.TShape;
            rmData[0].MinimumScale = 90;
            rmData[0].MaximumScale = 110;
            rmData[0].SearchMarkCount =1;

            // Mark2
            rmData[1] = new SearchRegistrationMarksCommandData();
            rmData[1].Rectangle = new LeadRect(665,790,899-665,961-790);
            rmData[1].MarkDetectedPoints = new LeadPoint[1];
            rmData[1].Width = 31;
            rmData[1].Height = 29;
            rmData[1].Type = RegistrationMarkCommandType.TShape;
            rmData[1].MinimumScale = 90;
            rmData[1].MaximumScale = 110;
            rmData[1].SearchMarkCount =1;

            // Mark3
            rmData[2] = new SearchRegistrationMarksCommandData(31, 29, 90, 110, new LeadRect(7,1073,298-7,1246-1073), 1, new LeadPoint[1], RegistrationMarkCommandType.TShape);
            SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand();
            command1.SearchMarks = rmData;
            command1.Run(image);

            if((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
               return;

            LeadPoint[] original =
               {
                  new LeadPoint(81400, 11300),
                  new LeadPoint(78600, 87400),
                  new LeadPoint(14300, 115400)
               };

            LeadPoint[] detected =
               {
                  rmData[0].MarkDetectedPoints[0],
                  rmData[1].MarkDetectedPoints[0],
                  rmData[2].MarkDetectedPoints[0]
               };

            // Find center of mass for detected registration marks in the transformed image
            LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
            // Find transformation parameters
            TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
            // Apply transformatin parameters to correct the image
            ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand();
            applyCommand.XTranslation = parameters.XTranslation;
            applyCommand.YTranslation = parameters.YTranslation;
            applyCommand.Angle = parameters.Angle;
            applyCommand.XScale = parameters.XScale;
            applyCommand.YScale = parameters.YScale;
            applyCommand.Flags  = ApplyTransformationParametersCommandFlags.Normal;
            applyCommand.Run(tempImage);
         }
         catch(Exception exception)
         {
            MessageBox.Show(exception.Message);
         }

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //   
   //   public async Task ApplyTransformationParametersConstructorExample()
   //   {
   //      // Load an image
   //      RasterCodecs codecs = new RasterCodecs();
   //      codecs.ThrowExceptionsOnInvalidImages = true;

   //      // Load the image
   //      string srcFileName = @"Assets\Image1.cmp";
   //      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //      // Prepare the command
   //      RasterImage tempImage = image;
   //      try
   //      {
   //         tempImage = image.Clone();
   //         if (tempImage.HasRegion)
   //            tempImage.MakeRegionEmpty();
   //         if (image.HasRegion)
   //            image.MakeRegionEmpty();
   //         SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];
            
   //         // Mark1
   //         rmData[0] = new SearchRegistrationMarksCommandData();
   //         rmData[0].Rectangle = new LeadRect (680, 20, 941 - 680, 218 - 20);
   //         rmData[0].MarkDetectedPoints = new LeadPoint[1];
   //         rmData[0].Width = 31;
   //         rmData[0].Height = 29;
   //         rmData[0].Type = RegistrationMarkCommandType.TShape;
   //         rmData[0].MinimumScale = 90;
   //         rmData[0].MaximumScale = 110;
   //         rmData[0].SearchMarkCount =1;
            
   //         // Mark2
   //         rmData[1] = new SearchRegistrationMarksCommandData();
   //         rmData[1].Rectangle = LeadRectHelper.Create(665,790,899-665,961-790);
   //         rmData[1].MarkDetectedPoints = new LeadPoint[1];
   //         rmData[1].Width = 31;
   //         rmData[1].Height = 29;
   //         rmData[1].Type = RegistrationMarkCommandType.TShape;
   //         rmData[1].MinimumScale = 90;
   //         rmData[1].MaximumScale = 110;
   //         rmData[1].SearchMarkCount =1;
            
   //         // Mark3
   //         rmData[2] = new SearchRegistrationMarksCommandData(31, 29, 90, 110, LeadRectHelper.Create(7,1073,298-7,1246-1073), 1, new LeadPoint[1], RegistrationMarkCommandType.TShape);
   //         SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand();
   //         command1.SearchMarks = rmData;
   //         command1.Run(image);
            
   //         if((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
   //            return;
               
   //         LeadPoint[] original =
   //            {
   //               LeadPointHelper.Create(81400, 11300),
   //               LeadPointHelper.Create(78600, 87400),
   //               LeadPointHelper.Create(14300, 115400)
   //            };
               
   //         LeadPoint[] detected =
   //            {
   //               rmData[0].MarkDetectedPoints[0],
   //               rmData[1].MarkDetectedPoints[0],
   //               rmData[2].MarkDetectedPoints[0]
   //            };
               
   //         // Find center of mass for detected registration marks in the transformed image
   //         LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
   //         // Find transformation parameters
   //         TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
   //         // Apply transformatin parameters to correct the image
   //         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand();
   //         applyCommand.XTranslation = parameters.XTranslation;
   //         applyCommand.YTranslation = parameters.YTranslation;
   //         applyCommand.Angle = parameters.Angle;
   //         applyCommand.XScale = parameters.XScale;
   //         applyCommand.YScale = parameters.YScale;
   //         applyCommand.Flags  = ApplyTransformationParametersCommandFlags.Normal;
   //         applyCommand.Run(tempImage);
   //      }
   //      catch(Exception exception)
   //      {
   //         Debug.WriteLine(exception.Message);
   //      }

   //   }
   //    </code>
        <code lang="SilverlightCSharp">      public void ApplyTransformationParametersConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         RasterImage tempImage = image;
         tempImage = image.Clone();
         if (tempImage.HasRegion)
            tempImage.MakeRegionEmpty();
         if (image.HasRegion)
            image.MakeRegionEmpty();
         // Apply transformatin parameters to correct the image
         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand();
         applyCommand.XTranslation = 10;
         applyCommand.YTranslation = 10;
         applyCommand.Angle = 500;
         applyCommand.XScale = 1;
         applyCommand.YScale = 2;
         applyCommand.Flags = ApplyTransformationParametersCommandFlags.Normal;
         applyCommand.Run(tempImage);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyTransformationParametersConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim tempImage As RasterImage = image
         tempImage = image.Clone()
         If tempImage.HasRegion Then
            tempImage.MakeRegionEmpty()
         End If
         If image.HasRegion Then
            image.MakeRegionEmpty()
         End If
         ' Apply transformatin parameters to correct the image
         Dim applyCommand As ApplyTransformationParametersCommand = New ApplyTransformationParametersCommand()
         applyCommand.XTranslation = 10
         applyCommand.YTranslation = 10
         applyCommand.Angle = 500
         applyCommand.XScale = 1
         applyCommand.YScale = 2
         applyCommand.Flags = ApplyTransformationParametersCommandFlags.Normal
         applyCommand.Run(tempImage)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ApplyTransformationParametersCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="xTranslation">The amount of image translation along the x-axis (Width). This value is internally divided by 100. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</param>
      <param name="yTranslation">The amount of image translation (in pixels) along the y-axis (Height). This value is internally divided by 100. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</param>
      <param name="angle">Angle of rotation, in hundredths of degrees (+/-). This can be a number from 1 to 36,000. This value is internally divided by 100. A positive value means the image rotated in a clockwise rotation, while a negative value means the image rotated in a counter-clockwise rotation. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</param>
      <param name="xScale">The amount of image x-axis (Width) scaling. This is a percentage value (internally divided by 100). This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />. This parameter accepts only positive values.</param>
      <param name="yScale">The amount of image y-axis (Height) scaling. This is a percentage value (internally divided by 100). This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />. This parameter accepts only positive values.</param>
      <param name="flags">Flag that specifies the behavior when resizing the image.</param>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])">GetTransformationParameters</see></example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithXTranslation:(int)xTranslation 
              yTranslation:(int)yTranslation 
                     angle:(int)angle 
                    xScale:(unsigned int)xScale 
                    yScale:(unsigned int)yScale 
                     flags:(LTApplyTransformationParametersCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ApplyTransformationParametersCommand(
   int xTranslation, 
   int yTranslation, 
   int angle, 
   int xScale, 
   int yScale, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.XTranslation">
      <summary>Gets or sets the amount of image translation along the x-axis (Width). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The amount of image translation along the x-axis (Width). This value is internally divided by 100. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int xTranslation;</pre>
      </objectivec>
      <java>
        <pre>
public int getXTranslation()
public void setXTranslation(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.YTranslation">
      <summary>Gets or sets the amount of image translation (in pixels) along the y-axis (Height). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The amount of image translation (in pixels) along the y-axis (Height). This value is internally divided by 100. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int yTranslation;</pre>
      </objectivec>
      <java>
        <pre>
public int getYTranslation()
public void setYTranslation(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.Angle">
      <summary>Gets or sets the angle of rotation, in hundredths of degrees(+/-). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Angle of rotation, in hundredths of degrees(+/-). This can be a number from 1 to 36,000. This value is internally divided by 100. A positive value means the image is rotated clockwise, while a negative value means the image is rotated counter-clockwise. This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.XScale">
      <summary>gets or sets the amount of image x-axis (Width) scaling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The amount of image x-axis (Width) scaling. This is a percentage value (internally divided by 100). This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getXScale()
public void setXScale(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.YScale">
      <summary>Gets or sets the amount of image y-axis (Height) scaling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The amount of image y-axis (Height) scaling. This is a percentage value (internally divided by 100). This value must be equal to the one returned from <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />. This parameter accepts only positive values.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getYScale()
public void setYScale(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.Flags">
      <summary>Gets or sets a value that specifies the behavior when resizing the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Enumerated value that specifies the behavior when resizing the image.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTApplyTransformationParametersCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SelectDataCommand">
      <summary>Selects a specific number of bits of an 8, 12 or 16-bit grayscale image and puts them into a mask, then colors the image depending on the mask. This can show image variances depending on user-defined conditions. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command is used as a visualization aid. You can select certain bits of the supported type image and show the variances of that image under conditions that you define.</description>
          </item>
          <item>
            <description>For 8, 12 and 16-bit grayscale image, the source low bit can range from 0 to 7, 11, and 15 respectively. However if this value exceeded the range then the method will not return an error, and the DestinationImage will be a pure black image.</description>
          </item>
          <item>
            <description>For 8, 12 and 16-bit grayscale image, the source high bit can range from source low bit to 7, 11, and 15 respectively. No error will be returned if source high bit is greater than 7, 11 or 15. The command will return an invalid parameter error if source high bit &lt; source low bit.</description>
          </item>
          <item>
            <description>The command will first construct a mask from bits source low bit through source high bit. For each pixel, the pixel value will be combined with the mask using a bitwise 'and' operation. The result will be shifted to the right by source low bit. This result will be compared with the threshold: if the value is greater than or equal to the threshold, the output pixel's color is changed using the Color property or the color parameter if you ar using the appropriate Constructor. If the result is less than the threshold, the output is set to 0.</description>
          </item>
          <item>
            <description>The following example shows you how to treat a 16-bit grayscale image:<br /><list type="bullet"><item><description>In a 16-bit grayscale image, the bits are ordered as b15 b14 b13 ... b2 b1 b0.</description></item><item><description>For  SourceLowBit = 3, SourceHighBit = 8, Threshold = 16 and Color = new <see cref="T:Leadtools.RasterColor" />(0, 255, 0)</description></item><item><description>In Source image (SourceImage)</description></item><item><description>                -------------------                    </description></item><item><description>b15 b14 b13 b12 b11 b10 b9 |b8 b7 b6 b5 b4 b3| b2 b1 b0</description></item><item><description>                -------------------                    </description></item><item><description>  0   1   1   0   1   1  1   0  1  0  0  1  1   1  0  1</description></item></list></description>
          </item>
          <item>
            <description>In our case, the mask is 010011 in base 2 (19 in decimal). Since 19 &gt;= 16, the destination pixel will be colored using the Color property (or the color parameter of the Constructor). The output pixel will be:<br /><list type="bullet"><item><description>if Combine = false: Color = new <see cref="T:Leadtools.RasterColor" />(0,255,0)</description></item><item><description>if Combine = true: we take the high byte of the source pixel, which is 01101110 in base 2 (0x6E), and then the value is AND-ed with each component of the color. So the output pixel will be RGB(0x00 &amp; 0x6E, 0xFF &amp; 0x6E, 0x00 &amp; 0x6E) which is  RGB(0x00, 0x6E, 0x00).</description></item></list></description>
          </item>
          <item>
            <description>Let us consider another case: the source pixel is 0110111000011101 the mask value is 000011 in base 2(3 in decimal). Since 3 &gt; 16, the destination pixel will be:<br /><list type="bullet"><item><description>if the combine value = false: Color = new <see cref="T:Leadtools.RasterColor" />(0,0,0)</description></item><item><description>if the combine value = true: The high byte of the source pixel will bet set for the RGB, that is RGB(0x6E, 0x6E, 0x6E).</description></item></list></description>
          </item>
          <item>
            <description>This command supports 8, 12 and 16-bit grayscale bitmaps only. Support for 12 and 16-bit grayscale images are available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits. It also can process the whole image or a region of the image. If an image has a region, the effect is applied only to the region.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub SelectDataCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As SelectDataCommand = New SelectDataCommand
      command.Color = New RasterColor(233, 10, 77)
      command.Combine = True
      command.SourceLowBit = 2
      command.SourceHighBit = 6
      command.Threshold = 25

      command.Run(leadImage)
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "SelectDataResult.bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SelectDataCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         SelectDataCommand command = new SelectDataCommand();
         command.Color = new RasterColor(233, 10, 77);
         command.Combine = true;
         command.SourceLowBit = 2;
         command.SourceHighBit = 6;
         command.Threshold = 25;

         command.Run(image);
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "SelectDataResult.Bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SelectDataCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SelectDataCommand();
         command.color = Leadtools.RasterColorHelper.create(233, 10, 77);
         command.combine = true;
         command.sourceLowBit = 2;
         command.sourceHighBit = 6;
         command.threshold = 25;
         
         command.run(image);
         processedImage = command.destinationImage;
      }
      var destFileName = "SelectDataResult.bmp";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(processedImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task SelectDataCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SelectDataCommand command = new SelectDataCommand();
         command.Color = RasterColorHelper.Create(233, 10, 77);
         command.Combine = true;
         command.SourceLowBit = 2;
         command.SourceHighBit = 6;
         command.Threshold = 25;

         command.Run(image);

         string destFileName = @"SelectDataResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
      </example>
      <seealso cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.SelectDataCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" /> class obejct with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SelectDataCommand.#ctor(Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="color">Color used for showing the variances in the image.</param>
      <param name="sourceLowBit">Position of the start bit that will construct the mask. The position is a zero based number. This parameter accepts only positive values.</param>
      <param name="sourceHighBit">Position of the end bit that will construct the mask. This is inclusive (it is part of the mask). The value should not be less than sourceLowBit. You can also pass -1, which is interpreted as "highest bit" (SourceImage-&gt;BitsPerPixel - 1). This parameter accepts only positive values.</param>
      <param name="threshold">Value that indicates the threshold for showing the image variances. If the mask value is greater or equal to the threshold value then the pixel will be colored using Color. See Combine for more details. This parameter accepts only positive values.</param>
      <param name="combine">A flag which tells how to color the output pixels:<br /><list type="number"><item><description> Pixels with values greater than or equal to the threshold value are set to the value in the color parameter(if combine is set to false) or AND-ed with color (if combine is true). In this case, the source pixel is first converted to grayscale 24-bit and then AND-ed with color.</description></item><item><description> Pixels with values less than the threshold value are set to black (if combine is set to false) or The RGB pixel value will be the same as the high byte source pixel value (if combine is true). That is R = G = B = High byte values of the source pixel.</description></item></list></param>
      <example>
        <code lang="VB">   Public Sub SelectDataConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As SelectDataCommand = New SelectDataCommand(New RasterColor(233, 10, 77), 2, 6, 25, True)
      command.Run(leadImage)
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "SelectDataResult.bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SelectDataConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         SelectDataCommand command = new SelectDataCommand(new RasterColor(233, 10, 77), 2, 6, 25, true);
         command.Run(image);
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "SelectDataResult.Bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SelectDataConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SelectDataCommand(Leadtools.RasterColorHelper.create(233, 10, 77), 2, 6, 25, true);
         command.run(image);
         processedImage = command.destinationImage;
      }
      var destFileName = "SelectDataResult.bmp";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(processedImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task SelectDataConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SelectDataCommand command = new SelectDataCommand(RasterColorHelper.Create(233, 10, 77), 2, 6, 25, true);
         command.Run(image);

         string destFileName = @"SelectDataResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SelectDataCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SelectDataCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SelectDataCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.DestinationImage">
      <summary>RasterImage object that references the 8, 12 or 16-bit grayscale image. SourceImage will not be affected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>RasterImage that references the 8, 12 or 16-bit grayscale image. SourceImage will not be affected.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.Color">
      <summary>Gets or sets the color used for showing the variances in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Color used for showing the variances in the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.SourceLowBit">
      <summary>Gets or sets the position of the start bit that will construct the mask. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Position of the start bit that will construct the mask. The position is a zero based number. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.SourceHighBit">
      <summary>Gets or sets the position of the end bit that will construct the mask. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Position of the end bit that will construct the mask. This is inclusive (it is part of the mask). 
            The value should not be less than SourceLowBit. You can also set -1, which is interpreted as "highest bit" (SourceImage-&gt;BitsPerPixel - 1). 
            This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.Threshold">
      <summary>Gets or sets a value that indicates the threshold for showing the image variances. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that indicates the threshold for showing the image variances. If the mask value is greater or equal to 
            the threshold value then the pixel will be colored using Color. See Combine for more details. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SelectDataCommand.Combine">
      <summary>Gets or sets a flag which tells how to color the output pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>A flag which tells how to color the output pixels:<br /><list type="number"><item><description> Pixels with values greater than or equal to the threshold value are set to 
            Color (if Combine is set to false) or AND-ed with Color (if Combine is true). In this case, the source pixel 
            is first converted to grayscale 24-bit and then AND-ed with Color.</description></item><item><description> Pixels with values less than the threshold value are set to black (if Combine is set to false) or 
            the RGB pixel value will be the same as the high byte source pixel value (if Combine is true). That is R = G = B = High byte values of the source pixel.</description></item></list></value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MinimumCommand">
      <summary>Dilates dark objects by the specified amount.This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command can process the whole image or a region of the image.</description>
          </item>
          <item>
            <description>The effect can be controlled by specifying the size of the neighborhood that is used for calculating each pixel value. For example, for 8x8, 
            set the Dimension property to 8 or pass 8 for the dimension parameter of the Constructor. Each pixel is replaced with the minimum value of its neighborhood.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color 
            images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub MinimumCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MinimumCommand = New MinimumCommand
      'Apply the Minimum filter.
      command.Dimension = 3

      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MinimumCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MinimumCommand command = new MinimumCommand();
         //Apply the Minimum filter.
         command.Dimension = 3;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MinimumCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MinimumCommand();
         //Apply the Minimum filter.
         command.dimension = 3;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MinimumCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MinimumCommand command = new MinimumCommand();
         //Apply the Minimum filter.
         command.Dimension = 3;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MinimumCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MinimumCommand command = new MinimumCommand();
         //Apply the Minimum filter.
         command.Dimension = 3;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MinimumCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MinimumCommand = New MinimumCommand()
         'Apply the Minimum filter.
         command.Dimension = 3
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
            <objectivec><pre>@interface LTMinimumCommand : LTRasterCommand</pre></objectivec><java><pre>public class MinimumCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.#ctor">
      <summary>Initializes a new MinimumCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MinimumCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.#ctor(System.Int32)">
      <summary>Initializes a new MinimumCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="dimension">Dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. This parameter accepts only positive values.</param>
      <example>
        <code lang="VB">   Public Sub MinimumConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MinimumCommand = New MinimumCommand(3)
      ' Apply the Minimum filter.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MinimumCommandConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MinimumCommand command = new MinimumCommand(3);
         // Apply the Minimum filter.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MinimumCommandConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MinimumCommand(3);
         // Apply the Minimum filter.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MinimumCommandConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MinimumCommand command = new MinimumCommand(3);
         // Apply the Minimum filter.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MinimumCommandConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MinimumCommand command = new MinimumCommand(3);
         // Apply the Minimum filter.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MinimumCommandConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MinimumCommand = New MinimumCommand(3)
         ' Apply the Minimum filter.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithDimension:(unsigned int)dimension;</pre>
      </objectivec>
      <java>
        <pre>public MinimumCommand(int dimension)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinimumCommand.Dimension">
      <summary>Gets or sets the dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinimumCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int dimension;</pre>
      </objectivec>
      <java>
        <pre>
public int getDimension()
public void setDimension(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.CorrelationListCommand">
      <summary>Compares the images in a list with all the areas of the same 
            dimensions in an image and finds those portions that match according 
            to the measure of correlation. This method is only available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description> This method compares the images in a list with all the areas of the same dimensions in image and 
            finds those areas that match according to the measure of correlation. </description>
          </item>
          <item>
            <description> All the list images must have the same dimensions. The dimensions must be less than or equal to 
            the image dimensions.</description>
          </item>
          <item>
            <description> Correlation is a measure of association (resemblance) between two images. It varies from 0 (zero 
            resemblance) to 100 (perfect resemblance). </description>
          </item>
          <item>
            <description> This method updates the <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points" /> parameter 
            with the point of origin for those areas of the image 
            where the resemblance with an image in the list is greater than the value of <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold" />.  
            It also updates <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.ListIndex" />  with the index of that image.  </description>
          </item>
          <item>
            <description> For example: 
            <list type="number"><item><description> Select images of the objects for which you want to look and put them in a list
            <br />For example:<br /><img src="CorList_a.gif" /><br /><img src="CorList_d.gif" /></description></item><item><description> Select an image that contains the objects for which you are searching.
            <br />For example:<br /><img src="CorList_Org.gif" /></description></item><item><description> Set <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.XStep" /> = 1, <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.YStep" /> = 1
            and <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold" /> = 90 then run the command </description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points" /> array will be updated with 
            the point of origin (top-left) for each area of the image where 
            the correlation with an image in the list is greater than the correlation 
            <see cref="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold" />. The height 
            and width of the rectangles are the same as for 
            list images. </description></item><item><description> The result <br /><img src="CorList_Res.gif" /></description></item></list></description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>If the image has a region, this method works only on 
            the region. If the image does not have a region, this method works on the
            entire image.</description>
          </item>
          <item>
            <description>This method does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
        <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para>
      </remarks>
      <example>
        <code lang="VB">   Public Sub CorrelationListCommandExample()
      ' Load an image
      Dim codecs As RasterCodecs = New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      Dim command As CorrelationListCommand = New CorrelationListCommand()
      Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()

      Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      command.CorrelationImage = copyRectangle.DestinationImage.Clone()

      rc_cor = New LeadRect(283, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      command.CorrelationImage.AddPage(copyRectangle.DestinationImage.Clone())

      Dim points(30) As LeadPoint
      Dim listIndex(30) As Integer

      command.Points = points
      command.ListIndex = listIndex
      command.Threshold = 90
      command.XStep = 1
      command.YStep = 1
      command.Run(image)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CorrelationListCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         CorrelationListCommand command = new CorrelationListCommand();
         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage.AddPage(copyRectangle.DestinationImage.Clone());

         command.Points = new LeadPoint[30];
         command.ListIndex = new int[30];
         command.Threshold = 90;
         command.XStep = 1;
         command.YStep = 1;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function CorrelationListCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new CorrelationListCommand();
         var copyRectangle = new Leadtools.ImageProcessing.CopyRectangleCommand();

         var rc_cor = Leadtools.LeadRectHelper.create(327, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         command.correlationImage = copyRectangle.destinationImage.clone();

         rc_cor = Leadtools.LeadRectHelper.create(283, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         command.correlationImage.addPage(copyRectangle.destinationImage.clone());

         command.points = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            command.points[i] = Leadtools.LeadPointHelper.create(0, 0);

         command.listIndex = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            command.listIndex[i] = 0;

         command.threshold = 90;
         command.xStep = 1;
         command.yStep = 1;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task CorrelationListCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         CorrelationListCommand command = new CorrelationListCommand();
         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = LeadRectHelper.Create(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = LeadRectHelper.Create(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage.AddPage(copyRectangle.DestinationImage.Clone());

         command.Points = new LeadPoint[30];
         command.ListIndex = new int[30];
         command.Threshold = 90;
         command.XStep = 1;
         command.YStep = 1;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void CorrelationListCommandExample(RasterImage image, Stream outStream)
      {
         CorrelationListCommand command = new CorrelationListCommand();
         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();
         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         command.CorrelationImage.AddPage(copyRectangle.DestinationImage.Clone());

         command.Points = new LeadPoint[30];
         command.ListIndex = new int[30];
         command.Threshold = 90;
         command.XStep = 1;
         command.YStep = 1;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CorrelationListCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         Dim command As CorrelationListCommand = New CorrelationListCommand()
         Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()
         Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         command.CorrelationImage = copyRectangle.DestinationImage.Clone()

         rc_cor = New LeadRect(283, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         command.CorrelationImage.AddPage(copyRectangle.DestinationImage.Clone())

         command.Points = New LeadPoint(29){}
         command.ListIndex = New Integer(29){}
         command.Threshold = 90
         command.XStep = 1
         command.YStep = 1
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>.
            <objectivec><pre>@interface LTCorrelationListCommand : LTRasterCommand</pre></objectivec><java><pre>public class CorrelationListCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public CorrelationListCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor(Leadtools.RasterImage,Leadtools.LeadPoint[],System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="correlationImage">RasterImage object that references the image(s) for which to search.</param>
      <param name="points">Array of <see cref="T:Leadtools.LeadPoint" /> objects to be updated with the starting points of the correlated areas.</param>
      <param name="listIndex">Array of integers to be updated with the indices of the images that match correlated areas.</param>
      <param name="xStep">Step size in the X direction (along image width), in pixels. For best results, use 1.</param>
      <param name="yStep">Step size in the Y direction (along image height), in pixels. For best results, use 1.</param>
      <param name="threshold">Value that indicates the correlation threshold, which is a measure of the association 
            necessary for two areas to be considered to be correlated. If the correlation value between an image in the list 
            and an area in the reference image is less than the correlation threshold they are uncorrelated. 
            Valid values range from 0 (zero resemblance) to 100 (perfect resemblance).</param>
      <example>
        <code lang="VB">   Public Sub CorrelationListConstructorExample()
      ' Load an image
      Dim codecs As RasterCodecs = New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()

      Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      Dim correlationImage As RasterImage = copyRectangle.DestinationImage.Clone()

      rc_cor = New LeadRect(283, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      correlationImage.AddPage(copyRectangle.DestinationImage.Clone())

      Dim points(30) As LeadPoint
      Dim listIndex(30) As Integer

      Dim command As CorrelationListCommand = New CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90)
      command.Run(image)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CorrelationListConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function CorrelationListConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var copyRectangle = new Leadtools.ImageProcessing.CopyRectangleCommand();

         var rc_cor = Leadtools.LeadRectHelper.create(327, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         var correlationImage = copyRectangle.destinationImage.clone();

         rc_cor = Leadtools.LeadRectHelper.create(283, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         correlationImage.addPage(copyRectangle.destinationImage.clone());

         var points = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            points[i] = Leadtools.LeadPointHelper.create(0, 0);

         var listIndex = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            listIndex[i] = 0;

         var command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task CorrelationListConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = LeadRectHelper.Create(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = LeadRectHelper.Create(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void CorrelationListConstructorExample(RasterImage image, Stream outStream)
      {
         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();
         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CorrelationListConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()
         Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         Dim correlationImage As RasterImage = copyRectangle.DestinationImage.Clone()

         rc_cor = New LeadRect(283, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone())

         Dim points As LeadPoint() = New LeadPoint(29){}
         Dim listIndex As Integer() = New Integer(29){}

         Dim command As CorrelationListCommand = New CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90)
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithCorrelationImage:(LTRasterImage*)correlationImage 
                        points:(LeadPoint*)points 
                     listIndex:(unsigned int*)listIndex 
                   pointsCount:(unsigned int)pointsCount 
                         xStep:(unsigned int)xStep 
                         yStep:(unsigned int)yStep 
                     threshold:(unsigned int)threshold;            </pre>
      </objectivec>
      <java>
        <pre>
public CorrelationListCommand(
   RasterImage correlationImage, 
   LeadPoint[] points, 
   int[] listIndex, 
   int xStep, 
   int yStep, 
   int threshold
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.#ctor(Leadtools.LeadPoint[],System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="points">Array of <see cref="T:Leadtools.LeadPoint" /> objects to be updated with the starting points of the correlated areas.</param>
      <param name="listIndex">Array of integers to be updated with the indices of the images that match correlated areas.</param>
      <param name="xStep">Step size in the X direction (along image width), in pixels. For best results, use 1.</param>
      <param name="yStep">Step size in the Y direction (along image height), in pixels. For best results, use 1.</param>
      <param name="threshold">Value that indicates the correlation threshold, which is a measure of the association 
            necessary for two areas to be considered to be correlated. If the correlation value between an image in the list 
            and an area in the reference image is less than the correlation threshold they are uncorrelated. 
            Valid values range from 0 (zero resemblance) to 100 (perfect resemblance).</param>
      <example>
        <code lang="VB">   Public Sub CorrelationListConstructorExample()
      ' Load an image
      Dim codecs As RasterCodecs = New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()

      Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      Dim correlationImage As RasterImage = copyRectangle.DestinationImage.Clone()

      rc_cor = New LeadRect(283, 378, 22, 28)
      copyRectangle.Rectangle = rc_cor
      copyRectangle.Run(image)
      correlationImage.AddPage(copyRectangle.DestinationImage.Clone())

      Dim points(30) As LeadPoint
      Dim listIndex(30) As Integer

      Dim command As CorrelationListCommand = New CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90)
      command.Run(image)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CorrelationListConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function CorrelationListConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var copyRectangle = new Leadtools.ImageProcessing.CopyRectangleCommand();

         var rc_cor = Leadtools.LeadRectHelper.create(327, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         var correlationImage = copyRectangle.destinationImage.clone();

         rc_cor = Leadtools.LeadRectHelper.create(283, 378, 22, 28);
         copyRectangle.rectangle = rc_cor;
         copyRectangle.run(image);
         correlationImage.addPage(copyRectangle.destinationImage.clone());

         var points = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            points[i] = Leadtools.LeadPointHelper.create(0, 0);

         var listIndex = new Array();
         //Size the array to 30
         for (var i = 0; i &lt; 30; i++)
            listIndex[i] = 0;

         var command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task CorrelationListConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();

         LeadRect rc_cor = LeadRectHelper.Create(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = LeadRectHelper.Create(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void CorrelationListConstructorExample(RasterImage image, Stream outStream)
      {
         CopyRectangleCommand copyRectangle = new CopyRectangleCommand();
         LeadRect rc_cor = new LeadRect(327, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         RasterImage correlationImage = copyRectangle.DestinationImage.Clone();

         rc_cor = new LeadRect(283, 378, 22, 28);
         copyRectangle.Rectangle = rc_cor;
         copyRectangle.Run(image);
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone());

         LeadPoint[] points = new LeadPoint[30];
         int[] listIndex = new int[30];

         CorrelationListCommand command = new CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90);
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CorrelationListConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         Dim copyRectangle As CopyRectangleCommand = New CopyRectangleCommand()
         Dim rc_cor As LeadRect = New LeadRect(327, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         Dim correlationImage As RasterImage = copyRectangle.DestinationImage.Clone()

         rc_cor = New LeadRect(283, 378, 22, 28)
         copyRectangle.Rectangle = rc_cor
         copyRectangle.Run(image)
         correlationImage.AddPage(copyRectangle.DestinationImage.Clone())

         Dim points As LeadPoint() = New LeadPoint(29){}
         Dim listIndex As Integer() = New Integer(29){}

         Dim command As CorrelationListCommand = New CorrelationListCommand(correlationImage, points, listIndex, 1, 1, 90)
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithPoints:(LeadPoint*)points 
           listIndex:(unsigned int*)listIndex 
         pointsCount:(unsigned int)pointsCount 
               xStep:(unsigned int)xStep 
               yStep:(unsigned int)yStep 
           threshold:(unsigned int)threshold;            </pre>
      </objectivec>
      <java>
        <pre>
public CorrelationListCommand(
   LeadPoint[] points, 
   int[] listIndex, 
   int xStep, 
   int yStep, 
   int threshold
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>string that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationListCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Points">
      <summary>Gets or sets an array of <see cref="T:Leadtools.LeadPoint" /> objects to be updated with the starting points of the correlated areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Array of <see cref="T:Leadtools.LeadPoint" /> to be updated with the starting points of the correlated areas.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LeadPoint* points;</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint[] getPoints()
public void setPoints(LeadPoint[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.pointsCount_objectivec">
      <summary>Get or set the count of points <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length for each of the points and listIndex arrays</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int pointsCount;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.CorrelationImage">
      <summary>Gets or sets the RasterImage object that references the image(s) for which to search. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>RasterImage that references the image(s) for which to search.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* correlationImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getCorrelationImage()
public void setCorrelationImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.ListIndex">
      <summary>Gets or sets an array of integers to be updated with the indices of the images that match correlated areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Array of integers to be updated with the indices of the images that match correlated areas.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int*  listIndex;</pre>
      </objectivec>
      <java>
        <pre>
public int[] getListIndex()
public void setListIndex(int[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.XStep">
      <summary>Gets or sets a value that represents the step size in the X direction (along image width), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the step size in the X direction (along image width), in pixels. For best results, use 1.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xStep;</pre>
      </objectivec>
      <java>
        <pre>
public int getXStep()
public void setXStep(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.YStep">
      <summary>Gets or sets a value that represents the step size in the Y direction (along image height), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value represents the step size in the Y direction (along image height), in pixels. For best results, use 1.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yStep;</pre>
      </objectivec>
      <java>
        <pre>
public int getYStep()
public void setYStep(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.Threshold">
      <summary>Gets or sets a value that indicates the correlation threshold. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the correlation threshold, 
            which is a measure of association required to consider 
            two areas to be correlated. If the correlation value 
            between an image in the list and an area in the image 
            is less than the correlation threshold they are uncorrelated. 
            Valid values range from 0 (zero resemblance) to 100 (perfect resemblance).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int threshold;</pre>
      </objectivec>
      <java>
        <pre>
public int getThreshold()
public void setThreshold(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationListCommand.NumberOfPoints">
      <summary>Gets a value that indicates the number of areas in the 
            image actually found to be correlated to one or more of 
            the listed images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the number of areas in the image 
            actually found to be correlated to one or more of the listed images.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationListCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int numberOfPoints;</pre>
      </objectivec>
      <java>
        <pre>public int getNumberOfPoints()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MaximumCommand">
      <summary>Erodes dark objects by the specified amount. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command can process the whole image or a region of the image.</description>
          </item>
          <item>
            <description>The effect can be controlled by specifying the size of the neighborhood that is used for calculating each pixel value. For example, for 8x8, set Dimension property (or the dimension parameter of the Constructor) to 8. Each pixel is replaced with the maximum value of its neighborhood.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub MaximumCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MaximumCommand = New MaximumCommand
      'Apply Maximum filter.
      command.Dimension = 3

      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MaximumCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MaximumCommand command = new MaximumCommand();
         //Apply Maximum filter.
         command.Dimension = 3;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MaximumCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MaximumCommand();
         //Apply Maximum filter.
         command.dimension = 3;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MaximumCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MaximumCommand command = new MaximumCommand();
         //Apply Maximum filter.
         command.Dimension = 3;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MaximumCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MaximumCommand command = new MaximumCommand();
         //Apply Maximum filter.
         command.Dimension = 3;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MaximumCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MaximumCommand = New MaximumCommand()
         'Apply Maximum filter.
         command.Dimension = 3
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
            <objectivec><pre>@interface LTMaximumCommand : LTRasterCommand</pre></objectivec><java><pre>public class MaximumCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.#ctor">
      <summary>Initializes a new MaximumCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MaximumCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.#ctor(System.Int32)">
      <summary>Initializes a new MaximumCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="dimension">Dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. This parameter accepts only positive values.</param>
      <example>
        <code lang="VB">   Public Sub MaximumConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MaximumCommand = New MaximumCommand(3)
      ' Apply Maximum filter.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MaximumConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MaximumCommand command = new MaximumCommand(3);
         // Apply Maximum filter.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MaximumConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MaximumCommand(3);
         // Apply Maximum filter.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MaximumConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MaximumCommand command = new MaximumCommand(3);
         // Apply Maximum filter.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MaximumConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MaximumCommand command = new MaximumCommand(3);
         // Apply Maximum filter.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MaximumConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MaximumCommand = New MaximumCommand(3)
         ' Apply Maximum filter.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithDimension:(unsigned int)dimension;</pre>
      </objectivec>
      <java>
        <pre>public MaximumCommand(int dimension)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MaximumCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MaximumCommand.Dimension">
      <summary>Gets or sets the dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Dimensions of the neighborhood used for filtering (Dimension x Dimension), in pixels. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MaximumCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int dimension;</pre>
      </objectivec>
      <java>
        <pre>
public int getDimension()
public void setDimension(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">
      <summary>
        <para>Flags that determine the behavior of the line removal process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTLineRemoveCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum LineRemoveCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseDpi">
      <summary>The unit of measure for all properties of the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> 
            is thousandths of an inch. Use the image's DPI to convert to pixels. This allows the processing of many images 
            with different DPI. If this flag is not set, the unit of measure for all properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> is pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_UseDpi</pre>
      </objectivec>
      <java>
        <pre>USE_DPI</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.SingleRegion">
      <summary>For each line found by <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>, the removed line is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>, 
            the line is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region" /> will 
            reference a region that contains all the removed lines. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion" /> will be 
            updated with a shallow copy of image that has a LEAD region that contains all the removed lines. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all the removed lines. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed of (either region allocated in <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_SingleRegion</pre>
      </objectivec>
      <java>
        <pre>SINGLE_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.LeadRegion">
      <summary>When <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion" /> 
            is updated with a shallow copy of affected image that also contains a region with all the removed lines. 
            This flag must be used in conjunction with SingleRegion. So set <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags" /> to SingleRegion | LeadRegion <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_LeadRegion</pre>
      </objectivec>
      <java>
        <pre>LEAD_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.CallBackRegion">
      <summary>The <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region" /> property receives a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> 
            that contains the current line to be removed. Setting this flag lets the user create his or her own composite of removed 
            lines by combining the regions received, if <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>. The regions can be combined using a logical OR operator. 
            Combining all regions received when the <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> results in a region identical to the region created 
            when SingleRegion is set in <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags" />. 
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />. 
            When the region received by the <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region" /> property 
            is no longer needed, it must be disposed of. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_CallBackRegion</pre>
      </objectivec>
      <java>
        <pre>CALLBACK_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.ImageUnchanged">
      <summary>The affected image (the Run method image)is unchanged. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_ImageUnchanged</pre>
      </objectivec>
      <java>
        <pre>IMAGE_UNCHANGED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.RemoveEntire">
      <summary>Remove the entire line, even if the line passes through a character or a wall.
            <br>Consider the line below. </br><br><img src="Wall1.jpg" /></br><br>Setting iMaxWallPercent as 80 and passing LINE_REMOVE_ENTIRE will remove the red pixels as shown below.</br><br><img src="Wall3.jpg" /></br><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_RemoveEntire</pre>
      </objectivec>
      <java>
        <pre>REMOVE_ENTIRE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseGap">
      <summary>Consider "gaps" in lines when performing line removal. If this flag is set, the gap length value (either the <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.GapLength" /> property or the gapLength parameter of the Constructor)
            is used. If this flag is not passed, the gap length value is ignored. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_UseGap</pre>
      </objectivec>
      <java>
        <pre>USE_GAP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags.UseVariance">
      <summary>Consider line variance when performing line removal.  If this flag is passed, the variance value (either the <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Variance" /> property or the variance parameter of the Constructor)
            is used. If this flag is not passed, the variance value is ignored. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandFlags_UseVariance</pre>
      </objectivec>
      <java>
        <pre>USE_VARIANCE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandType">
      <summary>
        <para>Flag that indicates which lines to remove.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTLineRemoveCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum LineRemoveCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandType.Horizontal">
      <summary>(0x00000001)Remove horizontal lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandType_Horizontal</pre>
      </objectivec>
      <java>
        <pre>HORIZONTAL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LineRemoveCommandType.Vertical">
      <summary>(0x00000002)Remove vertical lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLineRemoveCommandType_Vertical</pre>
      </objectivec>
      <java>
        <pre>VERTICAL</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs">
      <summary>Handles each line found by <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S4 As LineRemoveCommand
   Public Sub LineRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S4 = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
      lineRemoveCommand_S4.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S4.LineRemove
      Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length)
      e.Status = RemoveStatus.Remove
      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function LineRemoveCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand(LineRemoveCommandFlags.useGap | LineRemoveCommandFlags.callBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.horizontal);
         command.addEventListener("lineremove", LineRemoveEvent_S4);
         command.run(image);
      }
   });
}

function LineRemoveEvent_S4(e)
{
   with (Leadtools.ImageProcessing.Core) {
      var ee = new LineRemoveCommandEventArgs(e.image, e.region, e.startRow, e.startColumn, e.length);
      e.status = RemoveStatus.remove;
      if (e.region != null)
         e.Image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }</code>
        <code lang="SilverlightCSharp">      public void LineRemoveCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
          LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, null, e.StartRow, e.StartColumn, e.Length);
          e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub LineRemoveCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or _
                                                                  LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
          Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, Nothing, e.StartRow, e.StartColumn, e.Length)
          e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTLineRemoveCommandEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class LineRemoveCommandEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new LineRemoveCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">Affected image</param>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the line to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</param>
      <param name="startRow">The starting row of the line. The rows are zero-based.</param>
      <param name="startColumn">The starting column of the line. The columns are zero-based.</param>
      <param name="length">Length (in pixels) of the line.</param>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S4 As LineRemoveCommand
   Public Sub LineRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S4 = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
      lineRemoveCommand_S4.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S4.LineRemove
      Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length)
      e.Status = RemoveStatus.Remove
      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function LineRemoveCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand(LineRemoveCommandFlags.useGap | LineRemoveCommandFlags.callBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.horizontal);
         command.addEventListener("lineremove", LineRemoveEvent_S4);
         command.run(image);
      }
   });
}

function LineRemoveEvent_S4(e)
{
   with (Leadtools.ImageProcessing.Core) {
      var ee = new LineRemoveCommandEventArgs(e.image, e.region, e.startRow, e.startColumn, e.length);
      e.status = RemoveStatus.remove;
      if (e.region != null)
         e.Image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }</code>
        <code lang="SilverlightCSharp">      public void LineRemoveCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
          LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, null, e.StartRow, e.StartColumn, e.Length);
          e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub LineRemoveCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or _
                                                                  LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
          Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, Nothing, e.StartRow, e.StartColumn, e.Length)
          e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithImage:(LTRasterImage*)image 
             region:(LTRasterRegion*)region 
           startRow:(int)startRow 
           startCol:(int)startCol 
             length:(int)length;            </pre>
      </objectivec>
      <java>
        <pre>
public LineRemoveCommandEvent(
   Object source, 
   RasterImage image, 
   RasterRegion region, 
   int startRow, 
   int startColumn, 
   int length
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Image">
      <summary>Gets an <see cref="T:Leadtools.RasterImage" /> object that references the affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> object that references the affected image.</value>
      <example>
            Refer to the <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,System.Int32,System.Int32,System.Int32)">LineRemoveCommandEventArgs(RasterImage, Region, int, int, int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Region">
      <summary>Gets a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the line to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the line to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</value>
      <example>
            Refer to the <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,System.Int32,System.Int32,System.Int32)">LineRemoveCommandEventArgs(RasterImage, Region, int, int, int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.StartRow">
      <summary>Gets the starting row of the line. The rows are zero-based. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The starting row of the line. The rows are zero-based.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int startRow;</pre>
      </objectivec>
      <java>
        <pre>public int getStartRow()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.StartColumn">
      <summary>Gets the starting column of the line. The columns are zero-based. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The starting column of the line. The columns are zero-based.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int startCol;</pre>
      </objectivec>
      <java>
        <pre>public int getStartColumn()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Length">
      <summary>Gets the length (in pixels) of the line. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Length (in pixels) of the line.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int length;</pre>
      </objectivec>
      <java>
        <pre>public int getLength()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs.Status">
      <summary>Gets or sets a value that represents the status of the line remove process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value the represents the status of the line remove process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRemoveStatus status;</pre>
      </objectivec>
      <java>
        <pre>
public RemoveStatus getStatus()
public void setStatus(RemoveStatus value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LineRemoveCommand">
      <summary>Removes horizontal and vertical lines in a 1-bit black and white image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Document cleanup|Removing|Horizontal lines|Cleanup|1-bit images|Vertical lines</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description> This command removes horizontal and vertical lines from scanned text documents. 
            If the lines pass through text, the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> properties/Constructor parameters can be configured 
            to remove or preserve the text. The behavior of this command can be further modified by using an Event Handler that handles the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandEventArgs" />. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S1 As LineRemoveCommand
   Public Sub LineRemoveCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S1 = New LineRemoveCommand
      lineRemoveCommand_S1.Type = LineRemoveCommandType.Horizontal
      lineRemoveCommand_S1.Flags = LineRemoveCommandFlags.UseGap
      lineRemoveCommand_S1.GapLength = 2
      lineRemoveCommand_S1.MaximumLineWidth = 5
      lineRemoveCommand_S1.MinimumLineLength = 200
      lineRemoveCommand_S1.MaximumWallPercent = 10
      lineRemoveCommand_S1.Wall = 7
      lineRemoveCommand_S1.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S1(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S1.LineRemove
      MessageBox.Show("Row Col " + "( " + e.StartRow.ToString() + ", " + e.StartColumn.ToString() + " )" + _
                   Chr(13) + " Length " + e.Length.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void LineRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove       += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S1);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseGap;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall        = 7;
         command.Run(image);

      }

      private void LineRemoveEvent_S1(object sender, LineRemoveCommandEventArgs e)
      {
         MessageBox.Show("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function LineRemoveCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand();
         command.addEventListener("lineremove", LineRemoveEvent_S1);
         command.type = LineRemoveCommandType.horizontal;
         command.flags = LineRemoveCommandFlags.useGap;
         command.gapLength = 2;
         command.maximumLineWidth = 5;
         command.minimumLineLength = 200;
         command.maximumWallPercent = 10;
         command.wall = 7;
         command.run(image);
      }
   });
}

function LineRemoveEvent_S1(e) {
   console.error("Row Col " + "( " + e.startRow.toString() + ", " + e.startColumn + " )" +
      "\n Length " + e.length.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task LineRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove       += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S1);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall        = 7;
         command.Run(image);

      }

      private void LineRemoveEvent_S1(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void LineRemoveCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove       += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S1);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseGap;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall        = 7;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S1(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub LineRemoveCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand()
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S1
         command.Type = LineRemoveCommandType.Horizontal
         command.Flags = LineRemoveCommandFlags.UseGap
         command.GapLength = 2
         command.MaximumLineWidth = 5
         command.MinimumLineLength = 200
         command.MaximumWallPercent = 10
         command.Wall = 7
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S1(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
         Debug.WriteLine("Row Col " &amp; "( " &amp; e.StartRow.ToString() &amp; ", " &amp; e.StartColumn &amp; " )" &amp; Constants.vbLf &amp; " Length " &amp; e.Length.ToString())
         e.Status= RemoveStatus.Remove
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <objectivec><pre>@interface LTLineRemoveCommand : LTRasterCommand</pre></objectivec><java><pre>public class LineRemoveCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor">
      <summary>Initializes a new LineRemoveCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public LineRemoveCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.LineRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.LineRemoveCommandType)">
      <summary>Initializes a new LineRemoveCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flags that determine the behavior of the line removal process.</param>
      <param name="minimumLineLength">Minimum length of a line considered for removal.  Lines less than this length are not 
             removed. If the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> flag is set,
              units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="maximumLineWidth">Maximum <u>average</u> width of a line that is considered for removal. 
             Lines that are greater in average width are not removed. If the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> 
             flag is set, units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="wall">Height of a wall. Walls are slices of a line that are too wide to be considered part of the line.
              Examples of walls include a character that a line passes through or a perpendicular line. If the image contains 
              lines that pass through characters, set Wall to be equal to or a little larger than MaximumLineWidth. 
              If the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> flag is set, 
              units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="maximumWallPercent">The maximum number of wall slices (expressed as a percent of the total length of the line)
              that are allowed. A line consists of wall slices and non-wall slices (see description of Wall).  This parameter specifies 
              that maximum number of wall slices (expressed as a percent of the total length of the line) that are allowed.  Lines 
              that have a wall percent that is larger than maximumWallPercent will not be removed.  For example, consider the line 
              below that is 10 pixels in length, and 1 pixel in height in some places, and five pixels in height in other places. 
              <br><img src="Wall1.jpg" /></br><br>Setting minimumLineLength to 10 pixels and wall to four pixels will identify the line below as a candidate for removal.
                Note that the wall percent for this line is 60 percent (because six of ten line slices are walls).  If maximumWallPercent 
                is 80 then the line will be removed (actually, the pixels marked as red will be removed).  If maximumWallPercent is 
                30, then the line will not be removed.</br><br><img src="Wall2.jpg" /></br></param>
      <param name="gapLength">Maximum length of a break or a hole in a line. This can be used to remove dotted lines, dashed lines,
              or lines that have breaks due to scanning. If the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> flag
              is set, units are in thousandths of an inch, otherwise units are in pixels. This parameter is valid only if the 
              <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> flag is set.</param>
      <param name="variance">Amount of width change that is tolerated between adjacent line slices. 
             If the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> flag is set, units are in thousandths 
             of an inch, otherwise units are in pixels. This parameter is valid only if the <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseVariance</see> flag
             is set. For example, the following horizontal line is 30 pixels in length (X represents a pixel)
             <br><img src="LineRemoveVar.jpg" /></br><br>If variance is 2 pixels (i.e. tolerate width changes of 2 pixels or less), the first 10 columns and the last 10 columns 
             of the line will be removed. The middle 10 columns will be unchanged. This helps preserve characters that intersect a line 
             that is being removed.</br></param>
      <param name="type">Flag that indicates which lines to remove.</param>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S2 As LineRemoveCommand
   Public Sub LineRemoveConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S2 = New LineRemoveCommand(LineRemoveCommandFlags.UseVariance Or LineRemoveCommandFlags.SingleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
      lineRemoveCommand_S2.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S2(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S2.LineRemove
      MessageBox.Show("Row Col " + "( " + e.StartRow.ToString() + ", " + e.StartColumn.ToString() + " )" + _
         Chr(13) + " Length " + e.Length.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void LineRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand( LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S2);
         command.Run(image);

      }

      private void LineRemoveEvent_S2(object sender, LineRemoveCommandEventArgs e)
      {
         MessageBox.Show("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function LineRemoveConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand( LineRemoveCommandFlags.useVariance | LineRemoveCommandFlags.singleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.horizontal);
         command.addEventListener("lineremove", LineRemoveEvent_S2);
         command.run(image);
      }
   });
}

function LineRemoveEvent_S2(e)
{
   console.error("Row Col " + "( " + e.startRow.toString() + ", " + e.startColumn + " )" +
      "\n Length " + e.length.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task LineRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand( LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S2);
         command.Run(image);

      }

      private void LineRemoveEvent_S2(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void LineRemoveConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand( LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S2);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S2(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub LineRemoveConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand(LineRemoveCommandFlags.UseVariance Or _
                                                                  LineRemoveCommandFlags.SingleRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S2(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
         Debug.WriteLine("Row Col " &amp; "( " &amp; e.StartRow.ToString() &amp; ", " &amp; e.StartColumn &amp; " )" &amp; Constants.vbLf &amp; " Length " &amp; e.Length.ToString())
         e.Status= RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTLineRemoveCommandFlags)flags 
  minimumLineLength:(int)minimumLineLength 
   maximumLineWidth:(int)maximumLineWidth 
               wall:(int)wall 
 maximumWallPercent:(int)maximumWallPercent 
          gapLength:(int)gapLength 
           variance:(int)variance 
               type:(LTLineRemoveCommandType)type;             </pre>
      </objectivec>
      <java>
        <pre>
public LineRemoveCommand(
   int flags, 
   int minimumLineLength, 
   int maximumLineWidth, 
   int wall, 
   int maximumWallPercent, 
   int gapLength, 
   int variance, 
   LineRemoveCommandType type
)             </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Flags">
      <summary>Gets or sets flags that determine the behavior of the line removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that determine the behavior of the line removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTLineRemoveCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MinimumLineLength">
      <summary>Gets or sets the minimum length of a line considered for removal. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Minimum length of a line considered for removal.  Lines less than this length are not 
            removed. If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> is set in the Flags property,
             units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumLineLength;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumLineLength()
public void setMinimumLineLength(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MaximumLineWidth">
      <summary>Gets or sets the maximum <u>average</u> width of a line that is considered for removal. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Maximum <u>average</u> width of a line that is considered for removal. 
            Lines that are greater in average width are not removed. If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> 
            is set in the Flags property, units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumLineWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumLineWidth()
public void setMaximumLineWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Wall">
      <summary>Gets or sets the height of a wall. Walls are slices of a line that are too wide to be considered part of the line. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Height of a wall. Walls are slices of a line that are too wide to be considered part of the line.
             Examples of walls include a character that a line passes through or a perpendicular line. If the image contains 
             lines that pass through characters, set Wall to be equal to or a little larger than MaximumLineWidth. 
             If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> is set in the Flags property, 
             units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int wall;</pre>
      </objectivec>
      <java>
        <pre>
public int getWall()
public void setWall(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.MaximumWallPercent">
      <summary>Gets or sets the maximum number of wall slices (expressed as a percent of the total length of the line) that are allowed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum number of wall slices (expressed as a percent of the total length of the line)
             that are allowed. A line consists of wall slices and non-wall slices (see description of Wall).  This property specifies 
             the maximum number of wall slices (expressed as a percent of the total length of the line) that are allowed.  Lines 
             that have a wall percent that is larger than maximumWallPercent will not be removed.  For example, consider the line 
             below that is 10 pixels in length, and 1 pixel in height in some places, and five pixels in height in other places. 
             <br><img src="Wall1.jpg" /></br><br>Setting MinimumLineLength to 10 pixels and Wall to four pixels will identify the line below as a candidate for removal.
             Note that the wall percent for this line is 60 percent (because six of ten line slices are walls).  If MaximumWallPercent 
             is 80 then the line will be removed (actually, the pixels marked as red will be removed).  If MaximumWallPercent is 
             30, then the line will not be removed.</br><br><img src="Wall2.jpg" /></br></value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumWallPercent;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumWallPercent()
public void setMaximumWallPercent(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.GapLength">
      <summary>Gets or sets the maximum length of a break or a hole in a line. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Maximum length of a break or a hole in a line. This can be used to remove dotted lines, dashed lines,
             or lines that have breaks due to scanning. If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> 
             is set in the Flags property, units are in thousandths of an inch, otherwise units are in pixels. This property is valid only if 
             <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> is set in the Flags property.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int gapLength;</pre>
      </objectivec>
      <java>
        <pre>
public int getGapLength()
public void setGapLength(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Variance">
      <summary>Gets or sets the amount of width change that is tolerated between adjacent line slices. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Amount of width change that is tolerated between adjacent line slices. 
            If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseDpi</see> is set in the Flags property, units are in thousandths 
            of an inch, otherwise units are in pixels. This property is valid only if <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.UseVariance</see> 
            is set in the Flags property. For example, the following horizontal line is 30 pixels in length (X represents a pixel)
            <br><img src="LineRemoveVar.jpg" /></br><br>If Variance is 2 pixels (i.e. tolerate width changes of 2 pixels or less), the first 10 columns and the last 10 columns 
            of the line will be removed. The middle 10 columns will be unchanged. This helps preserve characters that intersect a line 
            that is being removed.</br></value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int variance;</pre>
      </objectivec>
      <java>
        <pre>
public int getVariance()
public void setVariance(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Type">
      <summary>Flag that indicates which lines to remove. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flag that indicates which lines to remove.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTLineRemoveCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public LineRemoveCommandType getType()
public void setType(LineRemoveCommandType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.Region">
      <summary>Gets the handle to a LEADTOOLS <see cref="T:Leadtools.RasterRegion" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Handle to a LEADTOOLS <see cref="T:Leadtools.RasterRegion" />. When <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> returns, 
            this is updated with a single LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> corresponding to all changes, only if <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see> has been set in the Flags property and 
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see> has not been set. 
            To use this, set the Flags property to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see>. 
            It is the programmer's responsibility to dispose of this region when the region is no longer needed.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.LineRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.LineRemoveCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.LineRemoveCommandType)">LineRemoveCommand(LineRemoveCommandFlags,int,int,int,int,int,int, LineRemoveCommandType)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LineRemoveCommand.ImageRegion">
      <summary>RasterImage object that is updated with a shallow copy of the image that also has a region that 
            contains the removed lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The <see cref="T:Leadtools.RasterImage" /> object, updated with a shallow copy of the image that has a
            region that contains the removed lines.
            </value>
      <remarks>
            If <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see> has been set in Flags, 
            then when <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> returns, this property is
            updated with a shallow copy of the image that also has a region that contains the removed lines. So set
            Flags to (<see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommandFlags">LineRemoveCommandFlags.LeadRegion</see>). It is the
            programmer's responsibility to dispose of the region when it is no longer needed.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S3 As LineRemoveCommand
   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S3 = New LineRemoveCommand
      lineRemoveCommand_S3.Type = LineRemoveCommandType.Horizontal
      lineRemoveCommand_S3.Flags = LineRemoveCommandFlags.UseVariance Or LineRemoveCommandFlags.SingleRegion Or LineRemoveCommandFlags.LeadRegion
      lineRemoveCommand_S3.GapLength = 2
      lineRemoveCommand_S3.MaximumLineWidth = 5
      lineRemoveCommand_S3.MinimumLineLength = 200
      lineRemoveCommand_S3.MaximumWallPercent = 10
      lineRemoveCommand_S3.Wall = 7
      lineRemoveCommand_S3.Variance = 2
      lineRemoveCommand_S3.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S3(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S3.LineRemove
      MessageBox.Show("Row Col " + "( " + e.StartRow.ToString() + ", " + e.StartColumn.ToString() + " )" + _
         Chr(13) + " Length " + e.Length.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S3);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion ;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall = 7;
         command.Variance = 2;
         command.Run(image);

      }

      private void LineRemoveEvent_S3(object sender, LineRemoveCommandEventArgs e)
      {
         MessageBox.Show("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand();
         command.addEventListener("lineremove", LineRemoveEvent_S3);
         command.type  = LineRemoveCommandType.horizontal;
         command.flags = LineRemoveCommandFlags.useVariance | LineRemoveCommandFlags.singleRegion ;
         command.gapLength = 2;
         command.maximumLineWidth = 5;
         command.minimumLineLength = 200;
         command.maximumWallPercent = 10;
         command.wall = 7;
         command.variance = 2;
         command.run(image);
      }
   });

}

function LineRemoveEvent_S3(e)
{
   console.error("Row Col " + "( " + e.startRow.toString() + ", " + e.startColumn + " )" +
      "\n Length " + e.length.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S3);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion ;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall = 7;
         command.Variance = 2;
         command.Run(image);

      }

      private void LineRemoveEvent_S3(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void ImageRegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand();
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S3);
         command.Type  = LineRemoveCommandType.Horizontal;
         command.Flags = LineRemoveCommandFlags.UseVariance | LineRemoveCommandFlags.SingleRegion ;
         command.GapLength = 2;
         command.MaximumLineWidth = 5;
         command.MinimumLineLength = 200;
         command.MaximumWallPercent = 10;
         command.Wall = 7;
         command.Variance = 2;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S3(object sender, LineRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Row Col "   + "( " + e.StartRow.ToString() + ", " + e.StartColumn + " )" +
            "\n Length " + e.Length.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub ImageRegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand()
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S3
         command.Type = LineRemoveCommandType.Horizontal
         command.Flags = LineRemoveCommandFlags.UseVariance Or LineRemoveCommandFlags.SingleRegion
         command.GapLength = 2
         command.MaximumLineWidth = 54
         command.MinimumLineLength = 200
         command.MaximumWallPercent = 10
         command.Wall = 7
         command.Variance = 2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S3(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
         Debug.WriteLine("Row Col " &amp; "( " &amp; e.StartRow.ToString() &amp; ", " &amp; e.StartColumn &amp; " )" &amp; Constants.vbLf &amp; " Length " &amp; e.Length.ToString())
         e.Status= RemoveStatus.Remove
      End Sub</code>
      </example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* imageRegion;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImageRegion()</pre>
      </java>
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.LineRemoveCommand.LineRemove">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, unsafe_unretained) id&lt;LTLineRemoveCommandDelegate&gt; delegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addLineRemoveCommandListener(LineRemoveCommandListener listener)
public void removeLineRemoveCommandListener(LineRemoveCommandListener listener)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">
      <summary>
        <para>Values that determine the behavior of the hole punch removal process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseDpi">
      <summary>The unit of measure for all properties of the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> 
            is thousandths of an inch. Use the image's DPI to convert to pixels. This allows the processing of many images 
            with different DPI. If this flag is not set, the unit of measure for all properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> is pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.SingleRegion">
      <summary>For each hole punch encountered by <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>, the removed hole punch is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>, 
            the hole punch is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region" /> will 
            reference a region that contains all the removed hole punches. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" /> will be 
            updated with a shallow copy of image that has a LEAD region that contains all the removed hole punches. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all the removed hole punches. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed (either region allocated in <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.LeadRegion">
      <summary>When <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" /> 
            is updated with a shallow copy of the Run method image that also contains a region with all the removed hole punches. 
            This flag must be used in conjunction with SingleRegion. So set <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags" /> to SingleRegion | LeadRegion <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.CallBackRegion">
      <summary>The <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region" /> property receives a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> 
            that contains the current hole punch to be removed. Setting this flag lets the user create his or her own composite of removed 
            hole punches by combining the regions received, if <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>. The regions can be combined using a logical OR operator. 
            Combining all regions received when the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> results in a region identical to the region created 
            when SingleRegion is set in <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags" />. 
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />. 
            When the region received by the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region" /> property 
            is no longer needed, it must be disposed of. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.ImageUnchanged">
      <summary>The Run method image is unchanged. This is useful if you do not want to actually change the image data, but obtain information about any hole punches that are found. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseSize">
      <summary>Use the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleWidth" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleHeight" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleWidth" />, 
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleHeight" /> properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> to indicate the size of the hole punches to remove
             If this flag is not set, default values for the four sizes will be used. 
             If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> is set, the defaults are 
             calculated from the image DPI. Otherwise, the defaults are calculated from the image width and height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>,
        </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseCount">
      <summary>Use the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount" /> and 
            <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount" /> properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> to indicate the number of hole punches to remove.
             If this flag is not set, default values for the two count values will be used. 
            These default values are as follows: <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount" /> = 3 
            and <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount" /> = 3. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseLocation">
      <summary>Use the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Location" /> property of the 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> to indicate the location of the hole punches to remove. 
            If this flag is not set, a default of <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation">HolePunchRemoveCommandLocation.Left</see> will be used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseNormalDetection">
      <summary>Use Normal Hole Punch Detection. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags.UseAdvancedDetection">
      <summary>Use Advanced Hole Punch Detection to return more accurate results. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation">
      <summary>
        <para>Flag that indicates the location within the document of the hole punches to remove.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
      </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Left">
      <summary>(0x00000001)Searches for the hole punch pattern on the left side of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Right">
      <summary>(0x00000002)Searches for the hole punch pattern on the right side of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Top">
      <summary>(0x00000003)Searches for the hole punch pattern across the top of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation.Bottom">
      <summary>(0x00000004)Searches for the hole punch pattern across the bottom of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs">
      <summary>Handles each hole punch found by <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents holePunchCommand_S4 As HolePunchRemoveCommand
   Public Sub HolePunchRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      holePunchCommand_S4 = New HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion Or HolePunchRemoveCommandFlags.UseDpi Or HolePunchRemoveCommandFlags.UseSize Or HolePunchRemoveCommandFlags.UseLocation Or HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 0, 0, 0, 0, leadImage.Width, leadImage.Height)
      holePunchCommand_S4.Run(leadImage)

   End Sub

   Private Sub HolePunchCommand_HolePunchRemove_S4(ByVal sender As Object, ByVal e As HolePunchRemoveCommandEventArgs) Handles holePunchCommand_S4.HolePunchRemove
      Dim ee As HolePunchRemoveCommandEventArgs = New HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount)
      e.Status = RemoveStatus.Remove

      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HolePunchRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion | HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount |HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S4);
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S4(object sender, HolePunchRemoveCommandEventArgs e)
      {
         HolePunchRemoveCommandEventArgs ee = new HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HolePunchRemoveCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.callBackRegion | HolePunchRemoveCommandFlags.useDpi | HolePunchRemoveCommandFlags.useCount | HolePunchRemoveCommandFlags.useLocation | HolePunchRemoveCommandFlags.singleRegion, HolePunchRemoveCommandLocation.left, 2, 4, 0, 0, image.width, image.height);
         command.addEventListener("holepunchremove", HolePunchRemoveEvent_S4);
         command.run(image);
      }
   });
}

function HolePunchRemoveEvent_S4(e)
{
   with (Leadtools.ImageProcessing.Core) {
      var ee = new HolePunchRemoveCommandEventArgs(e.image, e.region, e.boundingRectangle, e.holeIndex, e.holeTotalCount, e.whiteCount, e.blackCount);
      e.status = RemoveStatus.remove;
      if (e.region != null) {
         e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task HolePunchRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion | HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount | HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S4);
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S4(object sender, HolePunchRemoveCommandEventArgs e)
      {
         HolePunchRemoveCommandEventArgs ee = new HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new HolePunchRemoveCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="image">RasterImage object that contains the affected image</param>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing one of the holes of the hole punch pattern. It is the programmer's responsibility to dispose of this region when it is no longer needed.</param>
      <param name="boundingRectangle">The bounding rectangle of one of the holes in a hole punch pattern.</param>
      <param name="holeIndex">Index of the hole within a hole punch pattern. The holes are numbered from 1 to n, where n is the 
            total number of holes in the hole punch pattern.</param>
      <param name="holeTotalCount">The total number of holes that make up the hole punch pattern. 
            This value will not change for a particular call to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.</param>
      <param name="whiteCount">Total number of white pixels in one of the holes of a hole punch pattern.</param>
      <param name="blackCount">Total number of black pixels in one of the holes of a hole punch pattern.</param>
      <example>
        <code lang="VB">   Public WithEvents holePunchCommand_S4 As HolePunchRemoveCommand
   Public Sub HolePunchRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      holePunchCommand_S4 = New HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion Or HolePunchRemoveCommandFlags.UseDpi Or HolePunchRemoveCommandFlags.UseSize Or HolePunchRemoveCommandFlags.UseLocation Or HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 0, 0, 0, 0, leadImage.Width, leadImage.Height)
      holePunchCommand_S4.Run(leadImage)

   End Sub

   Private Sub HolePunchCommand_HolePunchRemove_S4(ByVal sender As Object, ByVal e As HolePunchRemoveCommandEventArgs) Handles holePunchCommand_S4.HolePunchRemove
      Dim ee As HolePunchRemoveCommandEventArgs = New HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount)
      e.Status = RemoveStatus.Remove

      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HolePunchRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion | HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount |HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S4);
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S4(object sender, HolePunchRemoveCommandEventArgs e)
      {
         HolePunchRemoveCommandEventArgs ee = new HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HolePunchRemoveCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.callBackRegion | HolePunchRemoveCommandFlags.useDpi | HolePunchRemoveCommandFlags.useCount | HolePunchRemoveCommandFlags.useLocation | HolePunchRemoveCommandFlags.singleRegion, HolePunchRemoveCommandLocation.left, 2, 4, 0, 0, image.width, image.height);
         command.addEventListener("holepunchremove", HolePunchRemoveEvent_S4);
         command.run(image);
      }
   });
}

function HolePunchRemoveEvent_S4(e)
{
   with (Leadtools.ImageProcessing.Core) {
      var ee = new HolePunchRemoveCommandEventArgs(e.image, e.region, e.boundingRectangle, e.holeIndex, e.holeTotalCount, e.whiteCount, e.blackCount);
      e.status = RemoveStatus.remove;
      if (e.region != null) {
         e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task HolePunchRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.CallBackRegion | HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount | HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S4);
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S4(object sender, HolePunchRemoveCommandEventArgs e)
      {
         HolePunchRemoveCommandEventArgs ee = new HolePunchRemoveCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.HoleIndex, e.HoleTotalCount, e.WhiteCount, e.BlackCount);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object that references the affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> object that references the affected image.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(Leadtools.RasterImage, RasterRegion, LeadRect, int, int, int, int)</see>.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Region">
      <summary>Gets the LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing one of the holes of the hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing one of the holes of the hole punch pattern. It is the programmer's responsibility to dispose of this region when it is no longer needed.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(RasterImage, Region, LeadRect, int, int, int, int)</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.BoundingRectangle">
      <summary>Gets a rectangle structure that contains the bounding rectangle of one of the holes in a hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The bounding rectangle of one of the holes in a hole punch pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HoleIndex">
      <summary>Gets the index of the hole within a hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Index of the hole within a hole punch pattern. The holes are numbered from 1 to n, where n is the 
            total number of holes in the hole punch pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.HoleTotalCount">
      <summary>Gets the total number of holes that make up the hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The total number of holes that make up the hole punch pattern. 
            This value will not change for a particular call to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.WhiteCount">
      <summary>Gets the total number of white pixels in one of the holes of a hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Total number of white pixels in one of the holes of a hole punch pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.BlackCount">
      <summary>Gets the total number of black pixels in one of the holes of a hole punch pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Total number of black pixels in one of the holes of a hole punch pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status">
      <summary>Gets or sets the status of the hole punch removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that represents the status of the hole punch removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventHandler">
      <summary>Represents the method that will handles each hole punch found by <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>
            When you create a <b>HolePunchRemoveCommandEventHandler</b> delegate, you identify the method that will handle the event.
            To associate the event with your event handler, add an instance of the delegate to the event. The
            event handler is called whenever the event occurs, unless you remove the delegate.
            Delegates are similar to the method pointers of C++ and have two main uses: performing callbacks,
            and defining events. Delegates are defined at run time.
            Callback methods allow asynchronous processing:  the method being called starts a thread and returns,
            during which time the thread does most of the work and calls the callback only when needed.
            Events use a publish and subscribe type pattern.  A class 'publishes' an event and any number of
            classes can 'subscribe' to that event.  The runtime notifies subscribers when an event occurs.
            Delegates that are used in defining events must be defined as taking two arguments:  a publisher
            object, and an event information object (derived from the .NET EventArgs class).</description>
          </item>
          <item>
            <description>
            The delegate method is called once for each occurring hole in the hole punch configuration, For example, 
            if there are three holes, the delegate gets called three times.
            if the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> status to have a particular hole removed. 
            set it to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see> to leave the hole unchanged. 
            set <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Cancel</see> to abort.
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.ImageUnchanged</see> and <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see> are being used,
             then the <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.Status" /> value will affects only the internal single region that contains all the changes.</description>
          </item>
        </list>
      </remarks>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs" /> that contains the event data.</param>
      <noexample />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand">
      <summary>Finds and removes hole punches. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <keywords>Document cleanup|Removing|Hole punches|Cleanup|1-bit images</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command detects and removes hole punches that are common in scanned documents. 
            The behavior of this command can be modified by using the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventHandler" /> delegate method. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>Hole punch configurations may consist of 2 or more holes.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>Before calling this function, ensure that the hole punch is free of any other stray marks. If you do not, the hole will not be recognized. Use the 
            <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" /> command to remove any horizontal or vertical lines from the image. Use the other 
            <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Document Cleanup</see> 
            functions to remove other imaging artifacts such as dots, blobs, borders, inverted text, bumps and nicks. 
            This will have the added benefit of making your image smaller when compressed.
            </description>
          </item>
        </list>
        <para>
            For example, the following image must have the vertical line removed:</para>
        <img src="holewithline.gif" />
        <para>Once the image has been cleaned, as shown in the following figure, the hole punch can be removed:</para>
        <img src="hole.gif" />
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            </para>
      </remarks>
      <example>
        <code lang="VB">   Public WithEvents holePunchCommand_S1 As HolePunchRemoveCommand
   Public Sub HolePunchRemoveCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      holePunchCommand_S1 = New HolePunchRemoveCommand
      holePunchCommand_S1.Flags = HolePunchRemoveCommandFlags.UseDpi Or HolePunchRemoveCommandFlags.UseCount Or HolePunchRemoveCommandFlags.UseLocation
      holePunchCommand_S1.Location = HolePunchRemoveCommandLocation.Left
      holePunchCommand_S1.MaximumHoleCount = 4
      holePunchCommand_S1.MinimumHoleCount = 2

      holePunchCommand_S1.Run(leadImage)

   End Sub

   Private Sub HolePunchCommand_HolePunchRemove_S1(ByVal sender As Object, ByVal e As HolePunchRemoveCommandEventArgs) Handles holePunchCommand_S1.HolePunchRemove
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
              Chr(13) + " Hole Index " + e.HoleIndex.ToString() + _
              Chr(13) + " Holes Total Count " + e.HoleTotalCount.ToString() + _
              Chr(13) + " Black Count " + e.BlackCount.ToString() + _
              Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HolePunchRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand();
         command.HolePunchRemove  += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S1);
         command.Flags            = HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount | HolePunchRemoveCommandFlags.UseLocation;
         command.Location         = HolePunchRemoveCommandLocation.Left;
         command.MaximumHoleCount = 4;
         command.MinimumHoleCount = 2;

         command.Run(image);

      }

      private void HolePunchRemoveEvent_S1(object sender, HolePunchRemoveCommandEventArgs e)
      {
         MessageBox.Show("Size "                 + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Hole Index "        + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count "       + e.BlackCount.ToString() + 
            "\n White Count "       + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HolePunchRemoveCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HolePunchRemoveCommand();
         command.addEventListener("holepunchremove", HolePunchRemoveEvent_S1);
         command.flags = HolePunchRemoveCommandFlags.useDpi | HolePunchRemoveCommandFlags.useCount | HolePunchRemoveCommandFlags.useLocation;
         command.location = HolePunchRemoveCommandLocation.left;
         command.maximumHoleCount = 4;
         command.minimumHoleCount = 2;

         command.run(image);
      }
   });
}

function HolePunchRemoveEvent_S1(e) {
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Hole Index " + e.holeIndex.toString() +
      "\n Holes Total Count " + e.holeTotalCount.toString() +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task HolePunchRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand();
         command.HolePunchRemove  += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S1);
         command.Flags            = HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount | HolePunchRemoveCommandFlags.UseLocation;
         command.Location         = HolePunchRemoveCommandLocation.Left;
         command.MaximumHoleCount = 4;
         command.MinimumHoleCount = 2;

         command.Run(image);

      }

      private void HolePunchRemoveEvent_S1(object sender, HolePunchRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Size "                 + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Hole Index "        + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count "       + e.BlackCount.ToString() + 
            "\n White Count "       + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.#ctor">
      <summary>Initializes a new HolePunchRemoveCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags,Leadtools.ImageProcessing.Core.HolePunchRemoveCommandLocation,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new HolePunchRemoveCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="flags">Flags that determine the behavior of the hole punch removal process.</param>
      <param name="location">Flag that indicates the location within the document of the hole punches to remove.</param>
      <param name="minimumHoleCount">Minimum number of holes to detect. This member is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see> flag is set.</param>
      <param name="maximumHoleCount">Maximum number of holes to detect. This member is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see> flag is set.</param>
      <param name="minimumHoleWidth">The minimum width of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels. This parameter is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set.</param>
      <param name="minimumHoleHeight">The minimum height of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels. This parameter is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set.</param>
      <param name="maximumHoleWidth">The maximum width of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels. This parameter is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set.</param>
      <param name="maximumHoleHeight">The maximum height of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels. This parameter is valid only if 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set.</param>
      <example>
        <code lang="VB">   Public WithEvents holePunchCommand_S2 As HolePunchRemoveCommand
   Public Sub HolePunchRemoveConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      holePunchCommand_S2 = New HolePunchRemoveCommand(HolePunchRemoveCommandFlags.UseDpi Or HolePunchRemoveCommandFlags.UseSize Or HolePunchRemoveCommandFlags.UseLocation Or HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 0, 0, 0, 0, leadImage.Width, leadImage.Height)
      holePunchCommand_S2.Run(leadImage)
      leadImage.SetRegion(Nothing, holePunchCommand_S2.Region, RasterRegionCombineMode.Set)

   End Sub

   Private Sub HolePunchCommand_HolePunchRemove_S2(ByVal sender As Object, ByVal e As HolePunchRemoveCommandEventArgs) Handles holePunchCommand_S2.HolePunchRemove
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
         Chr(13) + " Hole Index " + e.HoleIndex.ToString() + _
         Chr(13) + " Holes Total Count " + e.HoleTotalCount.ToString() + _
         Chr(13) + " Black Count " + e.BlackCount.ToString() + _
         Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HolePunchRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount |HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S2);
         command.Run(image);
         image.SetRegion(null, command.Region, RasterRegionCombineMode.Set);

      }

      private void HolePunchRemoveEvent_S2(object sender, HolePunchRemoveCommandEventArgs e)
      {
         MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Hole Index " + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HolePunchRemoveConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.useDpi | HolePunchRemoveCommandFlags.useCount |HolePunchRemoveCommandFlags.useLocation | HolePunchRemoveCommandFlags.singleRegion, HolePunchRemoveCommandLocation.left, 2, 4, 0, 0, image.width, image.height);
         command.addEventListener("holepunchremove", HolePunchRemoveEvent_S2);
         command.run(image);
         image.setRegion(null, command.region, Leadtools.RasterRegionCombineMode.set);
      }
   });
}

function HolePunchRemoveEvent_S2(e)
{
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Hole Index " + e.holeIndex.toString() +
      "\n Holes Total Count " + e.holeTotalCount.toString() +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task HolePunchRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand(HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseCount |HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion, HolePunchRemoveCommandLocation.Left, 2, 4, 0, 0, image.Width, image.Height);
         command.HolePunchRemove += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S2);
         command.Run(image);
         image.SetRegion(null, command.Region, RasterRegionCombineMode.Set);

      }

      private void HolePunchRemoveEvent_S2(object sender, HolePunchRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Size " + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Hole Index " + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Flags">
      <summary>Gets or sets a flag that determines the behavior of the hole punch removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that determines the behavior of the hole punch removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleCount">
      <summary>Gets or sets the minimum number of holes to detect. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Minimum number of holes to detect. This property is valid only if the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see> flag is set in the Flags property. This value must be at least 2.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleCount">
      <summary>Gets or sets the maximum number of holes to detect. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Maximum number of holes to detect. This property is valid only if the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseCount</see> flag is set in the Flags property.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleWidth">
      <summary>Gets or sets the minimum width of one of the holes of the hole punch configuration to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The minimum width of one of the holes of the hole punch configuration to be removed. 
            If the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels. This property is valid only if <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set in Flags property.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MinimumHoleHeight">
      <summary>Gets or sets the minimum height of one of the holes of the hole punch configuration to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The minimum height of one of the holes of the hole punch configuration to be removed. 
            If the <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> flag is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels. This property is valid only if <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set in the Flags property.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleWidth">
      <summary>Gets or sets the maximum width of one of the holes of the hole punch configuration to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The maximum width of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels. This property is valid only if <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set in the Flags property.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.MaximumHoleHeight">
      <summary>Gets or sets the maximum height of one of the holes of the hole punch configuration to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The maximum height of one of the holes of the hole punch configuration to be removed. 
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseDpi</see> is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels. This property is valid only if <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.UseSize</see> is set in the Flags property.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Location">
      <summary>Gets or sets a value that indicates the location within the document of the hole punches to remove. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that indicates the location within the document of the hole punches to remove.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.Region">
      <summary>Gets the handle to a windows region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
            Handle to a windows region.
            </value>
      <remarks>
            When <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> returns, 
            this property is updated with a single windows region corresponding to all changes, only if <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see> 
            has been set in the Flags property and <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see> has not been set. To use this, set the Flags property to 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>. It is the programmer's responsibility to dispose of this region when the region is no longer needed.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32,System.Int32,System.Int32)">HolePunchRemoveCommandEventArgs(RasterImage, Region, LeadRect, int, int, int, int)</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.ImageRegion">
      <summary>This property is updated with a shallow copy of the image that also has a region that contains the hole punches. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
            A shallow copy of the image that also has a region that contains the hole punches.
            </value>
      <remarks>
            If <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see> has been set in the Flags property, then when 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" /> returns, this property is updated with a shallow copy of the image that 
            also has a region that contains the hole punches. So set Flags to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommandFlags">HolePunchRemoveCommandFlags.LeadRegion</see>. It is the programmer's responsibility to 
            dispose of the region when it is no longer needed.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents holePunchCommand_S3 As HolePunchRemoveCommand
   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      holePunchCommand_S3 = New HolePunchRemoveCommand
      holePunchCommand_S3.Flags = HolePunchRemoveCommandFlags.UseDpi Or HolePunchRemoveCommandFlags.UseSize Or HolePunchRemoveCommandFlags.UseLocation Or HolePunchRemoveCommandFlags.SingleRegion Or HolePunchRemoveCommandFlags.LeadRegion
      holePunchCommand_S3.Location = HolePunchRemoveCommandLocation.Left
      holePunchCommand_S3.MaximumHoleHeight = leadImage.Height
      holePunchCommand_S3.MaximumHoleWidth = leadImage.Width
      holePunchCommand_S3.MinimumHoleHeight = 0
      holePunchCommand_S3.MinimumHoleWidth = 0
      holePunchCommand_S3.Run(leadImage)

   End Sub

   Private Sub HolePunchCommand_HolePunchRemove_S3(ByVal sender As Object, ByVal e As HolePunchRemoveCommandEventArgs) Handles holePunchCommand_S3.HolePunchRemove
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
         Chr(13) + " Hole Index " + e.HoleIndex.ToString() + _
         Chr(13) + " Holes Total Count " + e.HoleTotalCount.ToString() + _
         Chr(13) + " Black Count " + e.BlackCount.ToString() + _
         Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand();
         command.HolePunchRemove  += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S3);
         command.Flags = HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseSize | HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion | HolePunchRemoveCommandFlags.LeadRegion;
         command.Location = HolePunchRemoveCommandLocation.Left;
         command.MaximumHoleHeight = image.Height;
         command.MaximumHoleWidth = image.Width;
         command.MinimumHoleHeight = 0;
         command.MinimumHoleWidth = 0;
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S3(object sender, HolePunchRemoveCommandEventArgs e)
      {
         MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Hole Index " + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HolePunchRemoveCommand();
         command.addEventListener("holepunchremove", HolePunchRemoveEvent_S3);
         command.flags = HolePunchRemoveCommandFlags.useDpi | HolePunchRemoveCommandFlags.useSize | HolePunchRemoveCommandFlags.useLocation | HolePunchRemoveCommandFlags.singleRegion | HolePunchRemoveCommandFlags.leadRegion;
         command.location = HolePunchRemoveCommandLocation.left;
         command.MaximumHoleHeight = image.Height;
         command.MaximumHoleWidth = image.Width;
         command.MinimumHoleHeight = 0;
         command.MinimumHoleWidth = 0;
         command.run(image);
      }
   });
}

function HolePunchRemoveEvent_S3(e)
{
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Hole Index " + e.holeIndex.toString() +
      "\n Holes Total Count " + e.holeTotalCount.toString() +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HolePunchRemoveCommand command = new HolePunchRemoveCommand();
         command.HolePunchRemove  += new EventHandler&lt;HolePunchRemoveCommandEventArgs&gt;(HolePunchRemoveEvent_S3);
         command.Flags = HolePunchRemoveCommandFlags.UseDpi | HolePunchRemoveCommandFlags.UseSize | HolePunchRemoveCommandFlags.UseLocation | HolePunchRemoveCommandFlags.SingleRegion | HolePunchRemoveCommandFlags.LeadRegion;
         command.Location = HolePunchRemoveCommandLocation.Left;
         command.MaximumHoleHeight = image.Height;
         command.MaximumHoleWidth = image.Width;
         command.MinimumHoleHeight = 0;
         command.MinimumHoleWidth = 0;
         command.Run(image);

      }

      private void HolePunchRemoveEvent_S3(object sender, HolePunchRemoveCommandEventArgs e)
      {
         Debug.WriteLine("Size " + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Hole Index " + e.HoleIndex.ToString() + 
            "\n Holes Total Count " + e.HoleTotalCount.ToString() + 
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status= RemoveStatus.Remove;
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand.HolePunchRemove">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LeadZoneType">
      <summary>
        <para>Flags that determine the type of the zone that the auto zoning command will detect.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
      </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>enum LTLeadZoneType</pre>
      </objectivec>
      <java>
        <pre>public enum LeadZoneType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LeadZoneType.Text">
      <summary>(0x00000000)Text zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLeadZoneType_Text</pre>
      </objectivec>
      <java>
        <pre>TEXT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LeadZoneType.Graphic">
      <summary>(0x00000001)Graphics zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLeadZoneType_Graphic</pre>
      </objectivec>
      <java>
        <pre>GRAPHIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.LeadZoneType.Table">
      <summary>(0x00000002)Table zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTLeadZoneType_Table</pre>
      </objectivec>
      <java>
        <pre>TABLE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LeadZoneTableData">
      <summary>Represents the class that is used to return the details about the detected table zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@interface LTLeadZoneTableData : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class LeadZoneTableData</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LeadZoneTableData.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTableData" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public LeadZoneTableData()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.Columns">
      <summary>Gets or sets the number of columns in the table zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
            Value that indicates the number of columns in the table zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int columns;</pre>
      </objectivec>
      <java>
        <pre>
public int getColumns()
public void setColumns(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.Rows">
      <summary>Gets or sets the number of rows in the table zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
            Value that indicates the number of rows in the table zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int rows;</pre>
      </objectivec>
      <java>
        <pre>
public int getRows()
public void setRows(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.Cells">
      <summary>Gets the IList&lt;LeadRect&gt; that contains a list of table cell locations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
            IList&lt;LeadRect&gt; that contains a list of table cell locations.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) NSMutableArray* cells;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadRect&gt; getCells()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.Cells_WinRT">
      <summary>
            Gets the <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that contains a list of table cell locations.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that contains a list of table cell locations.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.CellTypes">
      <ibrahimBashar> Review 5 - 6 - 2012</ibrahimBashar>
      <summary>Gets the list of <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> structures that represents the type of the cell. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>6/5/2012</isnew>
      <value>
            A list of <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> structures that represents the type of the cell.
            </value>
      <remarks>
        <list type="bullet">
          <item>
            <description>The cell type can be either (text, image, or table)</description>
          </item>
        </list>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) NSMutableArray* cellTypes;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadZoneType&gt; getCellTypes()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.CellTypes_WinRT">
      <summary>
            Gets the list of <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> structures that represents the type of the cell.
            </summary>
      <value>
            list of <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> structures that represents the type of the cell.
            </value>
      <remarks>
        <list type="bullet">
          <item>
            <description>The cell type can be either (text, image, or table)</description>
          </item>
        </list>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.InsideCells">
      <Bashar> Review 3 - 9 - 2012</Bashar>
      <summary>Gets a list of <see cref="T:Leadtools.LeadRect" /> information of all cells that are inside this table's cells. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>9/3/2012</isnew>
      <value>
            List of all cells that are inside this cell.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) NSMutableArray* insideCells;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;ArrayListLeadRect&gt; getInsideCells()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTableData.InsideCells_WinRT">
      <summary>Gets a list of <see cref="T:Leadtools.LeadRect" /> information of all cells that are inside this table's cells.
            </summary>
      <value>
            List of all cells that are inside this cell.
            </value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoZoningOptions">
      <summary>
        <para>Flags that determine the behavior of the auto zoning process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTAutoZoningOptions</pre>
      </objectivec>
      <java>
        <pre>public enum AutoZoningOptions</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.None">
      <summary>None. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.AsianAutoZone">
      <summary>Detect Asian text (Japanese, Chinese, Korean...etc). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a></summary>
      <java>
        <pre>ASIAN_AUTO_ZONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectText">
      <summary>Detect text zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectText</pre>
      </objectivec>
      <java>
        <pre>DETECT_TEXT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectGraphics">
      <summary>Detect graphic zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectGraphics</pre>
      </objectivec>
      <java>
        <pre>DETECT_GRAPHICS</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectTable">
      <summary>Detect table zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectTable</pre>
      </objectivec>
      <java>
        <pre>DETECT_TABLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectAll">
      <summary>Detect all zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectAll</pre>
      </objectivec>
      <java>
        <pre>DETECT_ALL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.AllowOverlap">
      <summary>Allows overlapping zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_AllowOverlap</pre>
      </objectivec>
      <java>
        <pre>ALLOW_OVERLAP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DontAllowOverlap">
      <summary>Don't allow overlapping zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DontAllowOverlap</pre>
      </objectivec>
      <java>
        <pre>DONT_ALLOW_OVERLAP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectAccurateZones">
      <summary>Don't merge text zones and keep them separated (paragraphs) <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectAccurateZones</pre>
      </objectivec>
      <java>
        <pre>DETECT_ACCURATE_ZONES</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DetectGeneralZones">
      <summary>Merge text zones to the maximum. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DetectGeneralZones</pre>
      </objectivec>
      <java>
        <pre>DETECT_GENERAL_ZONES</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DontRecognizeOneCellTable">
      <summary>Don't recognize tables that contain only one cell. (ignore one-cell tables (borders), and detect what is inside.) <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DontRecognizeOneCellTable</pre>
      </objectivec>
      <java>
        <pre>DONT_RECOGNIZE_ONE_CELL_TABLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.RecognizeOneCellTable">
      <summary>Recognize tables that contain only one cell, (consider the borders as one-cell tables). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_RecognizeOneCellTable</pre>
      </objectivec>
      <java>
        <pre>RECOGNIZE_ONE_CELL_TABLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.UseNormalTableDetection">
      <summary>Use Normal Table Detection <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_UseNormalTableDetection</pre>
      </objectivec>
      <java>
        <pre>USE_NORMAL_TABLE_DETECTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.UseAdvancedTableDetection">
      <summary>Use Advanced Table Detection to return more accurate results and detect complex tables <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_UseAdvancedTableDetection</pre>
      </objectivec>
      <java>
        <pre>USE_ADVANCED_TABLE_DETECTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.UseLinesReconstruction">
      <summary>Use Lines Reconstruction to connect broken lines and for patterned tables. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_UseLinesReconstruction</pre>
      </objectivec>
      <java>
        <pre>USE_LINES_RECONSTRUCTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.UseMultiThreading">
      <summary>Use Multithreading (that will be faster with a multi-core CPUs) <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_UseMultiThreading</pre>
      </objectivec>
      <java>
        <pre>USE_MULTI_THREADING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.DontUseMultiThreading">
      <summary>Don't Use Multithreading (that will be used with a single-core CPUs) <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_DontUseMultiThreading</pre>
      </objectivec>
      <java>
        <pre>DONT_USE_MULTI_THREADING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoZoningOptions.UseTextDetectionVersion">
      <summary>Modifies the input image removing tables and graphics, leaving only the text area. It won't return the text zones in the <see cref="T:System.Collections.Generic.IList`1" /> 
            containing the recognized zones.<br /><strong>Note:</strong> Make a copy of the original image if you want to keep it, since when this function is set to <strong>UseTextDetectionVersion</strong> 
            the original image is modified. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoZoningOptions_UseTextDetectionVersion</pre>
      </objectivec>
      <java>
        <pre>USE_TEXT_DETECTION_VERSION</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LeadZoneTextData">
      <summary>Represents the class that is used to return the details about the detected text zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTLeadZoneTextData : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class LeadZoneTextData</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LeadZoneTextData.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTableData" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public LeadZoneTextData()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTextData.TextLines">
      <summary>Gets the IList&lt;LeadRect&gt; that contains a list of text line locations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
            IList&lt;LeadRect&gt; that contains a list of text line locations.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) NSMutableArray* textLines;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadRect&gt; getTextLines()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZoneTextData.TextLines_WinRT">
      <summary>
            Gets the <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that contains a list of text line locations.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that contains a list of text line locations.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.LeadZone">
      <summary>Represents the class that is used to return the details about the detected zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTLeadZone : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class LeadZone</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.LeadZone.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.LeadZone" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public LeadZone()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZone.Type">
      <summary>Gets or sets the <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> enumeration that represents the type of the detected zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneType" /> enumeration that represents the type of the detected zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTLeadZoneType type;</pre>
      </objectivec>
      <java>
        <pre>
public LeadZoneType getType()
public void setType(LeadZoneType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZone.Bounds">
      <summary>Gets or sets the <see cref="T:Leadtools.LeadRect" /> that represents the location and size of the detected zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.LeadRect" /> that represents the location and size of the detected zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect bounds;</pre>
      </objectivec>
      <java>
        <pre>
public LeadRect getBounds()
public void setBounds(LeadRect value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZone.TableData">
      <summary>Gets or sets the <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTextData" /> enumeration that represents the details about the detected table zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTextData" /> enumeration that represents the details about the detected table zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <remarks>
            This property is null unless LeadZoneType is Table
            </remarks>
      <objectivec>
        <pre>@property (nonatomic, strong) LTLeadZoneTableData* tableData;</pre>
      </objectivec>
      <java>
        <pre>
public LeadZoneTableData getTableData()
public void setTableData(LeadZoneTableData value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.LeadZone.TextData">
      <summary>Gets or sets the <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTextData" /> enumeration that represents the details about the detected text zone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.LeadZoneTextData" /> enumeration that represents the details about the detected text zone.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <remarks>
            This property is null unless LeadZoneType is Text
            </remarks>
      <objectivec>
        <pre>@property (nonatomic, strong) LTLeadZoneTextData* textData;</pre>
      </objectivec>
      <java>
        <pre>
public LeadZoneTextData getTextData()
public void setTextData(LeadZoneTextData value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoZoningCommand">
      <summary>Detects different zones (Text, Graphic and Tables) in an image automatically.
            This is an important feature for OCR pre-processing to improve the recognition 
            results. This function is useful for any application that needs to automatically 
            separate images, tables and text within mixed raster content (MRC) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description> This command detects different zones and adds the detected zones to the 
            <see cref="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.Zones">Zones</see> property</description>
          </item>
          <item>
            <description>This command does not support 12- or 16-bit grayscale or 
            48- or 64-bit color images (Exception: Image format not recognized).</description>
          </item>
          <item>
            <description>This command does not support signed data images (Exception: Signed image data not supported).</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
        <p>
          <strong>Note:</strong>This command is supported in <strong>LEADTOOLS Document Imaging</strong> and higher.</p>
      </remarks>
      <example>
        <code lang="VB">   Public Sub AutoZoningCommandExample()
      ' Load an image
      Dim codecs As RasterCodecs = New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Sample.mrc"))

      ' Prepare the command
      Dim command As AutoZoningCommand = New AutoZoningCommand()
      command.Options = AutoZoningOptions.DontAllowOverlap Or _
                        AutoZoningOptions.DetectAccurateZones Or _
                        AutoZoningOptions.DetectAll Or _
                        AutoZoningOptions.UseMultiThreading

      ' Apply the AutoZoning
      command.Run(image)

      Dim i As Integer
      For i = 0 To command.Zones.Count - 1
         MessageBox.Show("Location :" + command.Zones(i).Bounds.ToString() + "\n" + "Type :" + command.Zones(i).Type.ToString())
      Next
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AutoZoningCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Sample.mrc"));

         // Prepare the command
         AutoZoningCommand command = new AutoZoningCommand();
         command.Options = AutoZoningOptions.DontAllowOverlap      |
                           AutoZoningOptions.DetectAccurateZones  | 
                           AutoZoningOptions.DetectAll            |
                           AutoZoningOptions.UseMultiThreading; 

         //Apply the AutoZoning
         command.Run(image);

         for (int i = 0; i &lt; command.Zones.Count; i++)
         {
            MessageBox.Show("Location :" + command.Zones[i].Bounds.ToString() +
                            "\n" + "Type :" + command.Zones[i].Type.ToString());
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoZoningCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\OCR1.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new AutoZoningCommand();
         command.Options = AutoZoningOptions.DontAllowOverlap     |
                           AutoZoningOptions.DetectAccurateZones  | 
                           AutoZoningOptions.DetectAll            |
                           AutoZoningOptions.UseMultiThreading; 
        
         //Apply the AutoZoning
         command.run(image);

         for (var i = 0; i &lt; command.zones.length; i++)
         {
            var str = "Location : Left=" + command.zones[i].bounds.x + " " +
                      "Top=" + command.zones[i].bounds.y + " " + 
                      "Width=" + command.zones[i].bounds.width + " " +
                      "Height=" + command.zones[i].bounds.height + " " +
                      "Type=" + command.zones[i].type.toString();
           console.error(str);
         }
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AutoZoningCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         string srcFileName = @"Assets\OCR1.TIF";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         AutoZoningCommand command = new AutoZoningCommand();
         command.Options = AutoZoningOptions.DontAllowOverlap     |
                           AutoZoningOptions.DetectAccurateZones  | 
                           AutoZoningOptions.DetectAll            |
                           AutoZoningOptions.UseMultiThreading; 

         //Apply the AutoZoning
         command.Run(image);

         for (int i = 0; i &lt; command.Zones.Count; i++)
         {
            String str = String.Format("Location : [Left={0}, Top={1}, Width={2}, Height={3}]\nType : {4}", 
               command.Zones[i].Bounds.X, 
               command.Zones[i].Bounds.Y, 
               command.Zones[i].Bounds.Width, 
               command.Zones[i].Bounds.Height,
               command.Zones[i].Type.ToString());
            Debug.WriteLine(str);
         }
      }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Core.AutoZoningOptions">AutoZoningOptions</seealso>.
            <objectivec><pre>@interface LTAutoZoningCommand : LTRasterCommand</pre></objectivec><java><pre>public class AutoZoningCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoZoningCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoZoningCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public AutoZoningCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoZoningCommand.#ctor(Leadtools.ImageProcessing.Core.AutoZoningOptions)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="options"> enumeration that determine the behavior of the AutoZoning algorithm.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithOptions:(LTAutoZoningOptions)options;</pre>
      </objectivec>
      <java>
        <pre>public AutoZoningCommand(int options)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoZoningCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <returns>string that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoZoningCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.DotMatrix">
      <summary>Returns the value that determines if document image is dot matrix image or not. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.DotMatrixType" /> enumeration that determines if document image is dot matrix image or not.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTDotMatrixType dotMatrix;</pre>
      </objectivec>
      <java>
        <pre>public DotMatrixType getDotMatrix()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.TableImage">
      <summary>Returns a raster image of tables in document image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> that represents the raster image of tables in document image.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* tableImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getTableImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.UnderLines">
      <summary>Gets the underline information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:System.Collections.Generic.IList`1" /> that represents the list of underline information.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect* underlines;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadRect&gt; getUnderLines()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.CheckBoxes">
      <summary>Gets the check boxes information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:System.Collections.Generic.IList`1" /> that represents the list of check boxes information.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect* checkBoxes;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadRect&gt; getCheckboxes()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.StrikeLines">
      <summary>Gets the strike lines (strikethrough) information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:System.Collections.Generic.IList`1" /> that represents the list of strike lines (strikethrough) information.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect* strikeLines;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadRect&gt; getStrikeLines()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.underlinesCount_objectivec">
      <summary>Get the length of underlines array <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length of the array in underlines property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int underlinesCount;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.UnderLines_WinRT">
      <summary>
            Gets the underline information.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that represents the list of underline information.</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.checkBoxesCount_objectivec">
      <summary>Get the length of check boxes array <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length of the array in checkBoxes property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int checkBoxsCount;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.CheckBoxes_WinRT">
      <summary>
            Gets the check boxes information.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that represents the list of check boxes information.</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.strikeLinesCount_objectivec">
      <summary>Get the length of strike lines (strikethroughs) array <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length of the array in strikelines property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int strikeLinesCount;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.StrikeLines_WinRT">
      <summary>
            Gets the strike lines (strikethoughes) information.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.LeadRect" />&gt; that represents the list of strike lines (strikethroughs) information.</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.Zones">
      <summary>Gets the detected zones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:System.Collections.Generic.IList`1" /> list that contains the detected zones.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) NSMutableArray* zones;</pre>
      </objectivec>
      <java>
        <pre>public List&lt;LeadZone&gt; getZones()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.Zones_WinRT">
      <summary>
            Gets the detected zones.
            </summary>
      <value>
        <strong>IVector</strong>&lt;<see cref="T:Leadtools.ImageProcessing.Core.LeadZone" />&gt; that contains the detected zones.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.Options">
      <summary>Gets or sets the <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningOptions" /> enumeration that determine the behavior of the AutoZoning algorithm. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningOptions" /> enumeration that determine the behavior of the AutoZoning algorithm.
            </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoZoningCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTAutoZoningOptions options;</pre>
      </objectivec>
      <java>
        <pre>
public int getOptions()
public void setOptions(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoZoningCommand.DitherType">
      <ibrahimBashar> Review 5 - 6 - 2012</ibrahimBashar>
      <summary>(Read only) Gets the value that determine the type of the dither in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>6/5/2012</isnew>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.DitheringType" /> enumeration that determine the type of the dither in the image.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTDitheringType ditherType;</pre>
      </objectivec>
      <java>
        <pre>public DitheringType getDitherType()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand">
      <summary>Converts a 12 or 16-bit grayscale image to an 16-bit grayscale or a 48-bit RGB image. 
            This class is available in <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> toolkits only.<br /><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.RasterByteOrder" />.Gray is not supported by this command.</description>
          </item>
        </list>
        <br />
            Only TIFF and DICOM file formats are capable of saving images that have been window-leveled.
            Images can be window-leveled by calling <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" /> and specifying 
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the <b>flags</b>
            parameter, by using the <b>WindowLevelExtCommand</b> or by loading an image from a file format that supports Window Leveling. If a window-leveled 
            image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.<br />
            See <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> for a version of this class using 8-bit lookup tables.<br />
            LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub WindowLevelExtCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      'Change the image to 16-bit grayscale
      Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
      Dim command As WindowLevelExtCommand = New WindowLevelExtCommand
      graycommand.Run(leadImage)

      Dim minValue As Integer = leadImage.MinValue
      Dim maxValue As Integer = leadImage.MaxValue
      Dim minBit As Integer = leadImage.LowBit
      Dim maxBit As Integer = leadImage.HighBit

      Dim Size As Integer = (1 &lt;&lt; (maxBit - minBit + 1))
      Dim LookupTable() As RasterColor16
      ReDim LookupTable(Size - 1)

      ' fill the first half of the LookupTable with RED.
      Dim x As Integer
      For x = 0 To Size \ 2 - 1
         LookupTable(x) = New RasterColor16(RasterColor16.MaximumComponent, 0, 0)
      Next

      ' fill the rest with gray values.
      For x = Size \ 2 To Size - 1
         Dim y As Integer = Convert.ToInt32((x - minValue) * RasterColor16.MaximumComponent / (maxValue - minValue))
         LookupTable(x) = New RasterColor16(y, y, y)
      Next

      command.HighBit = maxBit
      command.LowBit = minBit

      command.LookupTable = LookupTable
      command.Order = RasterByteOrder.Bgr
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void WindowLevelExtCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Image2.dcm"));

         // Prepare the command
         int x;
         int y;
         int Size;
         RasterColor16 [] LookupTable;

         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelExtCommand command = new WindowLevelExtCommand();

         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for(x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new Leadtools.RasterColor16(Leadtools.RasterColor16.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for(x = Size / 2; x &lt; Size; x++)
         {
            y = (int)((x - MinMaxValues.MinimumValue) * Leadtools.RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new Leadtools.RasterColor16(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit  = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function WindowLevelExtCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var x;
         var y;
         var Size;
         var LookupTable = new Array();

         var MinMaxBits = new MinMaxBitsCommand();
         var MinMaxValues = new MinMaxValuesCommand();
         var command = new WindowLevelExtCommand();

         MinMaxBits.run(image);
         MinMaxValues.run(image);

         Size = (1 &lt;&lt; (MinMaxBits.maximumBit - MinMaxBits.minimumBit + 1));

         // fill the first half of the LookupTable with RED.
         for (x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColor16Helper.create(Leadtools.RasterColor16Helper.maximumComponent, 0, 0);

         // fill the rest with gray values.
         for (x = Size / 2; x &lt; Size; x++) {
            y = (x - MinMaxValues.minimumValue) * Leadtools.RasterColor16Helper.maximumComponent / (MinMaxValues.maximumValue - MinMaxValues.minimumValue);
            LookupTable[x] = Leadtools.RasterColor16Helper.create(y, y, y);
         }

         command.highBit = MinMaxBits.maximumBit;
         command.lowBit = MinMaxBits.minimumBit;
         command.lookupTable = LookupTable;
         command.order = Leadtools.RasterByteOrder.bgr;

         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task WindowLevelExtCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int x;
         int y;
         int Size;
         RasterColor16 [] LookupTable;

         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelExtCommand command = new WindowLevelExtCommand();

         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for(x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColor16Helper.Create(Leadtools.RasterColor16Helper.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for(x = Size / 2; x &lt; Size; x++)
         {
            y = (int)((x - MinMaxValues.MinimumValue) * Leadtools.RasterColor16Helper.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = Leadtools.RasterColor16Helper.Create(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit  = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void WindowLevelExtCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int x;
         int y;
         int Size;
         RasterColor16[] LookupTable;
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelExtCommand command = new WindowLevelExtCommand();

         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for (x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new Leadtools.RasterColor16(Leadtools.RasterColor16.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for (x = Size / 2; x &lt; Size; x++)
         {
            y = (int)((x - MinMaxValues.MinimumValue) * Leadtools.RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new Leadtools.RasterColor16(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub WindowLevelExtCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim x As Integer
         Dim y As Integer
         Dim Size As Integer
         Dim LookupTable As RasterColor16()
         Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand()
         Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand()
         Dim command As WindowLevelExtCommand = New WindowLevelExtCommand()

         MinMaxBits.Run(image)
         MinMaxValues.Run(image)

         Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
         LookupTable = New RasterColor16(Size - 1) {}

         ' fill the first half of the LookupTable with RED.
         x = 0
         Do While x &lt; Size / 2
            LookupTable(x) = New RasterColor16(RasterColor16.MaximumComponent, 0, 0)
            x += 1
         Loop

         ' fill the rest with gray values.
         x = Size / 2
         Do While x &lt; Size
            y = CInt((x - MinMaxValues.MinimumValue) * RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue))
            LookupTable(x) = New RasterColor16(y, y, y)
            x += 1
         Loop

         command.HighBit = MinMaxBits.MaximumBit
         command.LowBit = MinMaxBits.MinimumBit
         command.LookupTable = LookupTable
         command.Order = RasterByteOrder.Bgr

         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand"></seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <objectivec><pre>@interface LTWindowLevelExtCommand : LTRasterCommand</pre></objectivec><java><pre>public class WindowLevelExtCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public WindowLevelExtCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.#ctor(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterByteOrder)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <param name="lowBit">Value indicating the low bit used for leveling. 0 &lt;= lowBit &lt;= highBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="highBit">Value indicating the high bit used for leveling.  0 &lt;= lowBit &lt;= highBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="lookupTable">Optional 16-bit lookup table that can be used to implement a user defined conversion. 
            For every intensity value between 0 and 2 raised to the power of (<see cref="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.HighBit" /> - <see cref="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.LowBit" /> + 1) - 1
            there should be a corresponding entry in the lookup table that contains a 16-bit RGB quad.
            If lookupTable is null, the conversion is a normal shift (right or left) and the output image is 8-bit grayscale. If lookupTable is not null, the output image is a 24-bit image.</param>
      <param name="order">Value indicating the color order if the output image will be 48-bit. If LookupTable is null, this parameter is ignored.</param>
      <example>
        <code lang="VB">   Public Sub WindowLevelExtConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      'Change the image to 16-bit grayscale
      Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
      graycommand.Run(leadImage)

      Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand
      MinMaxBits.Run(leadImage)

      Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand
      MinMaxValues.Run(leadImage)

      Dim Size As Integer = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
      Dim LookupTable() As RasterColor16
      ReDim LookupTable(Size - 1)
      ' fill the first half of the LookupTable with RED.
      Dim x As Integer
      For x = 0 To (Size \ 2 - 1)
         LookupTable(x) = New RasterColor16(RasterColor16.MaximumComponent, 0, 0)
      Next
      ' fill the rest with gray values.
      For x = Size \ 2 To Size - 1
         Dim y As Integer = CType((x) * RasterColor16.MaximumComponent / (Size), Integer)
         LookupTable(x) = New RasterColor16(y, y, y)
      Next

      Dim command As WindowLevelExtCommand = New WindowLevelExtCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void WindowLevelExtConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Image2.dcm"));

         // Prepare the command
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);

         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor16 [] LookupTable = new RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for(int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new RasterColor16(RasterColor16.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for(int x = Size / 2; x &lt; Size; x++)
         {
            int y = (UInt16)((x - MinMaxValues.MinimumValue) * RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new RasterColor16(y, y, y);
         }

         WindowLevelExtCommand command = new WindowLevelExtCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function WindowLevelExtConstructorExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.run(image);

         var MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.run(image);

         var Size = (1 &lt;&lt; (MinMaxBits.maximumBit - MinMaxBits.minimumBit + 1));
         var LookupTable = new Array();

         // fill the first half of the LookupTable with RED.
         for (var x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColor16Helper.create(Leadtools.RasterColor16Helper.maximumComponent, 0, 0);

         // fill the rest with gray values.
         for (var x = Size / 2; x &lt; Size; x++) {
            var y = (x - MinMaxValues.minimumValue) * Leadtools.RasterColor16Helper.maximumComponent / (MinMaxValues.maximumValue - MinMaxValues.minimumValue);
            LookupTable[x] = Leadtools.RasterColor16Helper.create(y, y, y);
         }

         var command = new WindowLevelExtCommand(MinMaxBits.minimumBit, MinMaxBits.maximumBit, LookupTable, Leadtools.RasterByteOrder.bgr);

         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task WindowLevelExtConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);

         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor16 [] LookupTable = new RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for(int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = RasterColor16Helper.Create(RasterColor16Helper.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for(int x = Size / 2; x &lt; Size; x++)
         {
            int y = (UInt16)((x - MinMaxValues.MinimumValue) * RasterColor16Helper.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = RasterColor16Helper.Create(y, y, y);
         }

         WindowLevelExtCommand command = new WindowLevelExtCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void WindowLevelExtConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor16[] LookupTable = new RasterColor16[Size];

         // fill the first half of the LookupTable with RED.
         for (int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new RasterColor16(RasterColor16.MaximumComponent, 0, 0);

         // fill the rest with gray values.
         for (int x = Size / 2; x &lt; Size; x++)
         {
            int y = (UInt16)((x - MinMaxValues.MinimumValue) * RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new RasterColor16(y, y, y);
         }

         WindowLevelExtCommand command = new WindowLevelExtCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub WindowLevelExtConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand()
         MinMaxBits.Run(image)
         Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand()
         MinMaxValues.Run(image)

         Dim Size As Integer = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
         Dim LookupTable As RasterColor16() = New RasterColor16(Size - 1){}

         ' fill the first half of the LookupTable with RED.
         Dim x As Integer = 0
         Do While x &lt; Size / 2
            LookupTable(x) = New RasterColor16(RasterColor16.MaximumComponent, 0, 0)
            x += 1
         Loop

         ' fill the rest with gray values.
         x = Size / 2
         Do While x &lt; Size
            Dim y As Integer = CUShort((x - MinMaxValues.MinimumValue) * RasterColor16.MaximumComponent / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue))
            LookupTable(x) = New RasterColor16(y, y, y)
            x += 1
         Loop

         Dim command As WindowLevelExtCommand = New WindowLevelExtCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr)

         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithLookupTable:(NSArray*)lookupTable 
                   lowBit:(int)lowBit 
                  highBit:(int)highBit 
                    order:(LTRasterByteOrder)order;            </pre>
      </objectivec>
      <java>
        <pre>
public WindowLevelExtCommand(
   int lowBit, 
   int highBit, 
   RasterColor16[] lookupTable, 
   RasterByteOrder order
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <isnew>2/28/2009</isnew>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.LookupTable">
      <summary>Gets or sets an optional 16-bit lookup table that can be used to implement a user defined conversion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <value>Optional lookup table that can be used to implement a user defined conversion. For every intensity value between 0 and 2 raised to the 
            power of (HighBit - LowBit + 1) - 1 there should be a corresponding entry in the lookup table that contains an 16-bit RGB quad. If LookupTable is null,
            the conversion is a normal shift (right or left) and the output image is 16-bit grayscale. If LookupTable is not null, the output image is a 48-bit image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) NSMutableArray* lookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor16[] getLookupTable()
public void setLookupTable(RasterColor16[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.LowBit">
      <summary>Gets or sets a value indicating the low bit used for leveling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <value>Value indicating the low bit used for leveling. 0 &lt;= LowBit &lt;= HighBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int lowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getLowBit()
public void setLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.HighBit">
      <summary>Gets or sets a value indicating the high bit used for leveling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <value>Value indicating the high bit used for leveling. 0 &lt;= LowBit &lt;= HighBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int highBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getHighBit()
public void setHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelExtCommand.Order">
      <summary>Gets or sets a value indicating the color order if the output image will be 48-bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <value>Value indicating the color order if the output image will be 48-bit. If the LookupTable property is null, this property is ignored.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getOrder()
public void setOrder(RasterByteOrder value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags">
      <summary>Options for the <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>You can use a bitwise OR (|) to specify one or more flags.</para>
        <para>The <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> enumeration is used as the type for the <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.Flags">InvertedPageCommand.Flags</see> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" />.</example>
      <objectivec>
        <pre>enum LTInvertedPageCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum InvertedPageCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags.None">
      <summary>
        <para>Default value. Check and correct the image if it is inverted. This is the same as
            specifying the <strong>Process</strong> flags</para>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedPageCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags.Process">
      <summary>
        <para>Check and correct the image if it is inverted. The <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted">InvertedPageCommand.IsInverted</see> will be
            set to <strong>true</strong> if the command inverted the image, <strong>false</strong>; otherwise</para>
        <para>This flag cannot be used with <strong>NoProcess</strong>.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTInvertedPageCommandFlags_Process</pre>
      </objectivec>
      <java>
        <pre>PROCESS</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags.NoProcess">
      <summary>
        <para>Only check whether the image is inverted but do not change the image data.
            The <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted">InvertedPageCommand.IsInverted</see> will be set to <strong>true</strong> if the
            image is inverted, <strong>false</strong>; otherwise</para>
        <para>This flag cannot be used with <strong>Process</strong>.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTInvertedPageCommandFlags_NoProcess</pre>
      </objectivec>
      <java>
        <pre>NO_PROCESS</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.InvertedPageCommand">
      <summary>Checks and auto-corrects an inverted image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>An inverted <see cref="T:Leadtools.RasterImage" /> is an image that has text or other objects in high contrast color on a low contrast background, for example
            white text on black background. This command can check whether an image is inverted as well as auto-correct it.</para>
        <para>This command can only detect an entire image. To search for and correct specific inverted areas or regions in an image, use the 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.</para>
        <para>A common source of inverted images are black and white images saved with a non-standard palette by some applications.</para>
        <para>This command does not support signed data images.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.</para>
        <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para>
      </remarks>
      <example>
        <code lang="VB">   Public Sub InvertedPageCommandExample()
      Dim codecs As New RasterCodecs()

      ' Get an image
      Dim tifFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1.tif")
      Dim invertedImageFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_Inverted.tif")
      Dim nonInvertedImageFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_NonInverted.tif")

      Dim image As RasterImage = codecs.Load(tifFileName)

      ' The images should be non-inverted at the beginning, check
      Dim invertedPage As New InvertedPageCommand(InvertedPageCommandFlags.NoProcess)
      invertedPage.Run(image)
      Console.WriteLine("Original image, inverted = {0}", invertedPage.IsInverted)

      ' Invert the image
      Dim invert As New InvertCommand()
      invert.Run(image)

      codecs.Save(image, invertedImageFileName, image.OriginalFormat, image.BitsPerPixel)

      ' Check again
      invertedPage.Run(image)
      Console.WriteLine("After running InvertCommand, inverted = {0}", invertedPage.IsInverted)

      ' Now run the command to un-invert the image
      invertedPage.Flags = InvertedPageCommandFlags.Process
      invertedPage.Run(image)

      ' Now check the image again
      invertedPage.Flags = InvertedPageCommandFlags.NoProcess
      invertedPage.Run(image)
      Console.WriteLine("After running InvertedPageCommand, inverted = {0}", invertedPage.IsInverted)
      codecs.Save(image, nonInvertedImageFileName, image.OriginalFormat, image.BitsPerPixel)

      image.Dispose()

      codecs.Dispose()
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void InvertedPageCommandExample()
      {
         RasterCodecs codecs = new RasterCodecs();

         // Get an image
         string tifFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1.tif");
         string invertedImageFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_Inverted.tif");
         string nonInvertedImageFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_NonInverted.tif");

         RasterImage image = codecs.Load(tifFileName);

         // The images should be non-inverted at the beginning, check
         InvertedPageCommand invertedPage = new InvertedPageCommand(InvertedPageCommandFlags.NoProcess);
         invertedPage.Run(image);
         Console.WriteLine("Original image, inverted = {0}", invertedPage.IsInverted);

         // Invert the image
         InvertCommand invert = new InvertCommand();
         invert.Run(image);

         codecs.Save(image, invertedImageFileName, image.OriginalFormat, image.BitsPerPixel);

         // Check again
         invertedPage.Run(image);
         Console.WriteLine("After running InvertCommand, inverted = {0}", invertedPage.IsInverted);

         // Now run the command to un-invert the image
         invertedPage.Flags = InvertedPageCommandFlags.Process;
         invertedPage.Run(image);

         // Now check the image again
         invertedPage.Flags = InvertedPageCommandFlags.NoProcess;
         invertedPage.Run(image);
         Console.WriteLine("After running InvertedPageCommand, inverted = {0}", invertedPage.IsInverted);
         codecs.Save(image, nonInvertedImageFileName, image.OriginalFormat, image.BitsPerPixel);

         image.Dispose();

         codecs.Dispose();
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function InvertedPageCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   var invertedPage;
   var workingImage;

   // Load the image
   var srcFileName = "Assets\\ocr1.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      with (Leadtools.ImageProcessing.Core)
      {
         // The images should be non-inverted at the beginning, check
         invertedPage = new InvertedPageCommand(InvertedPageCommandFlags.noProcess);
         invertedPage.run(image);
         console.error("Original image, inverted = {0}", invertedPage.isInverted);
      }

      // Invert the image
      var invert = new Leadtools.ImageProcessing.Color.InvertCommand();
      invert.run(image);

      workingImage = image;

      var destFileName = "ocr1_Inverted.tif";
      return Tools.AppLocalFolder().createFileAsync(destFileName)
   }).then(function (saveFile) {
      return codecs.saveAsync(workingImage, Leadtools.LeadStreamFactory.create(saveFile), workingImage.originalFormat, workingImage.bitsPerPixel)
   }).then(function () {

      // Check again
      invertedPage.run(workingImage);
      console.error("After running InvertCommand, inverted = {0}", invertedPage.isInverted);

      // Now run the command to un-invert the image
      with (Leadtools.ImageProcessing.Core)
      {
         invertedPage.flags = InvertedPageCommandFlags.process;
         invertedPage.run(workingImage);

         // Now check the image again
         invertedPage.flags = InvertedPageCommandFlags.noProcess;
         invertedPage.run(workingImage);
      }

      console.error("After running InvertedPageCommand, inverted = {0}", invertedPage.isInverted);
      destFileName = "ocr1_NonInverted.tif";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(workingImage, Leadtools.LeadStreamFactory.create(saveFile), workingImage.originalFormat, workingImage.bitsPerPixel);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task InvertedPageCommandExample()
      {
         RasterCodecs codecs = new RasterCodecs();
         // Load the image
         string srcFileName = @"Assets\ocr1.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // The images should be non-inverted at the beginning, check
         InvertedPageCommand invertedPage = new InvertedPageCommand(InvertedPageCommandFlags.NoProcess);
         invertedPage.Run(image);
         Debug.WriteLine("Original image, inverted = {0}", invertedPage.IsInverted);

         // Invert the image
         InvertCommand invert = new InvertCommand();
         invert.Run(image);
         string destFileName = @"ocr1_Inverted.tif";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(image, LeadStreamFactory.Create(saveFile), image.OriginalFormat, image.BitsPerPixel);

         // Check again
         invertedPage.Run(image);
         Debug.WriteLine("After running InvertCommand, inverted = {0}", invertedPage.IsInverted);

         // Now run the command to un-invert the image
         invertedPage.Flags = InvertedPageCommandFlags.Process;
         invertedPage.Run(image);

         // Now check the image again
         invertedPage.Flags = InvertedPageCommandFlags.NoProcess;
         invertedPage.Run(image);
         Debug.WriteLine("After running InvertedPageCommand, inverted = {0}", invertedPage.IsInverted);
         destFileName = @"ocr1_NonInverted.tif";
         saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(image, LeadStreamFactory.Create(saveFile), image.OriginalFormat, image.BitsPerPixel);

         image.Dispose();

         codecs.Dispose();
      }</code>
        <code lang="SilverlightCSharp">      public void InvertedPageCommandExample(RasterImage image, Stream outStream1, Stream outStream2)
      {
         // The images should be non-inverted at the beginning, check
         InvertedPageCommand invertedPage = new InvertedPageCommand(InvertedPageCommandFlags.NoProcess);
         invertedPage.Run(image);
         Debug.WriteLine("Original image, inverted = {0}", invertedPage.IsInverted);
         // Invert the image
         InvertCommand invert = new InvertCommand();
         invert.Run(image);

         RasterCodecs codecs = new RasterCodecs();
         // save image to "ocr1_Inverted.tif";
         codecs.Save(image, outStream1, image.OriginalFormat, image.BitsPerPixel);

         // Check again
         invertedPage.Run(image);
         Debug.WriteLine("After running InvertCommand, inverted = {0}", invertedPage.IsInverted);

         // Now run the command to un-invert the image
         invertedPage.Flags = InvertedPageCommandFlags.Process;
         invertedPage.Run(image);

         // Now check the image again
         invertedPage.Flags = InvertedPageCommandFlags.NoProcess;
         invertedPage.Run(image);
         Debug.WriteLine("After running InvertedPageCommand, inverted = {0}", invertedPage.IsInverted);

         // save result image to "ocr1_NonInverted.tif"
         codecs.Save(image, outStream2, RasterImageFormat.CcittGroup4, 1);

         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub InvertedPageCommandExample(ByVal image As RasterImage, ByVal outStream1 As Stream, ByVal outStream2 As Stream)
         ' The images should be non-inverted at the beginning, check
         Dim invertedPage As InvertedPageCommand = New InvertedPageCommand(InvertedPageCommandFlags.NoProcess)
         invertedPage.Run(image)
         Debug.WriteLine("Original image, inverted = {0}", invertedPage.IsInverted)
         ' Invert the image
         Dim invert As InvertCommand = New InvertCommand()
         invert.Run(image)

         Dim codecs As RasterCodecs = New RasterCodecs()
         ' save image to "ocr1_Inverted.tif";
         codecs.Save(image, outStream1, image.OriginalFormat, image.BitsPerPixel)

         ' Check again
         invertedPage.Run(image)
         Debug.WriteLine("After running InvertCommand, inverted = {0}", invertedPage.IsInverted)

         ' Now run the command to un-invert the image
         invertedPage.Flags = InvertedPageCommandFlags.Process
         invertedPage.Run(image)

         ' Now check the image again
         invertedPage.Flags = InvertedPageCommandFlags.NoProcess
         invertedPage.Run(image)
         Debug.WriteLine("After running InvertedPageCommand, inverted = {0}", invertedPage.IsInverted)

         ' save result image to "ocr1_NonInverted.tif"
         codecs.Save(image, outStream2, RasterImageFormat.CcittGroup4, 1)

         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <objectivec><pre>@interface LTInvertedPageCommand : LTRasterCommand</pre></objectivec><java><pre>public class InvertedPageCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedPageCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The new <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> constructed will have <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.Flags" /> set to 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags">InvertedPageCommandFlags.Process</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" />.</example>
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public InvertedPageCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedPageCommand.#ctor(Leadtools.ImageProcessing.Core.InvertedPageCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Options to only check or perform auto-correction on the image.</param>
      <remarks>
        <para>You can also use the default constructor of the <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" /> class and set the options using the
            <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.Flags" /> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" />.</example>
      <objectivec>
        <pre>- (id)initWithFlags:(LTInvertedPageCommandFlags)flags;</pre>
      </objectivec>
      <java>
        <pre>public InvertedPageCommand(int flags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedPageCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedPageCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedPageCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.Flags">
      <summary>Options to only check or perform auto-correction on the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>One or more <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags" /> enumeration members ORed together.</value>
      <remarks>
        <para>If <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags">InvertedPageCommandFlags.Process</see> is specified, then the image is auto-corrected if it is
            inverted and the value of the <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted" /> property will be updated accordingly.</para>
        <para>If <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags">InvertedPageCommandFlags.NoProcess</see> is specified then the image is only checked for inversion
            and the value of <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted" /> updated without changing the image data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommandFlags" /> enumeration.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTInvertedPageCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted">
      <summary>Gets a value indicating whether the image is inverted. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> if the image is inverted, otherwise; <strong>false</strong>.</value>
      <remarks>
        <para>The value of the <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted" /> property is updated after the command is run on an image. You can specify whether the command
            will change the image data or just check for inversion using the <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.Flags" /> property, however, the <see cref="P:Leadtools.ImageProcessing.Core.InvertedPageCommand.IsInverted" /> property
            will always be updated whether or not the image data was changed.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) bool isInverted;</pre>
      </objectivec>
      <java>
        <pre>public boolean isInverted()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags">
      <summary>
        <para>Flags that determine the behavior of the Auto Binarize process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTAutoBinarizeCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum AutoBinarizeCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseAutoPreProcessing">
      <summary>Use automatic pre-processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseAutoPreProcessing</pre>
      </objectivec>
      <java>
        <pre>USE_AUTO_PRE_PROCESSING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.DontUsePreProcessing">
      <summary>Don't perform pre-processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_DontUsePreProcessing</pre>
      </objectivec>
      <java>
        <pre>DONT_USE_PRE_PROCESSING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseBackGroundElimination">
      <summary>Eliminate the background of the bitmap but keep the key features, such as text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseBackGroundElimination</pre>
      </objectivec>
      <java>
        <pre>USE_BACK_GROUND_ELIMINATION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseColorLeveling">
      <summary>Perform auto color-leveling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseColorLeveling</pre>
      </objectivec>
      <java>
        <pre>USE_COLOR_LEVELING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseAutoThreshold">
      <summary>Perform automatic thresholding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseAutoThreshold</pre>
      </objectivec>
      <java>
        <pre>USE_AUTO_THRESHOLD</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseUserThreshold">
      <summary>Let the user choose the threshold color value to be passed in Factor. Valid values range from 0 (black) to 255 (white). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseUserThreshold</pre>
      </objectivec>
      <java>
        <pre>USE_USER_THRESHOLD</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UsePercentileThreshold">
      <summary>Perform percentile thresholding. In this case the Factor is the percentage of black pixels at which to perform thresholding, expressed in hundredths of a percent. 
            For example, 500 means 5 percent. Valid values range from 0 to 10000. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UsePercentileThreshold</pre>
      </objectivec>
      <java>
        <pre>USE_PERCENTILE_THRESHOLD</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags.UseMedianThreshold">
      <summary>Perform median thresholding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTAutoBinarizeCommandFlags_UseMedianThreshold</pre>
      </objectivec>
      <java>
        <pre>USE_MEDIAN_THRESHOLD</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand">
      <summary>This function applies binary segmentation to a bitmap automatically. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Cleanup|Document Cleanup|Auto Binarize|Threshold|Documents|OCR|Pre Processing</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>
            This function is useful for improving recognition results (OCR, Barcode, OMR, ICR).
            </description>
          </item>
          <item>
            <description>This command does not support 12- or 16-bit grayscale or 
            48- or 64-bit color images (Exception: Image format not recognized).</description>
          </item>
          <item>
            <description>This command does not support signed data images (Exception: Signed image data not supported).</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            Options:
            <list type="bullet"><item><description>
            Automatic pre-processing
            </description></item><item><description>
            Pre-processing using background elimination
            </description></item><item><description>
            Pre-processing using color leveling
            </description></item><item><description>
            Perform automatic, percentile or median threshold
            </description></item><item><description>
            Manually specify a threshold value
            </description></item></list><para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing command will fail
            if the image data for the RasterImage object is stored internally using a Silverlight WriteableBitmap object
            .  For more information
            , refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub AutoBinarizeCommandExample()
      ' Load an image
      Dim codecs As RasterCodecs = New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Sample.mrc"))

      Dim command As AutoBinarizeCommand = New AutoBinarizeCommand()
      command.Run(image)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AutoBinarizeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Sample.mrc"));

         AutoBinarizeCommand command = new AutoBinarizeCommand();
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoBinarizeCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE1.CMP";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new AutoBinarizeCommand();
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AutoBinarizeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         string srcFileName = @"Assets\IMAGE1.CMP";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         AutoBinarizeCommand command = new AutoBinarizeCommand();
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void AutoBinarizeCommandExample(RasterImage image, Stream outStream)
      {
         AutoBinarizeCommand command = new AutoBinarizeCommand();
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub AutoBinarizeCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         Dim command As AutoBinarizeCommand = New AutoBinarizeCommand()
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.AutoBinaryCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.BlankPageDetectorCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand">
      </seealso>
      <objectivec>
        <pre>@interface LTAutoBinarizeCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class AutoBinarizeCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>The default value for factor is 0. The default value for flags is AutoBinarizeCommandFlags::UseAutoPreProcessing | AutoBinarizeCommandFlags::UseAutoThreshold 
            </remarks>
      <example> 
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public AutoBinarizeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.AutoBinarizeCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="factor">The meaning of this factor depends on which threshold type flags are being used.</param>
      <param name="flags">Flags that determine the behavior of Auto Binarize process.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFactor:(unsigned int)factor 
               flags:(LTAutoBinarizeCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public AutoBinarizeCommand(
   int factor, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.Factor">
      <summary>Gets or sets the Threshold factor. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the threshold factor.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int factor;</pre>
      </objectivec>
      <java>
        <pre>
public int getFactor()
public void setFactor(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoBinarizeCommand.Flags">
      <summary>Gets or sets flags that determine the behavior of the Auto Binarize process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determine the behavior of the Auto Binarize process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoBinarizeCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTAutoBinarizeCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand">
      <summary>This function applies binary segmentation to a bitmap automatically. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <keywords>Cleanup|Document Cleanup|Auto Binarize|Threshold|Documents|OCR|Pre Processing</keywords>
      <noremarks />
      <noexample />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="dotnet.png" alt=".NET support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoDocumentBinarizationCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand">
      <summary>Performs a 2-Dimensional Anisotropic Diffusion filter on an image for reduction of varied patterned and non-patterned noise. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This function is dedicated to reduction of noise in images, more specifically medical images.
             Images with a great amount of periodic noise in them are better suited to be clarified using this filter.</description>
          </item>
          <item>
            <description>The number of iterations controls the number of times the filter will be performed on image.
             The lower the variable is, the faster the filter will perform. Higher iterations typically means clearer results,
             yet it depends on the maximum length of vectors that can be computed from the image to obtain the best results</description>
          </item>
          <item>
            <description>The higher the time step variable is, the larger of a range of vectors is used for the 
             next iteration, yet too high a value, will yield out of range results as it will exceed the maximum vectors 
             at some spots</description>
          </item>
          <item>
            <description>The variable update is very useful when using a large number of iterations on a large image,
             especially when the results are not known. This variable, updates the image every number Update iterations, 
             thus the progress of the de-noising can be witnessed.
            If the image has a region, the function will be performed on the region only.</description>
          </item>
          <item>
            <description>This function supports 12 and 16-bit grayscale and 48 and 64-bit color images.
             Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available in the 
             Document and Medical Imaging toolkits.s</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub AnisotropicDiffusionCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As AnisotropicDiffusionCommand = New AnisotropicDiffusionCommand
      'Apply 
      command.Iterations = 20
      command.Smoothing = 1
      command.TimeStep = 100.0F
      command.MinVariation = 0.5F
      command.MaxVariation = 0.8F
      command.EdgeHeight = 4.0F
      command.Update = 10


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AnisotropicDiffusionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         AnisotropicDiffusionCommand command = new AnisotropicDiffusionCommand();
         //Apply 
         command.Iterations = 20;
         command.Smoothing = 1;
         command.TimeStep = 100.0f;
         command.MinVariation = 0.5f;
         command.MaxVariation = 0.8f;
         command.EdgeHeight = 4.0f;
         command.Update = 10;
         command.Run(image);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AnisotropicDiffusionCommandExample()
{
   // Load an image
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.ThrowExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      var command = new Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand();
      //Apply 
      command.iterations = 20;
      command.smoothing = 1;
      command.timeStep = 100.0;
      command.minVariation = 0.5;
      command.maxVariation = 0.8;
      command.edgeHeight = 4.0;
      command.update = 10;
      command.run(image);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AnisotropicDiffusionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         AnisotropicDiffusionCommand command = new AnisotropicDiffusionCommand();
         //Apply 
         command.Iterations = 20;
         command.Smoothing = 1;
         command.TimeStep = 100.0f;
         command.MinVariation = 0.5f;
         command.MaxVariation = 0.8f;
         command.EdgeHeight = 4.0f;
         command.Update = 10;
         command.Run(image);
      }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand">
      </seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.#ctor(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
      <summary>Initializes a new AnisotropicDiffusionCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="iterations">
            Number of iterations the filter will perform.
            </param>
      <param name="smoothing">
            Size of smoothing kernel which is performed on image.
            </param>
      <param name="timestep">
            Defines the length of the vector field.
            </param>
      <param name="minvariation">
            Increasing this variable will increase the parallel diffusion.
            </param>
      <param name="maxvariation">
            Increasing this variable decreases the one sided diffusion.
            </param>
      <param name="edgeheight">
            Max edge size which all edge values bellow will be included in the operation of the filter.
            </param>
      <param name="update">
            The number of iterations before each consecutive update of the image.
            </param>
      <example>
        <code lang="VB">   Public Sub AnisotropicDiffusionCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As AnisotropicDiffusionCommand = New AnisotropicDiffusionCommand
      'Apply 
      command.Iterations = 20
      command.Smoothing = 1
      command.TimeStep = 100.0F
      command.MinVariation = 0.5F
      command.MaxVariation = 0.8F
      command.EdgeHeight = 4.0F
      command.Update = 10


   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AnisotropicDiffusionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         AnisotropicDiffusionCommand command = new AnisotropicDiffusionCommand();
         //Apply 
         command.Iterations = 20;
         command.Smoothing = 1;
         command.TimeStep = 100.0f;
         command.MinVariation = 0.5f;
         command.MaxVariation = 0.8f;
         command.EdgeHeight = 4.0f;
         command.Update = 10;
         command.Run(image);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AnisotropicDiffusionCommandExample()
{
   // Load an image
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.ThrowExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      var command = new Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand();
      //Apply 
      command.iterations = 20;
      command.smoothing = 1;
      command.timeStep = 100.0;
      command.minVariation = 0.5;
      command.maxVariation = 0.8;
      command.edgeHeight = 4.0;
      command.update = 10;
      command.run(image);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AnisotropicDiffusionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         AnisotropicDiffusionCommand command = new AnisotropicDiffusionCommand();
         //Apply 
         command.Iterations = 20;
         command.Smoothing = 1;
         command.TimeStep = 100.0f;
         command.MinVariation = 0.5f;
         command.MaxVariation = 0.8f;
         command.EdgeHeight = 4.0f;
         command.Update = 10;
         command.Run(image);
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.Update">
      <summary>Gets or sets the update value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The number of iterations before each consecutive update of the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.EdgeHeight">
      <summary>Gets or sets the EdgeHeight value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Max edge size which all edge values bellow will be included in the operation of the filter.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.MaxVariation">
      <summary>Gets or sets the MaxVariation value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Increasing this variable decreases the one sided diffusion.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.MinVariation">
      <summary>Gets or sets the MinVariation value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Increasing this variable will increase the parallel diffusion.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.TimeStep">
      <summary>Gets or sets the TimeStep value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Defines the length of the vector field.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.Smoothing">
      <summary>Gets or sets the Smoothing value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Size of the smoothing kernel which is performed on image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand.Iterations">
      <summary>Gets or sets the number of iterations of the filter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Number of iterations the filter will perform.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AnisotropicDiffusionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags">
      <summary>Flags that indicate the action to take after subtraction has occurred.
            <para>These flags have a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>ContrastEnhancement</td><td>Perform a contrast enhancement after applying the subtraction.</td></tr><tr><td>OptimizeRange</td><td>Optimize and increase the tonal range of the image after applying the subtraction.</td></tr></table></remarks>
      <noexample />
      <objectivec>
        <pre>enum LTDigitalSubtractCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum DigitalSubtractCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags.None">
      <summary>No enhancement. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDigitalSubtractCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags.ContrastEnhancement">
      <summary>Perform a contrast enhancement after applying the subtraction. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDigitalSubtractCommandFlags_ContrastEnhancement</pre>
      </objectivec>
      <java>
        <pre>CONTRAST_ENHANCEMENT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags.OptimizeRange">
      <summary>Optimize and increase the tonal range of the image after applying the subtraction. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDigitalSubtractCommandFlags_OptimizeRange</pre>
      </objectivec>
      <java>
        <pre>OPTIMIZE_RANGE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand">
      <summary>Subtracts the live image from the mask image to show the differences between the two images. This method is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> and above. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>Performs a digital subtraction between two images. The resulting image may be enhanced using the Flags options. 
            Digital subtraction is mainly used to show the differences or the changes between two images. For the process to be meaningful both 
            images should be related to each other. Digital Subtraction Angiography (DSA) is a practical example of digital subtraction.</description>
          </item>
          <item>
            <description>Digital Subtraction Angiography (DSA) and Quality Control  (QC) are both major fields that use image subtraction. 
            An example of DSA is explained below.</description>
          </item>
          <item>
            <description>DSA is a technology used for the visualization of blood vessels in the human body. A mask image is obtained 
            using X-ray film of the body part of interest. Then vessels of that part are injected using a contrast medium. A sequence of images 
            is taken after the injection. These are called live images. After applying subtraction between the mask and live images the resulting 
            images are images that show the passage of the contrast medium in the vessels.</description>
          </item>
          <item>
            <description>Both the affected image and MaskImage should have the same bits per pixel, number of channels and image dimensions; 
            otherwise the method will return an error code.</description>
          </item>
          <item>
            <description>If the <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags" />.ContrastEnhancement flag is set then the contrast of the 
            subtracted image will be enhanced.</description>
          </item>
          <item>
            <description>If the <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags" />.OptimizeRange flag is set then the tonal range of the subtracted 
            image will be optimized. That is, the image intensity will be distributed among the full image intensity range.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale 
            and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>All images must be signed or unsigned.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub DigitalSubtractCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim MaskImage As RasterImage
      MaskImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Image3.cmp"), 4, CodecsLoadByteOrder.Bgr, 1, 1)

      Dim command As DigitalSubtractCommand = New DigitalSubtractCommand
      command.Flags = DigitalSubtractCommandFlags.ContrastEnhancement
      command.MaskImage = MaskImage
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DigitalSubtractCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage MaskImage;
         MaskImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"), 4, CodecsLoadByteOrder.Bgr, 1, 1);

         DigitalSubtractCommand command = new DigitalSubtractCommand();
         command.Flags = DigitalSubtractCommandFlags.ContrastEnhancement;
         command.MaskImage = MaskImage;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DigitalSubtractCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;
   var sourceImage;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      sourceImage = image;
      return Tools.AppInstallFolder().getFileAsync(srcFileName);
   }).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile), 4, Leadtools.Codecs.CodecsLoadByteOrder.bgr, 1, 1);
   }).then(function (MaskImage) {
      with (Leadtools.ImageProcessing.Core)
      {
         // Prepare the command
         var command = new DigitalSubtractCommand();
         command.flags = DigitalSubtractCommandFlags.contrastEnhancement;
         command.maskImage = MaskImage;
         command.run(sourceImage);
      }
   });  
}
 </code>
        <code lang="CSWinRT">      
      public async Task DigitalSubtractCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         srcFileName = @"Assets\Image1.cmp";
         loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage MaskImage = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile), 4, CodecsLoadByteOrder.Bgr, 1, 1);

         DigitalSubtractCommand command = new DigitalSubtractCommand();
         command.Flags = DigitalSubtractCommandFlags.ContrastEnhancement;
         command.MaskImage = MaskImage;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void DigitalSubtractCommandExample(RasterImage image, RasterImage maskImage, Stream outStream)
      {
         // Prepare the command
         DigitalSubtractCommand command = new DigitalSubtractCommand();
         command.Flags = DigitalSubtractCommandFlags.ContrastEnhancement;
         command.MaskImage = maskImage;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
         maskImage.Dispose();
      }</code>
        <code lang="VB">      Public Sub DigitalSubtractCommandExample(ByVal image As RasterImage, ByVal maskImage As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DigitalSubtractCommand = New DigitalSubtractCommand()
         command.Flags = DigitalSubtractCommandFlags.ContrastEnhancement
         command.MaskImage = maskImage
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
         maskImage.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <objectivec><pre>@interface LTDigitalSubtractCommand : LTRasterCommand</pre></objectivec><java><pre>public class DigitalSubtractCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public DigitalSubtractCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.DigitalSubtractCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="maskImage">RasterImage object that references the mask image. This image will not be affected.</param>
      <param name="flags">Flags that indicate the action to take after subtraction has occurred.</param>
      <example>
        <code lang="VB">   Public Sub DigitalSubtractConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim MaskImage As RasterImage
      MaskImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Image3.cmp"), 4, CodecsLoadByteOrder.Bgr, 1, 1)

      Dim command As DigitalSubtractCommand = New DigitalSubtractCommand(MaskImage, DigitalSubtractCommandFlags.ContrastEnhancement)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DigitalSubtractConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage MaskImage;
         MaskImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"), 4, CodecsLoadByteOrder.Bgr, 1, 1);

         DigitalSubtractCommand command = new DigitalSubtractCommand(MaskImage, DigitalSubtractCommandFlags.ContrastEnhancement);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DigitalSubtractConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;
   var sourceImage;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      sourceImage = image;
      return Tools.AppInstallFolder().getFileAsync(srcFileName);
   }).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile), 4, Leadtools.Codecs.CodecsLoadByteOrder.bgr, 1, 1);
   }).then(function (MaskImage) {
      with (Leadtools.ImageProcessing.Core)
      {
         // Prepare the command
         var command = new DigitalSubtractCommand(MaskImage, DigitalSubtractCommandFlags.contrastEnhancement);
         command.run(sourceImage);
      }
   }); 
}
 </code>
        <code lang="CSWinRT">      
      public async Task DigitalSubtractConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         srcFileName = @"Assets\Image1.cmp";
         loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage MaskImage = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile), 4, CodecsLoadByteOrder.Bgr, 1, 1);

         DigitalSubtractCommand command = new DigitalSubtractCommand(MaskImage, DigitalSubtractCommandFlags.ContrastEnhancement);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void DigitalSubtractConstructorExample(RasterImage image, RasterImage maskImage, Stream outStream)
      {
         DigitalSubtractCommand command = new DigitalSubtractCommand(maskImage, DigitalSubtractCommandFlags.ContrastEnhancement);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
         maskImage.Dispose();
      }</code>
        <code lang="VB">      Public Sub DigitalSubtractConstructorExample(ByVal image As RasterImage, ByVal maskImage As RasterImage, ByVal outStream As Stream)
         Dim command As DigitalSubtractCommand = New DigitalSubtractCommand(maskImage, DigitalSubtractCommandFlags.ContrastEnhancement)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
         maskImage.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithMaskImage:(LTRasterImage*)maskImage 
                  flags:(LTDigitalSubtractCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public DigitalSubtractCommand(
   RasterImage maskImage, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.MaskImage">
      <summary>Gets or sets the RasterImage object that references the mask image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>RasterImage object that references the mask image. This image will not be affected.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* maskImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getMaskImage()
public void setMaskImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DigitalSubtractCommand.Flags">
      <summary>Flags that indicate the action to take after subtraction has occurred. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that indicate the action to take after subtraction has occurred.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTDigitalSubtractCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags">
      <summary>Flags that indicate whether to deskew the image, which background color to use, whether to deskew
            the image if the skew angle is very small, which type of interpolation to use, whether the image contains mostly
            text, and whether to use normal or fast rotation.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination 
            of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each of the following groups:
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that indicate whether to deskew the image after the method finds the skew angle.</td><td>DeskewImage, ReturnAngleOnly</td></tr><tr><td>Flags that indicate which background color to use.</td><td>FillExposedArea, DoNotFillExposedArea</td></tr><tr><td>Flags that indicate whether to deskew the image if the skew angle is very small.</td><td>NoThreshold, Threshold</td></tr><tr><td>Flags that specify which type of interpolation to use.</td><td>RotateLinear, RotateResample, RotateBicubic</td></tr><tr><td>Flags that indicate whether the image contains mostly text, or text and pictures.</td><td>DocumentImage, DocumentAndPictures</td></tr><tr><td>Flags that indicate whether to use normal or fast rotation speed. 
            Normal results in high quality. Fast results in moderate quality and is only intended for 1-bit images.</td><td>NormalSpeedRotate, HighSpeedRotate</td></tr></table></remarks>
      <noexample />
      <objectivec>
        <pre>enum LTDeskewCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum DeskewCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DeskewImage">
      <summary>Deskew (rotate) the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DeskewImage</pre>
      </objectivec>
      <java>
        <pre>DESKEW_IMAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.ReturnAngleOnly">
      <summary>Don't deskew (rotate) the image. Generally this flag is used to find the angle of rotation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_ReturnAngleOnly</pre>
      </objectivec>
      <java>
        <pre>RETURN_ANGLE_ONLY</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.FillExposedArea">
      <summary>Use the fill color (in the FillColor property, or the fillCOlor parameter of the Constructor) to 
            fill areas exposed by rotation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_FillExposedArea</pre>
      </objectivec>
      <java>
        <pre>FILL_EXPOSED_AREA</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DoNotFillExposedArea">
      <summary>Determine the suitable background color for fill areas exposed by rotation automatically. 
            FillColor is ignored in this case. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DoNotFillExposedArea</pre>
      </objectivec>
      <java>
        <pre>DO_NOT_FILL_EXPOSED_AREA</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.NoThreshold">
      <summary>Deskew (rotate) the image for any deskew angle value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_NoThreshold</pre>
      </objectivec>
      <java>
        <pre>NO_THRESHOLD</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.Threshold">
      <summary>Do not deskew the image if the deskew angle is very small (less than 0.5 degrees). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_Threshold</pre>
      </objectivec>
      <java>
        <pre>THRESHOLD</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateLinear">
      <summary>Don't perform any interpolation methods when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_RotateLinear</pre>
      </objectivec>
      <java>
        <pre>ROTATE_LINEAR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateResample">
      <summary>Perform bilinear interpolation when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_RotateResample</pre>
      </objectivec>
      <java>
        <pre>ROTATE_RESAMPLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.RotateBicubic">
      <summary>Perform bicubic interpolation when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_RotateBicubic</pre>
      </objectivec>
      <java>
        <pre>ROTATE_BICUBIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DocumentImage">
      <summary>The image contains only text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DocumentImage</pre>
      </objectivec>
      <java>
        <pre>DOCUMENT_IMAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DocumentAndPictures">
      <summary>The image contains text and pictures or light text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DocumentAndPictures</pre>
      </objectivec>
      <java>
        <pre>DOCUMENT_AND_PICTURES</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseNormalRotate">
      <summary>Use normal rotation speed (high quality). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseNormalRotate</pre>
      </objectivec>
      <java>
        <pre>USE_NORMAL_ROTATE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseHighSpeedRotate">
      <summary>Use fast rotation speed (moderate quality, only for 1-bit images). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseHighSpeedRotate</pre>
      </objectivec>
      <java>
        <pre>USE_HIGH_SPEED_ROTATE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.PerformPreProcessing">
      <summary>Perform preprocessing on the image before deskewing it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_PerformPreProcessing</pre>
      </objectivec>
      <java>
        <pre>PERFORM_PRE_PROCESSING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DoNotPerformPreProcessing">
      <summary>Don't perform preprocessing on the image before deskewing it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DoNotPerformPreProcessing</pre>
      </objectivec>
      <java>
        <pre>DO_NOT_PERFORM_PRE_PROCESSING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseSelectiveDetection">
      <summary>Use the selective detection technique which is faster. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseSelectiveDetection</pre>
      </objectivec>
      <java>
        <pre>USE_SELECTIVE_DETECTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseNormalDetection">
      <summary>Don't use the selective detection technique which is more accurate. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseNormalDetection</pre>
      </objectivec>
      <java>
        <pre>USE_NORMAL_DETECTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.DoNotUseCheckDeskew">
      <summary>Perform the ordinary deskew. Do not perform any of the bank check
            algorithms. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_DoNotUseCheckDeskew</pre>
      </objectivec>
      <java>
        <pre>DO_NOT_USE_CHECK_DESKEW</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseCheckDeskew">
      <summary>Use the bank check algorithm to deskew the image. This algorithm considers many features common to standard bank checks in order to determine orientation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseCheckDeskew</pre>
      </objectivec>
      <java>
        <pre>USE_CHECK_DESKEW</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseLineDetectionCheckDeskew">
      <summary>Use the bank check line detection algorithm to deskew the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseLineDetectionCheckDeskew</pre>
      </objectivec>
      <java>
        <pre>USE_LINE_DETECTION_CHECK_DESKEW</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DeskewCommandFlags.UseExtendedDeskew">
      <summary>Use an alternative algorithm to deskew the image, this algorithm is equivalent to the obsolete command DeskewCommandExtended. This flag when set, the properties <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleRange" /> and <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleResolution" /> are used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDeskewCommandFlags_UseExtendedDeskew</pre>
      </objectivec>
      <java>
        <pre>USE_EXTENDED_DESKEW</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DeskewCommand">
      <summary>Rotates the specified image to straighten it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Bank checks|Money checks|Check scanning|Check imaging|Document imaging|Document scanning|Banking|Bank check scanning|Scan checks|Scanning checks|Deskewing|Scanning|Straightening</keywords>
      <remarks>
        <para class="xmldocbulletlist">
                    This command is typically used to automatically straighten scanned images,
                    including bank checks. This command is available in the
                    <see cref="T:Leadtools.Topics.RasterProDocMed">Document\Medical</see> Toolkits.
                </para>
        <para class="xmldocbulletlist">
                This command contains a special algorithm for detecting the skewed checks, To do
                this add the following flags to Flags property (<see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseCheckDeskew | <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseLineDetectionCheckDeskew)
                </para>
        <list type="bullet">
          <item>If the Flags property or the flags parameter of the Constructor contains
                    <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags">DeskewCommandFlags</see>.ReturnAngleOnly, the
                    command will update the Angle property without rotating the image.</item>
          <item>
            <description>The calculated rotation is limited to 20 degrees in either
                        direction. This command is intended for images, such as scanned documents,
                        that are mainly horizontal lines of text. The results are less predictable
                        with other types of images.</description>
          </item>
          <item>
            <description>This command includes an option to skip deskewing if the angle
                        is very small.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48
                        and 64-bit color images. If the image is 12 and 16-bit grayscale and 48 and
                        64-bit color, the command will not throw an exception.</description>
          </item>
          <item>
            <description>This command does not support signed data
                        images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale
                        images.</description>
          </item>
          <item>
                        This command has been expanded with several flags that can be used to work
                        on bank check images. Different algorithms can be used. For more
                        information, refer to the Remarks section of the
                        <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand">DeskewCommand</see>
                        class.
                    </item>
        </list>For more information, refer to
                <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub DeskewCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As DeskewCommand = New DeskewCommand
      'Deskew the image.
      command.Flags = DeskewCommandFlags.DeskewImage Or DeskewCommandFlags.DoNotFillExposedArea

      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DeskewCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.DoNotFillExposedArea;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DeskewCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DeskewCommand();
         //Deskew the image.
         command.flags = DeskewCommandFlags.deskewImage | DeskewCommandFlags.doNotFillExposedArea;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task DeskewCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.DoNotFillExposedArea;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void DeskewCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.DoNotFillExposedArea;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub DeskewCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DeskewCommand = New DeskewCommand()
         'Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage Or DeskewCommandFlags.DoNotFillExposedArea
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand">
      </seealso>
      <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])">
      </seealso>
      <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])">
      </seealso>
      <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand">
      </seealso>
      <objectivec>
        <pre>@interface LTDeskewCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class DeskewCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>The default value for fillColor is RasterColor(0, 0, 0). The default value for angle is 0. The default value for flags is DeskewCommandFlags::DeskewImage | DeskewCommandFlags::FillExposedArea.</remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public DeskewCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.#ctor(Leadtools.RasterColor,Leadtools.ImageProcessing.Core.DeskewCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fillColor">Used to fill the background following rotation. This is used only if 
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.FillExposedArea is set in the flags parameter.</param>
      <param name="flags">Flags that indicate whether to deskew the image, which background color to use, 
            whether to deskew
            the image if the skew angle is very small, which type of interpolation to use, whether the image contains mostly
            text, and whether to use normal or fast rotation.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFillColor:(LTRasterColor*)fillColor 
                  flags:(LTDeskewCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public DeskewCommand(
   RasterColor fillColor,
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DeskewCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.Angle">
      <summary>Amount by which the method rotates the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Amount by which the method rotates the image. The amount of rotation is expressed in hundredths 
            of degrees. For example, 500 means 5 degrees clockwise. Valid values range from -2000 through 2000.</value>
      <example>
        <code lang="VB">   Public Sub AnglePropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As DeskewCommand
      command = New DeskewCommand
      'Deskew the image.
      command.Flags = DeskewCommandFlags.DeskewImage Or DeskewCommandFlags.FillExposedArea
      command.FillColor = New RasterColor(255, 255, 0)
      command.Run(leadImage)

      MessageBox.Show("The Angle = " &amp; command.Angle.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AnglePropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.FillExposedArea;
         command.FillColor = new RasterColor(255, 255, 0);

         command.Run(image);

         MessageBox.Show("The Angle = " + command.Angle.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AnglePropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DeskewCommand();
         //Deskew the image.
         command.flags = DeskewCommandFlags.deskewImage | DeskewCommandFlags.fillExposedArea;
         command.fillColor = Leadtools.RasterColorHelper.create(255, 255, 0);
         
         command.run(image);
         
         console.error("The Angle = " + command.angle.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AnglePropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.FillExposedArea;
         command.FillColor = RasterColorHelper.Create(255, 255, 0);

         command.Run(image);

         Debug.WriteLine("The Angle = " + command.Angle.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void AnglePropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         //Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.FillExposedArea;
         command.FillColor = new RasterColor(255, 255, 0);
         command.Run(image);
         Debug.WriteLine("The Angle = " + command.Angle.ToString());

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub AnglePropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DeskewCommand = New DeskewCommand()
         'Deskew the image.
         command.Flags = DeskewCommandFlags.DeskewImage Or DeskewCommandFlags.FillExposedArea
         command.FillColor = New RasterColor(255, 255, 0)
         command.Run(image)
         Debug.WriteLine("The Angle = " &amp; command.Angle.ToString())

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int angle;</pre>
      </objectivec>
      <java>
        <pre>public int getAngle()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleRange">
      <summary>Gets or sets the value that indicates the maximum angle of deskew, in hundredths of degrees. This value is only used when the user set the property <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags" /> to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseExtendedDeskew. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Value that indicates the maximum angle of deskew, in hundredths of degrees. Possible values 
            range from 0 to 4500. This value is divided internally by 100. . This value is only used when the user set the property <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags" /> to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseExtendedDeskew.</value>
      <example>
        <code lang="VB">   Public Sub DeskewCommandExtendedVersionExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As DeskewCommand = New DeskewCommand
      Dim fillColor As New RasterColor(0, 0, 0)

      command.FillColor = fillColor
      command.Flags = DeskewCommandFlags.DeskewImage Or DeskewCommandFlags.DoNotFillExposedArea Or DeskewCommandFlags.RotateLinear Or DeskewCommandFlags.DocumentImage
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DeskewExtendedCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DeskewCommand command = new DeskewCommand();
         RasterColor fillColor = new RasterColor(0, 0, 0);


         command.FillColor = fillColor;
         command.Flags = DeskewCommandFlags.DeskewImage | DeskewCommandFlags.DoNotFillExposedArea | DeskewCommandFlags.RotateLinear | DeskewCommandFlags.DocumentImage;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int angleRange;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngleRange()
public void setAngleRange(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleResolution">
      <summary>Gets or sets the value that indicates the deskew angle precision on which the filter is applied. This value is only used when the user set the property <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags" /> to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseExtendedDeskew. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Value that indicates the Deskew angle precision on which the filter is applied. The valid range is 
            from 1 to <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleRange" /> (maximum deskew angle). The real 
            value is divided by 10. This value is only used when the user set the property <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags" /> to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.UseExtendedDeskew.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.AngleRange" /> Example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int angleResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngleResolution()
public void setAngleResolution(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.FillColor">
      <summary>Gets or sets the color used to fill the background following rotation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Color used to fill the background following rotation. This is used only if 
            <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommandFlags" />.FillExposedArea is set in the Flags property.</value>
      <example>
            Refer to <see cref="P:Leadtools.ImageProcessing.Core.DeskewCommand.Angle" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* fillColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getFillColor()
public void setFillColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DeskewCommand.Flags">
      <summary>Gets or sets flags that indicate whether to deskew the image and which background color to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that indicate whether to deskew the image, which background color to use, whether to deskew
            the image if the skew angle is very small, which type of interpolation to use, whether the image contains mostly
            text, and whether to use normal or fast rotation.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTDeskewCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoCropCommand">
      <summary>Trims the current image, removing blank space around the edges. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>Generally, this command is used for automatically 
            trimming blank space from the edges of scanned documents.</description>
          </item>
          <item>
            <description>Nevertheless, because this command uses changes in 
            intensity to detect blank space, it can trim edges of any color or 
            intensity.</description>
          </item>
          <item>
            <description>If a region is defined for the image, the region 
            is also trimmed if necessary.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color 
            images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub AutoCropCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As AutoCropCommand = New AutoCropCommand()
      ' AutoCrop the image with 20 tolerance.
      command.Threshold = 20
      command.Run(image)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AutoCropCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         AutoCropCommand command   = new AutoCropCommand();
         //AutoCrop the image with 20 tolerance.
         command.Threshold         = 20;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoCropCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE1.CMP";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command   = new AutoCropCommand();
         //AutoCrop the image with 20 tolerance.
         command.threshold = 20;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AutoCropCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         AutoCropCommand command   = new AutoCropCommand();
         //AutoCrop the image with 20 tolerance.
         command.Threshold         = 20;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void AutoCropCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         AutoCropCommand command   = new AutoCropCommand();
         //AutoCrop the image with 20 tolerance.
         command.Threshold         = 20;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub AutoCropCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As AutoCropCommand = New AutoCropCommand()
         'AutoCrop the image with 20 tolerance.
         command.Threshold = 20
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.CropCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.CopyRectangleCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <objectivec><pre>@interface LTAutoCropCommand : LTRasterCommand</pre></objectivec><java><pre>public class AutoCropCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.#ctor">
      <summary>Initializes a new AutoCropCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public AutoCropCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.#ctor(System.Int32)">
      <summary>Initializes a new AutoCropCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="threshold">Delta value for detecting blank space. Starting
            at each edge of the image and evaluating toward the center, any 
            change in intensity that is less than or equal to this value 
            is considered blank space. Valid values are 0 to 255.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithThreshold:(unsigned int)threshold;</pre>
      </objectivec>
      <java>
        <pre>public AutoCropCommand(int threshold)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoCropCommand.Threshold">
      <summary>Gets or sets the delta value for detecting blank space. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Delta value for detecting blank space. Starting at each edge of 
            the image and evaluating toward the center, any change in intensity 
            that is less than or equal to this property is considered blank 
            space. Valid values are 0 to 255.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int threshold;</pre>
      </objectivec>
      <java>
        <pre>
public int getThreshold()
public void setThreshold(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand">
      <summary>Sets up the paint or paint and image processing methods window leveling
            options for a specific image through a linear transformation described 
            by the window center and width.  This class is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This class sets up the paint or paint and image 
            processing methods window leveling options for a specific image through 
            a linear transformation described by the window center and width.  In the 
            DICOM world, this is referred to as "applying a linear VOI LookupTable (LookupTable)".</description>
          </item>
          <item>
            <description>This class will remap the LookupTable used to display and 
            process an image by applying the linear transformation described by the 
            window center and window width.  In the DICOM world this is referred to 
            as applying a "linear VOI LookupTable (LookupTable)". The DICOM standard states:</description>
          </item>
          <item>
            <description>"Window Center and Window Width specify a linear 
            conversion from stored pixel values (after any Modality LookupTable or Rescale 
            Slope and Intercept specified in the IOD have been applied) to values to
            be displayed. Window Center contains the input value that is the center 
            of the window. Window Width contains the width of the window." Please 
            see "VOI LookupTable (LookupTable) Module Attributes" in the DICOM standard for more details.</description>
          </item>
          <item>
            <description>This class does not change the image data; it only 
            updates the entries inside the image LookupTable.</description>
          </item>
          <item>
            <description>It's recommended to always set the <see cref="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags">VoiLookupTableCommandFlags.UpdateMinMax</see> flag.</description>
          </item>
          <item>
            <description>In the DICOM world you must set <see cref="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags">VoiLookupTableCommandFlags.ReverseOrder</see> flag 
            if the photometric interpretation of the image is "MONOCHROME1", where 
            the minimum grayscale value is intended to be displayed as white after 
            any VOI gray scale transformations have been performed.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ApplyLinearVoiLookupTableCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ApplyLinearVoiLookupTableCommand = New ApplyLinearVoiLookupTableCommand
      command.Flags = VoiLookupTableCommandFlags.None
      command.Center = 330.0
      command.Width = 600.0
      ' Apply "Abdomen T1" window-level , high bit is assumed 
      ' to be "11" and low bit "0. 
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyLinearVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand();
         command.Flags  = VoiLookupTableCommandFlags.None;
         command.Center = 330.0;
         command.Width  = 600.0;
         // Apply "Abdomen T1" window-level , high bit is assumed 
         // to be "11" and low bit "0. 
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyLinearVoiLookupTableCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var command = new ApplyLinearVoiLookupTableCommand();
         command.flags  = VoiLookupTableCommandFlags.none;
         command.center = 330.0;
         command.width  = 600.0;
         // Apply "Abdomen T1" window-level , high bit is assumed 
         // to be "11" and low bit "0. 
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyLinearVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand();
         command.Flags  = VoiLookupTableCommandFlags.None;
         command.Center = 330.0;
         command.Width  = 600.0;
         // Apply "Abdomen T1" window-level , high bit is assumed 
         // to be "11" and low bit "0. 
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyLinearVoiLookupTableCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand();
         command.Flags = VoiLookupTableCommandFlags.None;
         command.Center = 330.0;
         command.Width = 600.0;
         // Apply "Abdomen T1" window-level , high bit is assumed 
         // to be "11" and low bit "0. 
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyLinearVoiLookupTableCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ApplyLinearVoiLookupTableCommand = New ApplyLinearVoiLookupTableCommand()
         command.Flags = VoiLookupTableCommandFlags.None
         command.Center = 330.0
         command.Width = 600.0
         ' Apply "Abdomen T1" window-level , high bit is assumed 
         ' to be "11" and low bit "0. 
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand"></seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectExtendedCommand"></seealso>.
            <objectivec><pre>@interface LTApplyLinearVoiLookupTableCommand : LTRasterCommand</pre></objectivec><java><pre>public class ApplyLinearVoiLookupTableCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.#ctor">
      <summary>Initializes a new ApplyLinearVoiLookupTableCommand with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ApplyLinearVoiLookupTableCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.#ctor(System.Double,System.Double,Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags)">
      <summary>Initializes a new ApplyLinearVoiLookupTableCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="center">Center of the window of interest.</param>
      <param name="width">Width of the window of interest. </param>
      <param name="flags">Flags that determine the behavior of this method.</param>
      <example>
        <code lang="VB">   Public Sub ApplyLinearVoiLookupTableConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      ' Apply "Abdomen T1" window-level , high bit is assumed 
      ' to be "11" and low bit "0. 
      Dim command As ApplyLinearVoiLookupTableCommand = New ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyLinearVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         // Apply "Abdomen T1" window-level , high bit is assumed to be "11" and low bit "0.
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyLinearVoiLookupTableConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         // Apply "Abdomen T1" window-level , high bit is assumed to be "11" and low bit "0.
         var command = new ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyLinearVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Apply "Abdomen T1" window-level , high bit is assumed to be "11" and low bit "0.
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyLinearVoiLookupTableConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Apply "Abdomen T1" window-level , high bit is assumed to be "11" and low bit "0.
         ApplyLinearVoiLookupTableCommand command = new ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyLinearVoiLookupTableConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Apply "Abdomen T1" window-level , high bit is assumed to be "11" and low bit "0.
         Dim command As ApplyLinearVoiLookupTableCommand = New ApplyLinearVoiLookupTableCommand(330.0, 600.0, VoiLookupTableCommandFlags.None)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithCenter:(double)center 
               width:(double)width 
               flags:(LTVoiLookupTableCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ApplyLinearVoiLookupTableCommand(
   double center,
   double width, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.Center">
      <summary>Gets or sets the center of the window of interest. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Center of the window of interest.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) double center;</pre>
      </objectivec>
      <java>
        <pre>
public double getCenter()
public void setCenter(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.Width">
      <summary>Width of the window of interest. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value> Width of the window of interest.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) double width;</pre>
      </objectivec>
      <java>
        <pre>
public double getWidth()
public void setWidth(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand.Flags">
      <summary>Flags that determine the behavior of the command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that determine the behavior of the command. These 
            flags can be OR-ed together.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTVoiLookupTableCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand">
      <summary>Converts a grayscale unsigned image to a signed image by shifting the image data to the negative side by the amount specified by the user. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This command is similar to <see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand" />. However, <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> updates <see cref="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount" /> 
            with the value by which the intensity values were shifted. The updated <see cref="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount" /> value can be passed to ZeroToNegativeCommand to convert the image back to signed (i.e. after using image processing 
            command that works in unsigned 12-16 bit grayscale image).<br /><see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> and <b>ZeroToNegativeCommand</b> are most
            often used in concert with one or more image processing or analysis commands. 
            <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> converts 
            signed data to unsigned data, in preparation for image processing or analysis commands that work on unsigned 
            image data. After the image processing or analysis is performed, <b>ZeroToNegativeCommand</b> can be used to converts 
            the unsigned data back to signed data.
            <br></br>This command is used usually after the command <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" />.
            <br></br>This command updates the <see cref="P:Leadtools.RasterImage.Signed" /> property of the <see cref="T:Leadtools.RasterImage" />.
            <br></br>This command also updates the <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" /> properties of the <see cref="T:Leadtools.RasterImage" />.
            <br></br>This command supports signed data images and supports 12 and 16-bit grayscale and 48 and 64-bit color images. 
            Support for 12 and 16-bit grayscale and 48 and 64-bit color images is 
            available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.
            However, this command does not support 8-bit images.
            <br></br>This command does not support 32-bit grayscale images.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ZeroToNegativeCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      ' Convert the image to unsigned image by shifting the negative values to become positive.
      Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand
      MinToZCommand.Run(leadImage)

      ' Apply multiscale enhancement
      Dim MultiScaleCommand As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)

      ' Convert the image back to signed by shifting the same amount in the negative side.
      Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand
      command.MinimumInput = -32767
      command.MaximumInput = 32766
      command.MinimumOutput = 0
      command.MaximumOutput = 65535
      command.ShiftAmount = MinToZCommand.ShiftAmount
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ZeroToNegativeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ZeroToNegativeCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Convert the image to unsigned image by shifting the negative values to become positive.
         var MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.run(image); 
         
         // Apply multiscale enhancement
         var MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.gaussian, MultiscaleEnhancementCommandFlags.edgeEnhancement);
         
         // Convert the image back to signed by shifting the same amount in the negative side.
         var command = new ZeroToNegativeCommand();
         command.minimumInput  = -32767;
         command.maximumInput  = 32766;
         command.minimumOutput = 0;
         command.maximumOutput = 65535;
         command.shiftAmount   = MinToZCommand.shiftAmount;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ZeroToNegativeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ZeroToNegativeCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 
         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ZeroToNegativeCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Convert the image to unsigned image by shifting the negative values to become positive.
         Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand()
         MinToZCommand.Run(image)
         ' Apply multiscale enhancement
         Dim MultiScaleCommand As MultiscaleEnhancementCommand = _
            New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)

         ' Convert the image back to signed by shifting the same amount in the negative side.
         Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand()
         command.MinimumInput = -32767
         command.MaximumInput = 32766
         command.MinimumOutput = 0
         command.MaximumOutput = 65535
         command.ShiftAmount = MinToZCommand.ShiftAmount
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand"></seealso>.
            <objectivec><pre>@interface LTZeroToNegativeCommand : LTRasterCommand</pre></objectivec><java><pre>public class ZeroToNegativeCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ZeroToNegativeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="shiftAmount">Value that is used to shift the image data to the negative side.</param>
      <param name="minimumInput">The image minimum value. This value can be obtained MinMaxValuesCommand</param>
      <param name="maximumInput">The image maximum value. This value can be obtained MinMaxValuesCommand</param>
      <param name="minimumOutput">The minimum allowed value, which means that the image data values after applying the command will not be less than this value.</param>
      <param name="maximumOutput">The maximum allowed value, which means that the image data values after applying the command will not exceed this value.</param>
      <example>
        <code lang="VB">   Public Sub ZeroToNegativeConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      ' Convert the image to unsigned image by shifting the negative values to become positive.
      Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand
      MinToZCommand.Run(leadImage)

      ' Apply multiscale enhancement
      Dim MultiScaleCommand As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)

      ' Convert the image back to signed by shifting the same amount in the negative side.
      Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand(MinToZCommand.ShiftAmount, -32767, 32766, 0, 65535)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ZeroToNegativeConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand(MinToZCommand.ShiftAmount, -32767, 32766, 0, 65535);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ZeroToNegativeConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Convert the image to unsigned image by shifting the negative values to become positive.
         var MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.run(image); 

         // Apply multiscale enhancement
         var MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.gaussian, MultiscaleEnhancementCommandFlags.edgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         var command = new ZeroToNegativeCommand(MinToZCommand.shiftAmount, -32767, 32766, 0, 65535);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ZeroToNegativeConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand(MinToZCommand.ShiftAmount, -32767, 32766, 0, 65535);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ZeroToNegativeConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image);
         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand(MinToZCommand.ShiftAmount, -32767, 32766, 0, 65535);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ZeroToNegativeConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Convert the image to unsigned image by shifting the negative values to become positive.
         Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand()
         MinToZCommand.Run(image)
         ' Apply multiscale enhancement
         Dim MultiScaleCommand As MultiscaleEnhancementCommand = _
            New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)

         ' Convert the image back to signed by shifting the same amount in the negative side.
         Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand(MinToZCommand.ShiftAmount, -32767, 32766, 0, 65535)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithShiftAmount:(int)shiftAmount 
             minimumInput:(int) minimumInput 
             maximumInput:(int)maximumInput 
            minimumOutput:(int)minimumOutput 
            maximumOutput:(int)maximumOutput;            </pre>
      </objectivec>
      <java>
        <pre>
public ZeroToNegativeCommand(
   int shiftAmount, 
   int minimumInput, 
   int maximumInput, 
   int minimumOutput, 
   int maximumOutput
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.ShiftAmount">
      <summary>Gets or sets the value that is used to shift the image data to the negative side. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that is used to shift the image data to the negative side.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int shiftAmount;</pre>
      </objectivec>
      <java>
        <pre>
public int getShiftAmount()
public void setShiftAmount(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MinimumInput">
      <summary>Gets or sets the image minimum value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image minimum value. This value can be optained MinMaxValuesCommand.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumInput;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumInput()
public void setMinimumInput(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MaximumInput">
      <summary>Gets or sets the image maximum value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image maximum value. This value can be optained MinMaxValuesCommand.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumInput;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumInput()
public void setMaximumInput(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MinimumOutput">
      <summary>Gets or sets the minimum allowed value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum allowed value, which means that the image data values after applying the command will not be less than this value.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumOutput;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumOutput()
public void setMinimumOutput(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand.MaximumOutput">
      <summary>Gets or sets the maximum allowed value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum allowed value, which means that the image data values after applying the command will not axceed this value.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumOutput;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumOutput()
public void setMaximumOutput(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SigmaCommand">
      <summary>Performs an edge preserving average filter on bitmap. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The amount of blur is controlled by specifying the size of the neighborhood.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit 
            grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub SigmaCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As SigmaCommand = New SigmaCommand
      'Apply 
      command.Dimension = 10
      command.Sigma = 2
      command.Threshold = 0.2F
      command.Outline = False
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void SigmaCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            SigmaCommand command = new SigmaCommand();
            //Apply 
            command.Dimension = 10;
            command.Sigma = 2;
            command.Threshold = 0.2f;
            command.Outline = false;
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SigmaCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SigmaCommand();
         //Apply 
         command.dimension = 10;
         command.sigma = 2;
         command.threshold = 0.2;
         command.outline = false;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task SigmaCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            SigmaCommand command = new SigmaCommand();
            //Apply 
            command.Dimension = 10;
            command.Sigma = 2;
            command.Threshold = 0.2f;
            command.Outline = false;
            command.Run(image);

        }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.SigmaCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SigmaCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SigmaCommand.#ctor(System.Int32,System.Int32,System.Single,System.Boolean)">
      <summary>Initializes a new SigmaCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="dimension">
            Dimensions of the neighborhood used for filtering.
            </param>
      <param name="sigma">
            Number of Standard Deviations of the kernel calculated pixels must be within.
            </param>
      <param name="threshold">
            Minimum percentage of pixels included to the number of pixels in the kernel.
            </param>
      <param name="outline">
            Whether the central pixel is included in the calculation of the filter or not.
            </param>
      <example>
        <code lang="VB">   Public Sub SigmaCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As SigmaCommand = New SigmaCommand
      'Apply 
      command.Dimension = 10
      command.Sigma = 2
      command.Threshold = 0.2F
      command.Outline = False
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void SigmaCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            SigmaCommand command = new SigmaCommand();
            //Apply 
            command.Dimension = 10;
            command.Sigma = 2;
            command.Threshold = 0.2f;
            command.Outline = false;
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SigmaCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SigmaCommand();
         //Apply 
         command.dimension = 10;
         command.sigma = 2;
         command.threshold = 0.2;
         command.outline = false;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task SigmaCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            SigmaCommand command = new SigmaCommand();
            //Apply 
            command.Dimension = 10;
            command.Sigma = 2;
            command.Threshold = 0.2f;
            command.Outline = false;
            command.Run(image);

        }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SigmaCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SigmaCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SigmaCommand.Outline">
      <summary>Gets or sets the outline value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Whether the middle pixel is included or not.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SigmaCommand.Threshold">
      <summary>Gets or sets the threshold value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Percentage of pixels included to number of pixels in kernel.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SigmaCommand.Dimension">
      <summary>Gets or sets the dimensions of the neighborhood used for filtering. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Dimensions of the neighborhood used for filtering.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SigmaCommand.Sigma">
      <summary>Gets or sets the Sigma value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Number of standard deviations the pixel value can be within.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SigmaCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand">
      <summary>Sets a Kaufmann region based on the color value of the specified point in the enhanced image (KaufmannProcessedImage). This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
            This class is used to calculate the Kaufmann ratio (size of the corpus callosum / size of the brain sphere). The corpus
            callosum is a white matter structure that consists of nerve fibers that connect the left and right hemispheres of the brain.
            <br />
            Prior to creating the Kaufmann region, this command performs noise reduction on an image using enhancement procedures such
            as the Gaussian blur. Then this command class (using a magic wand technique) creates a Kaufmann region that starts with the
            color value of the point specified in <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart" /> and ends at the value specified in <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold" />.
            The region is placed in <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage" />. The <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage" /> contains the data from
            <b>Image</b>, (enhanced using the internal enhancing procedures) and the resulting region. The Image itself is not changed. The
            area of the resulting region can be used to calculate the Kaufmann ratio.<br />
            To calculate the Kaufmann ratio do the following steps:
            <list type="number"><item><description>
            Call the command to make a region around the corpus callosum, adjusting the following properties in
            order to make the region around the area you want, and then save the <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount" /> value:
            <list type="bullet"><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.CombineMode" /> property - a <see cref="T:Leadtools.RasterRegionCombineMode" /> value that specifies how the area being added is to be combined.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage" /> property - the <see cref="T:Leadtools.RasterImage" /> that contains the region.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MaximumInput" /> property - an integer which specifies which values are to be considered to be highlights. This value is used internally to brighten the highlights to make region selection easier.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MinimumInput" /> property - an integer which specifies which values are to be considered to be shadows. This value is used internally to darken the shadows to make region selection easier.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.Radius" /> property - the size of the neighborhood used in the internal blurring process.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart" /> property - the starting point for the created region.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold" /> property - the stopping point for the magic wand region expansion. If the difference between the color of the new pixel which is about to be included in the region and the pixel color which is pointed by Region exceeds the difference between the <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold" /> and the pixel color which is pointed to by <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart" />, the pixel will not be included.</description></item><item><description><see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RemoveHoles" /> property - value that specifies whether to remove all holes from the created region.</description></item></list></description></item><item><description>
            Call the command a second time to make a region around the brain sphere after adjusting the properties
            appropriately, and save the <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount" /> value.
            </description></item><item><description>
            Now calculate the ratio.
            </description></item><item><description>This command does not support 32-bit grayscale images.</description></item></list>
            For more information on how to calculate the brain ratio refer to the example below.<br />
            This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub KaufmannRegionCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE3.dcm"))

      ' Prepare the command
      Dim startPoint As LeadPoint = New LeadPoint((leadImage.Width \ 2), (leadImage.Height \ 2))

      ' apply the command in order to get the pixels count of the first region.
      Dim KaufmannCommandInner As KaufmannRegionCommand = New KaufmannRegionCommand
      KaufmannCommandInner.CombineMode = RasterRegionCombineMode.Set
      KaufmannCommandInner.MaximumInput = 110
      KaufmannCommandInner.MinimumInput = 54
      KaufmannCommandInner.Radius = 21
      KaufmannCommandInner.RegionStart = startPoint
      KaufmannCommandInner.RegionThreshold = 13
      KaufmannCommandInner.RemoveHoles = True
      KaufmannCommandInner.Run(leadImage)

      Dim firstPixelCount As Integer = KaufmannCommandInner.PixelsCount

      ' apply the command once more.
      Dim KaufmannCommandOuter As KaufmannRegionCommand = New KaufmannRegionCommand(29, 51, 229, 207, startPoint, True, RasterRegionCombineMode.Set)
      KaufmannCommandOuter.Run(leadImage)

      Dim secondPixelCount As Integer = KaufmannCommandOuter.PixelsCount

      ' print the ratio between the first and the second region.
      Dim result As Double = (firstPixelCount * 1.0 / secondPixelCount)
      MessageBox.Show(result.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void KaufmannRegionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Image3.dcm"));

         // Prepare the command
         LeadPoint startPoint = new LeadPoint((image.Width / 2), (image.Height / 2));

         // apply the command in order to get the pixels count of the first region.
         KaufmannRegionCommand KaufmannCommandInner = new KaufmannRegionCommand();
         KaufmannCommandInner.CombineMode = RasterRegionCombineMode.Set;
         KaufmannCommandInner.MaximumInput = 110;
         KaufmannCommandInner.MinimumInput = 54;
         KaufmannCommandInner.Radius = 21;
         KaufmannCommandInner.RegionStart = startPoint;
         KaufmannCommandInner.RegionThreshold = 13;
         KaufmannCommandInner.RemoveHoles = true;
         KaufmannCommandInner.Run(image);

         int firstPixelCount = KaufmannCommandInner.PixelsCount;

         // apply the command once more.
         KaufmannRegionCommand KaufmannCommandOuter = new KaufmannRegionCommand(29, 51, 229, 207, startPoint, true, RasterRegionCombineMode.Set);
         KaufmannCommandOuter.Run(image);

         int secondPixelCount = KaufmannCommandOuter.PixelsCount;

         // print the ratio between the first and the second region.
         double result = (firstPixelCount * 1.0 / secondPixelCount);
         MessageBox.Show(result.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function KaufmannRegionCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\image3.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var startPoint = Leadtools.LeadPointHelper.create((image.width / 2), (image.height / 2));
         
         // apply the command in order to get the pixels count of the first region.
         var KaufmannCommandInner = new KaufmannRegionCommand();
         KaufmannCommandInner.combineMode = Leadtools.RasterRegionCombineMode.set;
         KaufmannCommandInner.maximumInput = 110;
         KaufmannCommandInner.minimumInput = 54;
         KaufmannCommandInner.radius = 21;
         KaufmannCommandInner.regionStart = startPoint;
         KaufmannCommandInner.regionThreshold = 13;
         KaufmannCommandInner.removeHoles = true;
         KaufmannCommandInner.run(image);
         
         var firstPixelCount = KaufmannCommandInner.pixelsCount;
         
         // apply the command once more.
         var KaufmannCommandOuter = new KaufmannRegionCommand(29, 51, 229, 207, startPoint, true, Leadtools.RasterRegionCombineMode.set);
         KaufmannCommandOuter.run(image);
         
         var secondPixelCount = KaufmannCommandOuter.pixelsCount;
         
         // print the ratio between the first and the second region.
         var result = (firstPixelCount * 1.0 / secondPixelCount);
         console.error(result.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task KaufmannRegionCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image3.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LeadPoint startPoint = LeadPointHelper.Create((image.Width / 2), (image.Height / 2));

         // apply the command in order to get the pixels count of the first region.
         KaufmannRegionCommand KaufmannCommandInner = new KaufmannRegionCommand();
         KaufmannCommandInner.CombineMode = RasterRegionCombineMode.Set;
         KaufmannCommandInner.MaximumInput = 110;
         KaufmannCommandInner.MinimumInput = 54;
         KaufmannCommandInner.Radius = 21;
         KaufmannCommandInner.RegionStart = startPoint;
         KaufmannCommandInner.RegionThreshold = 13;
         KaufmannCommandInner.RemoveHoles = true;
         KaufmannCommandInner.Run(image);

         int firstPixelCount = KaufmannCommandInner.PixelsCount;

         // apply the command once more.
         KaufmannRegionCommand KaufmannCommandOuter = new KaufmannRegionCommand(29, 51, 229, 207, startPoint, true, RasterRegionCombineMode.Set);
         KaufmannCommandOuter.Run(image);

         int secondPixelCount = KaufmannCommandOuter.PixelsCount;

         // print the ratio between the first and the second region.
         double result = (firstPixelCount * 1.0 / secondPixelCount);
         Debug.WriteLine(result.ToString());

      }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeIntensityCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.StretchIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeSaturationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramEqualizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.GaussianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.#ctor">
      <summary>Initializes a new KaufmannRegionCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,System.Boolean,Leadtools.RasterRegionCombineMode)">
      <summary>Initializes a new KaufmannRegionCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="radius">Value that indicates the size of the neighborhood used for blurring each pixel of the image.</param>
      <param name="minimumInput">Value that specifies the image's shadows to be mapped. Valid values range from 0 to 255 for 8-bit, 0 to 4095 for 12-bit and 0 to 65535 for 16-bit images.</param>
      <param name="maximumInput">Value that specifies the image's highlights to be mapped. Valid values range from 0 to 255 for 8-bit, 0 to 4095 for 12-bit and 0 to 65535 for 16-bit images.</param>
      <param name="regionThreshold">Value that specifies the values that set the stopping point for the region.</param>
      <param name="regionStart">Value that indicates whether to remove all holes from the region that's created internally.</param>
      <param name="combineMode">Value that represent the action to take regarding the existing image region, if one is defined.</param>
      <param name="removeHoles">Value that indicates whether to remove all holes from the region that's created internally.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.Radius">
      <summary>Gets or sets Value that indicates the size of the neighborhood used for blurring each pixel of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value> Value that indicates the size of the neighborhood used for blurring each pixel of the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MinimumInput">
      <summary>Gets or sets the value that specifies which values are to be considered to be shadows. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>An integer which specifies which values are to be considered to be shadows.
            Valid values range from 0 to 255 for 8-bit, 0 to 4095 for 12-bit and 0 to 65535 for 16-bit images.</value>
      <remarks>
            This value is used internally to darken the shadows to make region selection easier.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.MaximumInput">
      <summary>Gets or sets the value that specifies which values are to be considered to be highlights. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>An integer which specifies which values are to be considered to be highlights.
            Valid values range from 0 to 255 for 8-bit, 0 to 4095 for 12-bit and 0 to 65535 for 16-bit images.</value>
      <remarks>
            This value is used internally to brighten the highlights to make region selection easier.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold">
      <summary>Gets or sets the value that specifies the stopping point for the region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The stopping point for the region.</value>
      <remarks>
            The region is created using a magic wand technique. The Magic Wand is a selection tool that works by starting from a
            point and expanding to different areas of the image. If the difference between the color of the new pixel which is
            about to be included in the region and the pixel color which is pointed to by <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart" /> exceeds the
            difference between the <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionThreshold" /> and the pixel color which is pointed to by <see cref="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart" />,
            the pixel will not be included. For more information, refer to <see cref="M:Leadtools.RasterImage.AddMagicWandToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)" /> Method.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RegionStart">
      <summary>Gets or sets the value that specifies the starting point for the region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The starting point for the region. </value>
      <remarks>
            The region is created using a magic wand technique. The Magic Wand is a selection tool that works by starting from a
            point and expanding to different areas of the image. For more information, refer to <see cref="M:Leadtools.RasterImage.AddMagicWandToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)" /> Method.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.RemoveHoles">
      <summary>Gets or set the value that indicates whether to remove all holes from the region that's created internally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that indicates whether to remove all holes from the region that's created internally.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.PixelsCount">
      <summary>Gets the pixels count of the region that's created internally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The Pixels count of the region that's created internally.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.CombineMode">
      <summary>Gets or sets a value that indicates how to create a region, if one is defined. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterRegionCombineMode" /> value that indicates how to create a region, if one is defined.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.KaufmannRegionCommand.KaufmannProcessedImage">
      <summary>Gets the instance that references the processed image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>References the Kaufmann processed image, (the enhanced image used to specify the region).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.KaufmannRegionCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType">
      <summary>Flag that indicates how the shift will be done when converting images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTConvertSignedToUnsignedCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum ConvertSignedToUnsignedCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftZeroToCenter">
      <summary>(0x00000000)Shift by 32768 (16-bit images) or by 2048 (12-bit images). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertSignedToUnsignedCommandType_ShiftZeroToCenter</pre>
      </objectivec>
      <java>
        <pre>SHIFT_ZERO_TO_CENTER</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftMinimumToZero">
      <summary>(0x00000001)Shift all image data to make the minimum value in the image 0 and the 
            maximum value to the maximum possible value (65535 for 16-bit, 4095 
            for 12-bit). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertSignedToUnsignedCommandType_ShiftMinimumToZero</pre>
      </objectivec>
      <java>
        <pre>SHIFT_MINIMUM_TO_ZERO</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftNegativeToZero">
      <summary>(0x00000002)Set all the negative pixels to 0 and leave the positive pixels 
            unchanged. (Achieves the same result as ClearNegativePixelsCommand). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertSignedToUnsignedCommandType_ShiftNegativeToZero</pre>
      </objectivec>
      <java>
        <pre>SHIFT_NEGATIVE_TO_ZERO</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftRangeOnly">
      <summary>(0x00000003)Shift data by adding half the range to each pixel without changing 
            bits outside the (LowBit-HighBit) range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertSignedToUnsignedCommandType_ShiftRangeOnly</pre>
      </objectivec>
      <java>
        <pre>SHIFT_RANGE_ONLY</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType.ShiftRangeProcessOutSide">
      <summary>(0x00000004)Shift data by adding half the range to each pixel and set to zero all
            bits outside the (LowBit-HighBit) range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertSignedToUnsignedCommandType_ShiftRangeProcessOutSide</pre>
      </objectivec>
      <java>
        <pre>SHIFT_RANGE_PROCESS_OUTSIDE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand">
      <summary>Converts a signed image to unsigned. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The image may contain negative pixel values and 
            LEADTOOLS will paint/process the image incorrectly.  To use this image 
            correctly the negative pixels should be converted, if it contains 
            negative pixels (if <see cref="P:Leadtools.RasterImage.Signed" /> is True).</description>
          </item>
          <item>
            <description>If the <see cref="P:Leadtools.RasterImage.Signed" /> is set to True, this method
            will shift the color values in the image according to Type property.</description>
          </item>
          <item>
            <description>The method will also update the <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" /> 
            properties of the <see cref="T:Leadtools.RasterImage" />.</description>
          </item>
          <item>
            <description>.</description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 
            and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 
            64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub ConvertSignedToUnsignedCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ConvertSignedToUnsignedCommand = New ConvertSignedToUnsignedCommand
      command.Type = ConvertSignedToUnsignedCommandType.ShiftNegativeToZero
      'convert image to unsigned.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ConvertSignedToUnsignedCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand();
         command.Type   = ConvertSignedToUnsignedCommandType.ShiftNegativeToZero;
         //convert image to unsigned.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ConvertSignedToUnsignedCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ConvertSignedToUnsignedCommand();
         command.type   = ConvertSignedToUnsignedCommandType.shiftNegativeToZero;
         //convert image to unsigned.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ConvertSignedToUnsignedCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand();
         command.Type   = ConvertSignedToUnsignedCommandType.ShiftNegativeToZero;
         //convert image to unsigned.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ConvertSignedToUnsignedCommandExample(RasterImage image)
      {
         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand();
         command.Type   = ConvertSignedToUnsignedCommandType.ShiftNegativeToZero;
         //convert image to unsigned.
         command.Run(image);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ConvertSignedToUnsignedCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As ConvertSignedToUnsignedCommand = New ConvertSignedToUnsignedCommand()
         command.Type = ConvertSignedToUnsignedCommandType.ShiftNegativeToZero
         'convert image to unsigned.
         command.Run(image)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>.
            <objectivec><pre>@interface LTConvertSignedToUnsignedCommand : LTRasterCommand</pre></objectivec><java><pre>public class ConvertSignedToUnsignedCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.#ctor">
      <summary>Initializes a new ConvertSignedToUnsignedCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ConvertSignedToUnsignedCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.#ctor(Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommandType)">
      <summary>Initializes a new ConvertSignedToUnsignedCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="type">Flag that indicates how the shift will be done.</param>
      <example>
        <code lang="VB">   Public Sub ConvertSignedToUnsignedConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ConvertSignedToUnsignedCommand = New ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.ShiftNegativeToZero)
      'convert image to unsigned.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ConvertSignedToUnsignedConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.ShiftNegativeToZero);
         // convert image to unsigned.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ConvertSignedToUnsignedConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.shiftNegativeToZero);
         // convert image to unsigned.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ConvertSignedToUnsignedConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.ShiftNegativeToZero);
         // convert image to unsigned.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ConvertSignedToUnsignedConstructorExample(RasterImage image)
      {
         // Prepare the command
         ConvertSignedToUnsignedCommand command = new ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.ShiftNegativeToZero);
         // convert image to unsigned.
         command.Run(image);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ConvertSignedToUnsignedConstructorExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As ConvertSignedToUnsignedCommand = New ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType.ShiftNegativeToZero)
         ' convert image to unsigned.
         command.Run(image)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithType:(LTConvertSignedToUnsignedCommandType)type;</pre>
      </objectivec>
      <java>
        <pre>public ConvertSignedToUnsignedCommand(ConvertSignedToUnsignedCommandType type)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand.Type">
      <summary>Flags that indicate how the shift will be done. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that indicate how the shift will be done.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTConvertSignedToUnsignedCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public ConvertSignedToUnsignedCommandType getType()
public void setType(ConvertSignedToUnsignedCommandType value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData">
      <summary>The ColorizeGrayCommandData class contains information about gray color intensities (Threshold) and the associated colors (Color) used in the coloration methods 
            of the <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" /> class uses an array of ColorizeGrayCommand class objects with its length being a user-defined number. 
            If the array has N entries, then:<br /><table><tr><td><b>Intensity Range</b></td><td><b>Color</b></td></tr><tr><td>0 ~ Threshold[0]</td><td>Color[0]</td></tr><tr><td>Threshold[0] ~ Threshold[1]</td><td>Color[1]</td></tr><tr><td>Threshold[1] ~ Threshold[2]</td><td>Color[2]</td></tr><tr><td>...</td><td>...</td></tr><tr><td>Threshold[N - 3] ~ Threshold[N - 2]</td><td>Color[N - 2]</td></tr><tr><td>Threshold[N - 2] ~ Threshold[N - 1]</td><td>Color[N - 1]</td></tr></table></description>
          </item>
          <item>
            <description>Notice that the Threshold[N-1] value will be ignored and instead will be treated as a value equal to 255, 4095 and 65535 
            for 8, 12 and 16-bit images respectively.</description>
          </item>
          <item>
            <description>Although it is not a requirement, it is recommended that Threshold[0] is less than Threshold[1], which is less 
            than Threshold[2], ..., which is less than Threshold[N-1]. Consider the following example with a ColorizeGrayCommandData class 
            of 4 entries for a 12-Bit gray image, where this recommendation is not followed:<br /><table><tr><td>Threshold[0] = 1000</td><td>Color[0] is Red</td></tr><tr><td>Threshold[1] = 3000</td><td>Color[1] is Green</td></tr><tr><td>Threshold[2] = 2000  // Notice the threshold here. </td><td>Color[2] is Blue</td></tr><tr><td>Threshold[3] = 4000</td><td>Color[3] is Yellow</td></tr></table></description>
          </item>
          <item>
            <description>In this case, pixel intensities from 0 to 1000 will be Red, pixels 1001 to 3000 will be Green, pixels 3001 to 4000 will be Yellow, 
            and pixels from 4001 to the last possible intensity will be Yellow too.</description>
          </item>
        </list>
        <br />
            For more information, refer to <see cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub ColorizeGrayCommandDataExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim i As Integer
      Dim pGrayColors() As ColorizeGrayCommandData
      ReDim pGrayColors(5)

      For i = 0 To 5
         pGrayColors(i) = New ColorizeGrayCommandData
      Next

      pGrayColors(0).Threshold = 9999
      pGrayColors(1).Threshold = 19999
      pGrayColors(2).Threshold = 29999
      pGrayColors(3).Threshold = 39999
      pGrayColors(4).Threshold = 49999
      pGrayColors(5).Threshold = 59999

      pGrayColors(0).Color = New RasterColor(255, 0, 0)
      pGrayColors(1).Color = New RasterColor(0, 255, 0)
      pGrayColors(2).Color = New RasterColor(0, 0, 255)
      pGrayColors(3).Color = New RasterColor(0, 255, 255)
      pGrayColors(4).Color = New RasterColor(255, 0, 255)
      pGrayColors(5).Color = New RasterColor(255, 255, 0)

      Dim command As ColorizeGrayCommand = New ColorizeGrayCommand
      command.GrayColors = pGrayColors
      'Call the command
      command.Run(leadImage)

      ' Save the resulted Image
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ColorizeGrayCommandDataExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;

         pGrayColors[0].Color       = new RasterColor(255, 0, 0);
         pGrayColors[1].Color       = new RasterColor(0, 255, 0);
         pGrayColors[2].Color       = new RasterColor(0, 0, 255);
         pGrayColors[3].Color       = new RasterColor(0, 255, 255);
         pGrayColors[4].Color       = new RasterColor(255, 0, 255);
         pGrayColors[5].Color       = new RasterColor(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save the resulted image
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ColorizeGrayCommandDataExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var destFileName = "ColorizeGrayResult.bmp";
   var saveImage;

   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var pGrayColors = new Array();
         for (var i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();

         pGrayColors[0].threshold = 9999;
         pGrayColors[1].threshold = 19999;
         pGrayColors[2].threshold = 29999;
         pGrayColors[3].threshold = 39999;
         pGrayColors[4].threshold = 49999;
         pGrayColors[5].threshold = 59999;

         pGrayColors[0].color = Leadtools.RasterColorHelper.create(255, 0, 0);
         pGrayColors[1].color = Leadtools.RasterColorHelper.create(0, 255, 0);
         pGrayColors[2].color = Leadtools.RasterColorHelper.create(0, 0, 255);
         pGrayColors[3].color = Leadtools.RasterColorHelper.create(0, 255, 255);
         pGrayColors[4].color = Leadtools.RasterColorHelper.create(255, 0, 255);
         pGrayColors[5].color = Leadtools.RasterColorHelper.create(255, 255, 0);

         var command = new ColorizeGrayCommand();
         command.grayColors = pGrayColors;
         //Call the command
         command.run(image);
         saveImage = command.destinationImage;

         return Tools.AppLocalFolder().createFileAsync(destFileName);
      }
   })
   .then(function (saveFile) {
      // Save the resulted image
      return codecs.saveAsync(saveImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
    </code>
        <code lang="CSWinRT">      
      public async Task ColorizeGrayCommandDataExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;

         pGrayColors[0].Color       = RasterColorHelper.Create(255, 0, 0);
         pGrayColors[1].Color       = RasterColorHelper.Create(0, 255, 0);
         pGrayColors[2].Color       = RasterColorHelper.Create(0, 0, 255);
         pGrayColors[3].Color       = RasterColorHelper.Create(0, 255, 255);
         pGrayColors[4].Color       = RasterColorHelper.Create(255, 0, 255);
         pGrayColors[5].Color       = RasterColorHelper.Create(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save the resulted image
         string destFileName = @"ColorizeGrayResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
        <code lang="SilverlightCSharp">      public void ColorizeGrayCommandDataExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;
         pGrayColors[0].Color       = new RasterColor(255, 0, 0);
         pGrayColors[1].Color       = new RasterColor(0, 255, 0);
         pGrayColors[2].Color       = new RasterColor(0, 0, 255);
         pGrayColors[3].Color       = new RasterColor(0, 255, 255);
         pGrayColors[4].Color       = new RasterColor(255, 0, 255);
         pGrayColors[5].Color       = new RasterColor(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ColorizeGrayCommandDataExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim pGrayColors As ColorizeGrayCommandData() = New ColorizeGrayCommandData(5){}
         For i As Integer = 0 To 5
            pGrayColors(i) = New ColorizeGrayCommandData()
         Next i
         pGrayColors(0).Threshold = 9999
         pGrayColors(1).Threshold = 19999
         pGrayColors(2).Threshold = 29999
         pGrayColors(3).Threshold = 39999
         pGrayColors(4).Threshold = 49999
         pGrayColors(5).Threshold = 59999
         pGrayColors(0).Color = New RasterColor(255, 0, 0)
         pGrayColors(1).Color = New RasterColor(0, 255, 0)
         pGrayColors(2).Color = New RasterColor(0, 0, 255)
         pGrayColors(3).Color = New RasterColor(0, 255, 255)
         pGrayColors(4).Color = New RasterColor(255, 0, 255)
         pGrayColors(5).Color = New RasterColor(255, 255, 0)

         Dim command As ColorizeGrayCommand = New ColorizeGrayCommand()
         command.GrayColors = pGrayColors
         'Call the command
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</seealso>.
            <objectivec><pre>@interface LTColorizeGrayCommandData : NSObject</pre></objectivec><java><pre>public class ColorizeGrayCommandData</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ColorizeGrayCommandData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.#ctor(Leadtools.RasterColor,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="color">Contains the color used for coloring the range of intensities set in Threshold.</param>
      <param name="threshold">The maximum value of the pixels to be colored using the color parameter. Pixels with a value less than or equal to 
            the value in this parameter will be colored using the Color parameter. If the <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class object is the last 
            in the GrayColors array, then this value is ignored and the maximum possible value will be used instead. <br />The maximum value depends on the 
            image bits per pixel. For 8, 12 and 16-bit images the maximum value is 255, 4095 and 65535 respectively. However if you enter a value higher 
            than the maximum, the value will be clipped at the maximum value.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand">ColorizeGrayCommand(ColorizeGrayCommandData[])</see></example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithColor:(const LTRasterColor*)color 
          threshold:(unsigned int)threshold;            </pre>
      </objectivec>
      <java>
        <pre>
public ColorizeGrayCommandData(
   RasterColor color, 
   int threshold
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.Color">
      <summary>Gets or sets the color used for coloring the range of intensities established by the Threshold property. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Color used for coloring the range of intensities established by the Threshold property.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) const LTRasterColor* color;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getColor()
public void setColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData.Threshold">
      <summary>Gets or sets the maximum pixel value to be colored using the Color property. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum pixel value to be colored using the Color property. The pixels with a value less than or equal to this will have the color 
            set in the Color property. If the <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class is the last in the GrayColors array, then this value is ignored and 
            the maximum possible value will be used instead. <br />The maximum value depends on the image bits per pixel. For 8, 12 and 16-bit images the 
            maximum value is 255, 4095 and 65535 respectively. However if you enter a value higher than the maximum, the value will be clipped at the maximum value.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int threshold;</pre>
      </objectivec>
      <java>
        <pre>
public int getThreshold()
public void setThreshold(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand">
      <summary>Colors an 8, 12 or 16-bit grayscale image. The class changes the color bits/pixel of the image from the specified formats into 24-bit RGB format. 
            This class is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Colorizing|Grayscale images|Visualizaton|Intensity|24-bit images|RGB|12-bit images|16-bit images</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>The class can be used as a visualization aid. More precisely, this class can be used to show variations in an image's intensity values.</description>
          </item>
          <item>
            <description>This class colors the grayscale image (colorizes) by converting specified ranges of grayscale intensities into 
            corresponding RGB values. Use the GrayColors property to set the intensity ranges and the RGB values.</description>
          </item>
          <item>
            <description>Using this class you can show details that were never seen in the original image. In 12 and 16-bit grayscale images, 
            only the 8 most significant bits are displayed, whereas the rest are discarded. So by coloring these discarded bits you can make them 
            visible instead.</description>
          </item>
          <item>
            <description>The class will allocate and store a 24-bit image in DestinationImage.</description>
          </item>
          <item>
            <description>If you set the GrayColors property to null then the class colors the image automatically using an algorithm that 
            generates unique output colors. The output image will contain 256 colors if the input image is 8-bit, 4096 colors if the input image 
            is 12-bit and 65535 colors if the input image is 16-bit.</description>
          </item>
          <item>
            <description>The sample below shows you how to color a 16-bit grayscale image using the GrayColors property.</description>
          </item>
          <item>
            <description>In a 16-bit grayscale image, the lowest pixel value is 0 and the highest pixel value is 65535.</description>
          </item>
          <item>
            <description>The colors from the input images will be colored as follows:<br /><br />
            Pixel intensities from         0 - 9999 will be Red.<br />
            Pixel intensities from 10000 - 19999 will be Green.<br />
            Pixel intensities from 20000 - 29999 will be Blue.<br />
            Pixel intensities from 30000 - 39999 will be Cyan.<br />
            Pixel intensities from 40000 - 49999 will be Magenta.<br />
            Pixel intensities from 50000 - 65535 will be Yellow. (Note: the Threshold value is ignored for the last entry in the GrayColors array.)</description>
          </item>
          <item>
            <description>For more information on filling the GrayColors array to obtain this result, refer to the example.</description>
          </item>
          <item>
            <description>This class supports 8, 12 and 16-bit grayscale images only. Support for 12 and 16-bit grayscale images are available only 
            in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits. It also can process the whole image or a region of the 
            image. If an image has a region, the effect is applied only to the region.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ColorizeGrayCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim i As Integer
      Dim pGrayColors() As ColorizeGrayCommandData
      ReDim pGrayColors(5)

      For i = 0 To 5
         pGrayColors(i) = New ColorizeGrayCommandData
      Next

      pGrayColors(0).Threshold = 9999
      pGrayColors(1).Threshold = 19999
      pGrayColors(2).Threshold = 29999
      pGrayColors(3).Threshold = 39999
      pGrayColors(4).Threshold = 49999
      pGrayColors(5).Threshold = 59999

      pGrayColors(0).Color = New RasterColor(255, 0, 0)
      pGrayColors(1).Color = New RasterColor(0, 255, 0)
      pGrayColors(2).Color = New RasterColor(0, 0, 255)
      pGrayColors(3).Color = New RasterColor(0, 255, 255)
      pGrayColors(4).Color = New RasterColor(255, 0, 255)
      pGrayColors(5).Color = New RasterColor(255, 255, 0)

      Dim command As ColorizeGrayCommand = New ColorizeGrayCommand
      command.GrayColors = pGrayColors
      'Call the command
      command.Run(leadImage)

      ' Save the resulted Image
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ColorizeGrayCommandExample()
      {
         // Load an image

         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;

         pGrayColors[0].Color       = new RasterColor(255, 0, 0);
         pGrayColors[1].Color       = new RasterColor(0, 255, 0);
         pGrayColors[2].Color       = new RasterColor(0, 0, 255);
         pGrayColors[3].Color       = new RasterColor(0, 255, 255);
         pGrayColors[4].Color       = new RasterColor(255, 0, 255);
         pGrayColors[5].Color       = new RasterColor(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save the resulted image
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ColorizeGrayCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var destFileName = "ColorizeGrayResult.bmp";
   var saveImage;

   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var pGrayColors = new Array();
         for (var i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();

         pGrayColors[0].threshold = 9999;
         pGrayColors[1].threshold = 19999;
         pGrayColors[2].threshold = 29999;
         pGrayColors[3].threshold = 39999;
         pGrayColors[4].threshold = 49999;
         pGrayColors[5].threshold = 59999;

         pGrayColors[0].color = Leadtools.RasterColorHelper.create(255, 0, 0);
         pGrayColors[1].color = Leadtools.RasterColorHelper.create(0, 255, 0);
         pGrayColors[2].color = Leadtools.RasterColorHelper.create(0, 0, 255);
         pGrayColors[3].color = Leadtools.RasterColorHelper.create(0, 255, 255);
         pGrayColors[4].color = Leadtools.RasterColorHelper.create(255, 0, 255);
         pGrayColors[5].color = Leadtools.RasterColorHelper.create(255, 255, 0);

         var command = new ColorizeGrayCommand();
         command.grayColors = pGrayColors;
         //Call the command
         command.run(image);
         saveImage = command.destinationImage;

         return Tools.AppLocalFolder().createFileAsync(destFileName);
      }
   })
   .then(function (saveFile) {
      // Save the resulted image
      return codecs.saveAsync(saveImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ColorizeGrayCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;

         pGrayColors[0].Color       = RasterColorHelper.Create(255, 0, 0);
         pGrayColors[1].Color       = RasterColorHelper.Create(0, 255, 0);
         pGrayColors[2].Color       = RasterColorHelper.Create(0, 0, 255);
         pGrayColors[3].Color       = RasterColorHelper.Create(0, 255, 255);
         pGrayColors[4].Color       = RasterColorHelper.Create(255, 0, 255);
         pGrayColors[5].Color       = RasterColorHelper.Create(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save the resulted image
         string destFileName = @"ColorizeGrayResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
        <code lang="SilverlightCSharp">      public void ColorizeGrayCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ColorizeGrayCommandData[] pGrayColors = new ColorizeGrayCommandData[6];
         for (int i = 0; i &lt; 6; i++)
            pGrayColors[i] = new ColorizeGrayCommandData();
         pGrayColors[0].Threshold   = 9999;
         pGrayColors[1].Threshold   = 19999;
         pGrayColors[2].Threshold   = 29999;
         pGrayColors[3].Threshold   = 39999;
         pGrayColors[4].Threshold   = 49999;
         pGrayColors[5].Threshold   = 59999;
         pGrayColors[0].Color       = new RasterColor(255, 0, 0);
         pGrayColors[1].Color       = new RasterColor(0, 255, 0);
         pGrayColors[2].Color       = new RasterColor(0, 0, 255);
         pGrayColors[3].Color       = new RasterColor(0, 255, 255);
         pGrayColors[4].Color       = new RasterColor(255, 0, 255);
         pGrayColors[5].Color       = new RasterColor(255, 255, 0);

         ColorizeGrayCommand command = new ColorizeGrayCommand();
         command.GrayColors = pGrayColors;
         //Call the command
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ColorizeGrayCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim pGrayColors As ColorizeGrayCommandData() = New ColorizeGrayCommandData(5){}
         For i As Integer = 0 To 5
            pGrayColors(i) = New ColorizeGrayCommandData()
         Next i
         pGrayColors(0).Threshold = 9999
         pGrayColors(1).Threshold = 19999
         pGrayColors(2).Threshold = 29999
         pGrayColors(3).Threshold = 39999
         pGrayColors(4).Threshold = 49999
         pGrayColors(5).Threshold = 59999
         pGrayColors(0).Color = New RasterColor(255, 0, 0)
         pGrayColors(1).Color = New RasterColor(0, 255, 0)
         pGrayColors(2).Color = New RasterColor(0, 0, 255)
         pGrayColors(3).Color = New RasterColor(0, 255, 255)
         pGrayColors(4).Color = New RasterColor(255, 0, 255)
         pGrayColors(5).Color = New RasterColor(255, 255, 0)

         Dim command As ColorizeGrayCommand = New ColorizeGrayCommand()
         command.GrayColors = pGrayColors
         'Call the command
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>.
            <objectivec><pre>@interface LTColorizeGrayCommand : LTRasterCommand</pre></objectivec><java><pre>public class ColorizeGrayCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ColorizeGrayCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.#ctor(Leadtools.ImageProcessing.Core.ColorizeGrayCommandData[])">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="grayColors">Array of <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class objects that contain the colors used to initialize the class object.</param>
      <example>
        <code lang="VB">   Public Sub ColorizeGrayConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim colors() As RasterColor
      ReDim colors(5)
      colors(0) = New RasterColor(255, 0, 0)
      colors(1) = New RasterColor(0, 255, 0)
      colors(2) = New RasterColor(0, 0, 255)
      colors(3) = New RasterColor(0, 255, 255)
      colors(4) = New RasterColor(255, 0, 255)
      colors(5) = New RasterColor(255, 255, 0)

      Dim i As Integer
      Dim grayColors() As ColorizeGrayCommandData
      ReDim grayColors(5)

      For i = 0 To 5
         grayColors(i) = New ColorizeGrayCommandData(colors(i), i * 10000 + 9999)
      Next
      Dim command As ColorizeGrayCommand = New ColorizeGrayCommand(grayColors)

      ' Call the command
      command.Run(leadImage)

      ' Save the resulted Image
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ColorizeGrayConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         ColorizeGrayCommandData[] grayColors = new ColorizeGrayCommandData[6];

         RasterColor[] colors = new RasterColor[6];
         colors[0] = new RasterColor(255, 0, 0);
         colors[1] = new RasterColor(0, 255, 0);
         colors[2] = new RasterColor(0, 0, 255);
         colors[3] = new RasterColor(0, 255, 255);
         colors[4] = new RasterColor(255, 0, 255);
         colors[5] = new RasterColor(255, 255, 0);

         for (int i = 0; i &lt; 6; i++)
            grayColors[i] = new ColorizeGrayCommandData(colors[i], i * 10000 + 9999);

         ColorizeGrayCommand command = new ColorizeGrayCommand(grayColors);

         //Call the command
         command.Run(image);

         // Save the resulted image
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ColorizeGrayResult.Bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ColorizeGrayConstructorExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var destFileName = "ColorizeGrayResult.bmp";
   var saveImage;

   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var grayColors = new Array();

         var colors = new Array();
         colors[0] = Leadtools.RasterColorHelper.create(255, 0, 0);
         colors[1] = Leadtools.RasterColorHelper.create(0, 255, 0);
         colors[2] = Leadtools.RasterColorHelper.create(0, 0, 255);
         colors[3] = Leadtools.RasterColorHelper.create(0, 255, 255);
         colors[4] = Leadtools.RasterColorHelper.create(255, 0, 255);
         colors[5] = Leadtools.RasterColorHelper.create(255, 255, 0);

         for (var i = 0; i &lt; 6; i++)
            grayColors[i] = new ColorizeGrayCommandData(colors[i], i * 10000 + 9999);

         var command = new ColorizeGrayCommand(grayColors);
         //Call the command
         command.run(image);
         saveImage = command.destinationImage;

         return Tools.AppLocalFolder().createFileAsync(destFileName);
      }
   })
   .then(function (saveFile) {
      // Save the resulted image
      return codecs.saveAsync(saveImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });


}
 </code>
        <code lang="CSWinRT">      
      public async Task ColorizeGrayConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ColorizeGrayCommandData[] grayColors = new ColorizeGrayCommandData[6];

         RasterColor[] colors = new RasterColor[6];
         colors[0] = RasterColorHelper.Create(255, 0, 0);
         colors[1] = RasterColorHelper.Create(0, 255, 0);
         colors[2] = RasterColorHelper.Create(0, 0, 255);
         colors[3] = RasterColorHelper.Create(0, 255, 255);
         colors[4] = RasterColorHelper.Create(255, 0, 255);
         colors[5] = RasterColorHelper.Create(255, 255, 0);

         for (int i = 0; i &lt; 6; i++)
            grayColors[i] = new ColorizeGrayCommandData(colors[i], i * 10000 + 9999);

         ColorizeGrayCommand command = new ColorizeGrayCommand(grayColors);

         //Call the command
         command.Run(image);

         // Save the resulted image
         string destFileName = @"ColorizeGrayResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
        <code lang="SilverlightCSharp">      public void ColorizeGrayConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ColorizeGrayCommandData[] grayColors = new ColorizeGrayCommandData[6];
         RasterColor[] colors = new RasterColor[6];
         colors[0] = new RasterColor(255, 0, 0);
         colors[1] = new RasterColor(0, 255, 0);
         colors[2] = new RasterColor(0, 0, 255);
         colors[3] = new RasterColor(0, 255, 255);
         colors[4] = new RasterColor(255, 0, 255);
         colors[5] = new RasterColor(255, 255, 0);

         for (int i = 0; i &lt; 6; i++)
            grayColors[i] = new ColorizeGrayCommandData(colors[i], i * 10000 + 9999);

         ColorizeGrayCommand command = new ColorizeGrayCommand(grayColors);

         //Call the command
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ColorizeGrayConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim grayColors As ColorizeGrayCommandData() = New ColorizeGrayCommandData(5){}
         Dim colors As RasterColor() = New RasterColor(5){}
         colors(0) = New RasterColor(255, 0, 0)
         colors(1) = New RasterColor(0, 255, 0)
         colors(2) = New RasterColor(0, 0, 255)
         colors(3) = New RasterColor(0, 255, 255)
         colors(4) = New RasterColor(255, 0, 255)
         colors(5) = New RasterColor(255, 255, 0)

         For i As Integer = 0 To 5
            grayColors(i) = New ColorizeGrayCommandData(colors(i), i * 10000 + 9999)
         Next i

         Dim command As ColorizeGrayCommand = New ColorizeGrayCommand(grayColors)

         'Call the command
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithGrayColors:(NSArray*)grayColors;</pre>
      </objectivec>
      <java>
        <pre>public ColorizeGrayCommand(ColorizeGrayCommandData[] grayColors)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.DestinationImage">
      <summary>Gets or sets the destination image that will contain the resulting image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Destination image that will contain the resulting image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ColorizeGrayCommand.GrayColors">
      <summary>Array of <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class objects that contain the gray colors used by this class object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Array of <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommandData" /> class objects that contain the gray colors used by this class object.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) NSMutableArray* grayColors;</pre>
      </objectivec>
      <java>
        <pre>
public ColorizeGrayCommandData[] getGrayColors()
public void setGrayColors(ColorizeGrayCommandData[] value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MeanShiftCommand">
      <summary>Performs a detail preserving noise reduction. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>For keeping details while removing noise, low ColorDistance values should be applied.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color 
            images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">    Public Sub MeanShiftCommandExample()
        Dim codecs As New RasterCodecs()
        codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MeanShiftCommand = New MeanShiftCommand
      'Apply 
      command.Radius = 5
      command.ColorDistance = 10
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void MeansShiftCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            MeanShiftCommand command = new MeanShiftCommand();
            //Apply 
            command.Radius = 5;
            command.ColorDistance = 10;
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MeansShiftCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MeanShiftCommand();
         //Apply 
         command.radius = 5;
         command.colorDistance = 10;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task MeansShiftCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            MeanShiftCommand command = new MeanShiftCommand();
            //Apply 
            command.Radius = 5;
            command.ColorDistance = 10;
            command.Run(image);

        }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.MeanShiftCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MeanShiftCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MeanShiftCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub MeanShiftConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))


      Dim command As MeanShiftCommand = New MeanShiftCommand(5, 10)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void MeanShiftConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));
            // Prepare the command
            // Apply a mean shift filter with a neighborhood of 5x5 pixels,and a color distance of 10.
            MeanShiftCommand command = new MeanShiftCommand(5,10);
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MeanShiftConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MeanShiftCommand(5,10);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task MeanShiftConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));
            // Prepare the command
            // Apply a mean shift filter with a neighborhood of 5x5 pixels,and a color distance of 10.
            MeanShiftCommand command = new MeanShiftCommand(5,10);
            command.Run(image);

        }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MeanShiftCommand.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new MeanShiftCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="radius">
            Size of the kernel where the middle pixel would be considered as source pixel.
            </param>
      <param name="colorDistance">
            Color difference between investigated pixel and source pixel.
            </param>
      <example>
        <code lang="VB">    Public Sub MeanShiftCommandExample()
        Dim codecs As New RasterCodecs()
        codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MeanShiftCommand = New MeanShiftCommand
      'Apply 
      command.Radius = 5
      command.ColorDistance = 10
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void MeansShiftCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            MeanShiftCommand command = new MeanShiftCommand();
            //Apply 
            command.Radius = 5;
            command.ColorDistance = 10;
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MeansShiftCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new MeanShiftCommand();
         //Apply 
         command.radius = 5;
         command.colorDistance = 10;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task MeansShiftCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            MeanShiftCommand command = new MeanShiftCommand();
            //Apply 
            command.Radius = 5;
            command.ColorDistance = 10;
            command.Run(image);

        }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MeanShiftCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MeanShiftCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MeanShiftCommand.Radius">
      <summary>Gets or sets the radius value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Size of the kernel where the middle pixel would be considered as source pixel.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MeanShiftCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MeanShiftCommand.ColorDistance">
      <summary>Gets or sets the Color Distance value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The color difference between investigated pixel and source pixel.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MeanShiftCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags">
      <summary>Flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, and the clipping type.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that represent the transformation type</td><td>FastFourierTransform, InverseFastFourierTransform</td></tr><tr><td>Flags that represent the operation channel type</td><td>Blue, Green, Red, Gray</td></tr><tr><td>Flags that represent the frequency data type used for constructing the image: this flag is used only if InverseFastFourierTransform is set and will be 
                 ignored if FastFourierTransform is set</td><td>Magnitude, Phase, Both</td></tr><tr><td>Flags that represent the clipping type. This flag is used only if InverseFastFourierTransform is set and will be ignored if FFT_FFT is set</td><td>Clip, Scale</td></tr></table></remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.None">
      <summary>No change. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.FastFourierTransform">
      <summary>Convert the image into the frequency domain and store the results in the Data property of the FourierTransformInformation object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.InverseFastFourierTransform">
      <summary>Construct an image from the frequency components in the Data property of the FourierTransformInformation object. The image will be stored in the Run method image.
            This option will change the values of the Data property of the FourierTransformInformation object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Blue">
      <summary>Work on the blue channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Green">
      <summary>Work on the green channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Red">
      <summary>Work on the red channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Gray">
      <summary>Work on the master channel. If this flag is combined with InverseFastFourierTransform, the reconstructed image will be gray. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Magnitude">
      <summary>Construct the image from the frequency magnitude only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Phase">
      <summary>Construct the image from the frequency phase only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Both">
      <summary>Construct the image from both magnitude and phase. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Clip">
      <summary>Clip the constructed image values to be between 0 and 255. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags.Scale">
      <summary>Scale the constructed image Valid values are between 0 and 255. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand">
      <summary>Computes the Fast Fourier transform of an image or the Inverse Fast Fourier transform as specified by flags. This command is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command converts the image from the time domain to the frequency domain and vice versa using  a Fast Fourier Transform algorithm. 
            Fast Fourier Transform algorithms are a simplification of a Discrete Fourier Transform and require that the image dimensions must be power of 
            two (i.e. 2, 4, 8, 16, 32_etc). The number of computations needed are reduced from 2N2 to 2N LgN. Use the <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" /> 
            to use a Discrete Fourier Transform algorithm on an image. If you try to use this method with an image with dimensions that are not a power of two, 
            the method will return an ERROR_INV_PARAMETER error.</description>
          </item>
          <item>
            <description>Before using this command, you must create an instance of <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /></description>
          </item>
          <item>
            <description>The image can be transformed back into the original image minus the noise using the 
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags">InverseFastFourierTransform</see></description>
          </item>
          <item>
            <description>This command does not work on regions. If the image has a region the method ignores it and processes the entire image.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images. If the image is 12 and 16-bit 
            grayscale and 48 and 64-bit color, the command will not threw an exception.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub FastFourierTransformCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizecommand As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)

      sizecommand.Run(leadImage)

      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      ' Apply FFT.
      Dim command As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray)

      command.Run(leadImage)
      Dim rcRect As LeadRect = New LeadRect(0, 0, leadImage.Width \ 2, leadImage.Height \ 2)
      Dim FreqCommand As FrequencyFilterCommand = New FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX Or FrequencyFilterCommandFlags.OutsideY)

      Dim InvCommand As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)

      InvCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FastFourierTransformCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, Leadtools.RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);
         command.Run(image);
         LeadRect rcRect = new LeadRect(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.OutsideY);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FastFourierTransformCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizecommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);
         
         sizecommand.run(image);
            
         var FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         var command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.fastFourierTransform |  FastFourierTransformCommandFlags.gray);
         command.run(image);
         var rcRect = Leadtools.LeadRectHelper.create(0, 0, image.width / 2, image.height / 2);
         var FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.insideX | FrequencyFilterCommandFlags.outsideY);
         
         var InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.inverseFastFourierTransform |  FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         InvCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FastFourierTransformCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, Leadtools.RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);
         command.Run(image);
         LeadRect rcRect = LeadRectHelper.Create(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.OutsideY);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub FastFourierTransformConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizeCmd As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)
      sizeCmd.Run(leadImage)

      Dim ftArray As FourierTransformInformation
      ftArray = New FourierTransformInformation(leadImage)

      Dim data() As Complex
      data = ftArray.Data
      Dim width As Integer = ftArray.Width
      Dim height As Integer = ftArray.Height

      ' Apply FFT.
      Dim command As FastFourierTransformCommand
      command = New FastFourierTransformCommand
      command.FourierTransformInformation = ftArray
      command.Flags = FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray
      command.Run(leadImage)

      Dim rcRect As LeadRect
      rcRect = New LeadRect(0, 0, CType((leadImage.Width / 2), Integer), CType((leadImage.Height / 2), Integer))
      Dim freqCommand As FrequencyFilterCommand
      freqCommand = New FrequencyFilterCommand(ftArray, rcRect, FrequencyFilterCommandFlags.InsideX Or FrequencyFilterCommandFlags.OutsideY)

      Dim invCommand As FastFourierTransformCommand
      invCommand = New FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)
      invCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FastFourierTransformConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         Complex[] data = ftArray.Data;
         int width = ftArray.Width;
         int height = ftArray.Height;

         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand();
         command.FourierTransformInformation = ftArray;
         command.Flags = FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray;
         command.Run(image);

         LeadRect rcRect = new LeadRect(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand freqCommand = new FrequencyFilterCommand(ftArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.OutsideY);

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FastFourierTransformConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizeCommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);
         sizeCommand.run(image);
         
         var ftArray = new FourierTransformInformation(image);
         var data = ftArray.Data;
         var width = ftArray.width;
         var height = ftArray.height;
                  
         // Apply FFT.
         var command = new FastFourierTransformCommand();
         command.fourierTransformInformation = ftArray;
         command.flags = FastFourierTransformCommandFlags.fastFourierTransform |  FastFourierTransformCommandFlags.gray;
         command.run(image);
                  
         var rcRect = Leadtools.LeadRectHelper.create(0, 0, image.width / 2, image.height / 2);
         var freqCommand = new FrequencyFilterCommand(ftArray, rcRect, FrequencyFilterCommandFlags.insideX | FrequencyFilterCommandFlags.outsideY);
                     
         var invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.inverseFastFourierTransform |  FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         invCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FastFourierTransformConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         Complex[] data = ftArray.Data;
         int width = ftArray.Width;
         int height = ftArray.Height;

         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand();
         command.FourierTransformInformation = ftArray;
         command.Flags = FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray;
         command.Run(image);

         LeadRect rcRect = LeadRectHelper.Create(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand freqCommand = new FrequencyFilterCommand(ftArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.OutsideY);

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="fourierTransformInformation">
        <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> 
            object is a two-dimensional array that will hold the frequency components of the image. Its size must be the same as the image. The command will fill the 
            array elements using data from the Run method image when the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags" />.FastFourierTransform flag is set. The command 
            
            will use the array values and reconstruct the Run method image when the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags" />.InverseFastFourierTransform flag is set.</param>
      <param name="flags">Flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, and the clipping type. 
            You can use a bit-wise OR (|) to specify one flag from each group.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.Flags">
      <summary>Gets or sets flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, and the clipping type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, and the clipping type. 
            You can use a bit-wise OR (|) to specify one flag from each group.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation">
      <summary>
        <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> object is a two-dimensional array 
            that will hold the frequency components of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.FourierTransformInformation" /> object is a two-dimensional 
            array that will hold the frequency components of the image. Its size must be the same as the image. The command will fill the array elements using data from 
            the Run method image when the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags" />.FastFourierTransform flag is set. The command will use the array values and 
            reconstruct the Run method image when the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommandFlags" />.InverseFastFourierTransform flag is set.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand">
      <summary>Gets the rectangle to be used to trim the image if 
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand" /> were used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>Use this command in conjunction with 
            <see cref="T:Leadtools.ImageProcessing.CropCommand" /> instead of 
            <see cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand" /> when you 
            want to modify the trim rectangle. For example, you could let the user 
            preview the rectangle, or you could add a margin.</description>
          </item>
          <item>
            <description>This command uses image coordinates to specify the 
            area to be trimmed. Therefore, you must account for the view perspective 
            of the image. For information about image coordinates, refer to 
            <see cref="T:Leadtools.RasterViewPerspective" />.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color 
            images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub AutoCropRectangleCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As AutoCropRectangleCommand = New AutoCropRectangleCommand
      command.Threshold = 0
      command.Run(leadImage)
      MessageBox.Show("Left = " + command.Rectangle.Left.ToString() + Chr(13) + "Top = " + command.Rectangle.Top.ToString() + Chr(13) + "Right = " + command.Rectangle.Right.ToString() + Chr(13) + "Bottom = " + command.Rectangle.Bottom.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AutoCropRectangleCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         AutoCropRectangleCommand command = new AutoCropRectangleCommand();
         command.Threshold = 0;
         command.Run(image);
         MessageBox.Show("Left = " + command.Rectangle.Left.ToString() + "\n" +
               "Top = " + command.Rectangle.Top.ToString() + "\n" +
               "Right = " + command.Rectangle.Right.ToString() + "\n" +
               "Bottom = " + command.Rectangle.Bottom.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoCropRectangleCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE1.CMP";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new AutoCropRectangleCommand();
         command.threshold = 0;
         command.run(image);
         console.error("Left = " + command.rectangle.x.toString() + "\n" +
               "Top = " + command.rectangle.y.toString() + "\n" +
               "Right = " + command.rectangle.width.toString() + "\n" +
               "Bottom = " + command.rectangle.height.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AutoCropRectangleCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         AutoCropRectangleCommand command = new AutoCropRectangleCommand();
         command.Threshold = 0;
         command.Run(image);
         Debug.WriteLine("Left = " + command.Rectangle.X.ToString() + "\n" +
               "Top = " + command.Rectangle.Y.ToString() + "\n" +
               "Right = " + command.Rectangle.Width.ToString() + "\n" +
               "Bottom = " + command.Rectangle.Height.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void AutoCropRectangleCommandExample(RasterImage image)
      {
         // Prepare the command
         AutoCropRectangleCommand command = new AutoCropRectangleCommand();
         command.Threshold = 0;
         command.Run(image);
         Debug.WriteLine("Left = " + command.Rectangle.Left.ToString() + "\n" +
               "Top = " + command.Rectangle.Top.ToString() + "\n" +
               "Right = " + command.Rectangle.Right.ToString() + "\n" +
               "Bottom = " + command.Rectangle.Bottom.ToString());
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub AutoCropRectangleCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As AutoCropRectangleCommand = New AutoCropRectangleCommand()
         command.Threshold = 0
         command.Run(image)
         Debug.WriteLine("Left = " &amp; command.Rectangle.Left.ToString() &amp; Constants.vbLf &amp; "Top = " &amp; command.Rectangle.Top.ToString() &amp; _
                         Constants.vbLf &amp; "Right = " &amp; command.Rectangle.Right.ToString() &amp; Constants.vbLf &amp; "Bottom = " &amp; _
                         command.Rectangle.Bottom.ToString())
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.AutoCropCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.CropCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.CopyRectangleCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <objectivec><pre>@interface LTAutoCropRectangleCommand : LTRasterCommand</pre></objectivec><java><pre>public class AutoCropRectangleCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.#ctor">
      <summary>Initializes a new AutoCropRectangleCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public AutoCropRectangleCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.#ctor(System.Int32)">
      <summary>Initializes a new AutoCropRectangleCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="threshold">Delta value for detecting blank space. 
            Starting at each edge of the image and evaluating toward the center, 
            any change in intensity that is less than or equal to this 
            parameter is considered blank space. Valid values are 0 to 255.</param>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub AutoCropRectangleConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim threshold As Integer = 0
      Try
         Dim command As AutoCropRectangleCommand
         command = New AutoCropRectangleCommand(threshold)
         ' Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
         command.Run(leadImage)
         MessageBox.Show("Left = " + command.Rectangle.Left.ToString() + Chr(13) + "Top = " + command.Rectangle.Top.ToString() + Chr(13) + "Right = " + command.Rectangle.Right.ToString() + Chr(13) + "Bottom = " + command.Rectangle.Bottom.ToString())
      Catch e As Exception
         MessageBox.Show(e.Message)
      End Try

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void AutoCropRectangleConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         int threshold = 0;
         try
         {
            AutoCropRectangleCommand command = new AutoCropRectangleCommand(threshold);
            // Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
            command.Run(image);
            MessageBox.Show("Left = " + command.Rectangle.Left.ToString() + "\n" + 
               "Top = " + command.Rectangle.Top.ToString() + "\n" +
               "Right = " + command.Rectangle.Right.ToString() + "\n" + 
               "Bottom = " + command.Rectangle.Bottom.ToString());
         }
         catch(Exception exception)
         {
            MessageBox.Show(exception.Message);
         }

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoCropRectangleConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE1.CMP";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var threshold = 0;
         var command = new AutoCropRectangleCommand(threshold);
         // Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
         command.run(image);
         console.error("Left = " + command.rectangle.x.toString() + "\n" +
               "Top = " + command.rectangle.y.toString() + "\n" +
               "Right = " + command.rectangle.width.toString() + "\n" +
               "Bottom = " + command.rectangle.height.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task AutoCropRectangleConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int threshold = 0;
         try
         {
            AutoCropRectangleCommand command = new AutoCropRectangleCommand(threshold);
            // Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
            command.Run(image);
            Debug.WriteLine("Left = " + command.Rectangle.X.ToString() + "\n" + 
               "Top = " + command.Rectangle.Y.ToString() + "\n" +
               "Right = " + command.Rectangle.Width.ToString() + "\n" + 
               "Bottom = " + command.Rectangle.Height.ToString());
         }
         catch(Exception exception)
         {
            Debug.WriteLine(exception.Message);
         }

      }</code>
        <code lang="SilverlightCSharp">      public void AutoCropRectangleConstructorExample(RasterImage image)
      {
         // Prepare the command
         int threshold = 0;
         AutoCropRectangleCommand command = new AutoCropRectangleCommand(threshold);
         // Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
         command.Run(image);
         Debug.WriteLine("Left = " + command.Rectangle.Left.ToString() + "\n" +
            "Top = " + command.Rectangle.Top.ToString() + "\n" +
            "Right = " + command.Rectangle.Right.ToString() + "\n" +
            "Bottom = " + command.Rectangle.Bottom.ToString());
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub AutoCropRectangleConstructorExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim threshold As Integer = 0
         Dim command As AutoCropRectangleCommand = New AutoCropRectangleCommand(threshold)
         ' Get the Rectangle for AutoCrop with tolerance = threshold passes by the user.
         command.Run(image)
         Debug.WriteLine("Left = " &amp; command.Rectangle.Left.ToString() &amp; Constants.vbLf &amp; "Top = " &amp; command.Rectangle.Top.ToString() &amp; _
                         Constants.vbLf &amp; "Right = " &amp; command.Rectangle.Right.ToString() &amp; Constants.vbLf &amp; "Bottom = " &amp; _
                         command.Rectangle.Bottom.ToString())
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithThreshold:(unsigned int)threshold;</pre>
      </objectivec>
      <java>
        <pre>public AutoCropRectangleCommand(int threshold)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.Threshold">
      <summary>Gets or sets the delta value for detecting blank space. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Delta value for detecting blank space. Starting at each edge of 
            the image and evaluating toward the center, any change in intensity 
            that is less than or equal to this property is considered blank 
            space. Valid values are 0 to 255.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int threshold;</pre>
      </objectivec>
      <java>
        <pre>
public int getThreshold()
public void setThreshold(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand.Rectangle">
      <summary>Rectangle object to be updated. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Rectangle variable to be updated.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoCropRectangleCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect rectangle;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getRectangle()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand">
      <summary>Updates a region through the ObjectRectangle and the ObjectData variables according to the color value
            at Xposition and Yposition. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>You can only run the command after the StartEngine function is called on the image.</description>
          </item>
          <item>
            <description>You must call the EndEngine function after you run the command.</description>
          </item>
          <item>
            <description>This command supports 1, 8, and 24-bit color images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub FastMagicWandCommandExample()
        Dim codecs As New RasterCodecs()
        codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As FastMagicWandCommand = New FastMagicWandCommand
      'Apply 
      command.Tolerance = 50
      command.X = 100
      command.Y = 150
      command.SourceImage = leadImage
      command.StartEngine()
      command.Run(leadImage)
      command.EndEngine()

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void FastMagicWandCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            FastMagicWandCommand command = new FastMagicWandCommand();
            //Apply 


            command.X = 50;
            command.Y = 50;
            command.Tolerance = 50;
            command.SourceImage = image;

            command.StartEngine();
            command.Run(image);
            command.EndEngine();

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task FastMagicWandCommandExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        FastMagicWandCommand command = new FastMagicWandCommand();
   //        //Apply 


   //        command.X = 50;
   //        command.Y = 50;
   //        command.Tolerance = 50;
   //        command.SourceImage = image;

   //        command.StartEngine();
   //        command.Run(image);
   //        command.EndEngine();

   //    }
   //     </code>
      </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.#ctor">
      <summary>Initializes a new FastMagicWandCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.#ctor(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new FastMagicWandCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="sourceImage">
        <see cref="T:Leadtools.RasterImage" /> object that references the source image.</param>
      <param name="x">
            The X position of the starting point.
            </param>
      <param name="y">
            The Y position of the starting point.
            </param>
      <param name="tolerance">
            The upper and lower color distance with relation to the starting point. For instance if the "tolerance" parameter is 25 and the color value at the starting point is 50. 
            Then any adjacent pixel with a color range between 25 and 75 will be included in the region.  
            </param>
      <example>
        <code lang="VB">   Public Sub FastMagicWandConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))


      Dim command As FastMagicWandCommand = New FastMagicWandCommand(leadImage, 50, 50, 50)
      command.StartEngine()
      command.Run(leadImage)
      command.EndEngine()

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void FastMagicWandCommandConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));
            // Prepare the command
            // Apply a FastMagicWand with specific parameters
            FastMagicWandCommand command = new FastMagicWandCommand(image, 50, 50, 50);

            command.StartEngine();
            command.Run(image);
            command.EndEngine();

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task FastMagicWandCommandConstructorExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //       // Prepare the command
   //        // Apply a FastMagicWand with specific parameters
   //        FastMagicWandCommand command = new FastMagicWandCommand(image, 50, 50, 50);

   //        command.StartEngine();
   //        command.Run(image);
   //        command.EndEngine();

   //    }
   //     </code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.EndEngine">
      <summary>Ends the MagicWand Engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <remarks>
            Must be called after the function has finished running.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.StartEngine">
      <summary>Starts the MagicWand Engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <remarks>
            Must be called before running the function.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FastMagicWandCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.SourceImage">
      <summary>Gets or sets an <see cref="T:Leadtools.RasterImage" /> object that references the source image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> object that references the source image.</value>
      <remarks>
            This property must be filled before calling any method of this class.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.ObjectData">
      <summary>Gets the Object data array. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value> Object data array: The elements of the array that are 1 corresponds to points belonging to the object within
             the ObjectRectangle area, the elements that are 0 do not belong to the object.</value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.ObjectRectangle">
      <summary>Gets the Object rectangle. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value> Object rectangle: a rectangle surrounding the region found. </value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.Tolerance">
      <summary>Gets or sets the color tolerance value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value> Color Tolerance value </value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.X">
      <summary>Gets or sets the X-position of the starting point. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value> X-position of the starting point. </value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FastMagicWandCommand.Y">
      <summary>Gets or sets the Y-position of the starting point. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value> Y-position of the starting point. </value>
      <example>
             Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastMagicWandCommand" /></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DespeckleCommand">
      <summary>Removes speckles from an image. Typically, this command is used to clean up scanned images (such as FAX images).  This command is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command removes 1-pixel speckles, and shrinks some larger speckles. Therefore, in some cases, larger speckles can be completely 
            removed by running it more than once.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit 
            color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            <para>
            In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub DespeckleCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As DespeckleCommand = New DespeckleCommand
      'Remove speckles from the image.

      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DespeckleCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         DespeckleCommand command = new DespeckleCommand();
         //Remove speckles from the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DespeckleCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new DespeckleCommand();
         //Remove speckles from the image.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task DespeckleCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         DespeckleCommand command = new DespeckleCommand();
         //Remove speckles from the image.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void DespeckleCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         DespeckleCommand command = new DespeckleCommand();
         //Remove speckles from the image.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub DespeckleCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As DespeckleCommand = New DespeckleCommand()
         'Remove speckles from the image.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.GlowCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
            <objectivec><pre>@interface LTDespeckleCommand : LTRasterCommand</pre></objectivec><java><pre>public class DespeckleCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DespeckleCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public DespeckleCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DespeckleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData">
      <summary>Provides registration mark search information to the <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />. 
            The <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> also stores information in this structure about the registration marks that it finds. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <objectivec><pre>@interface LTSearchRegistrationMarksCommandData : NSObject</pre></objectivec><java><pre>public class SearchRegistrationMarksCommandData</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public SearchRegistrationMarksCommandData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadRect,System.Int32,Leadtools.LeadPoint[],Leadtools.ImageProcessing.Core.RegistrationMarkCommandType)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="width">Registration mark width, in pixels. This parameter accepts only positive values.</param>
      <param name="height">Registration mark height, in pixels. This parameter accepts only positive values.</param>
      <param name="minimumScale">Minimum registration mark scale to be detected. This is a percentage. 
            It must not exceed maximumScale. This parameter accepts only positive values.</param>
      <param name="maximumScale">Maximum registration mark scale to be detected. This is a percentage. 
            It must not be lower than minimumScale. This parameter accepts only positive values.</param>
      <param name="rectangle">The area to be searched for registration marks (in pixels).</param>
      <param name="searchMarkCount">Number of registration marks expected inside the search area. 
            This parameter accepts only positive values.</param>
      <param name="markDetectedPoints">Array to be filled with the location points of the detected registration marks. 
            <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> will fill the first MarkDetectedCount elements in this array.</param>
      <param name="type">Registration mark type.</param>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithWidth:(unsigned int)width 
             height:(unsigned int)height 
       minimumScale:(unsigned int)minimumScale 
       maximumScale:(unsigned int)maximumScale 
          rectangle:(LeadRect)rectangle 
    searchMarkCount:(unsigned int)searchMarkCount 
 markDetectedPoints:(NSArray*)markDetectedPoints 
               type:(LTRegistrationMarkCommandType)type;            </pre>
      </objectivec>
      <java>
        <pre>
public SearchRegistrationMarksCommandData(
   int width, 
   int height, 
   int minimumScale, 
   int maximumScale, 
   LeadRect rectangle, 
   int searchMarkCount, 
   LeadPoint[] markDetectedPoints, 
   RegistrationMarkCommandType type
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Finalize">
      <summary>Destructor of the <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Dispose">
      <summary>Releases all resources used by the <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"></see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Dispose(System.Boolean)">
      <summary>Releases all resources used by the <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData"></see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="disposing">
            true to release both managed and unmanaged resources; false to release only unmanaged
            resources.
            </param>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.SetDataPointer(System.IntPtr,System.Int32)">
      <summary>Sets the data pointer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="data">The data pointer.</param>
      <param name="size">The size of the data pointer.</param>
      <returns>
      </returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>- (void)setDataPointer:(void*)data size:(unsigned int)size;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Data">
      <summary>Gets or sets the data array. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>The data array.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, weak) NSMutableArray* data;</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint[] getData()
public void setData(LeadPoint[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.DataSize">
      <summary>Gets the size of data pointer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>The size of data pointer.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int dataSize;</pre>
      </objectivec>
      <java>
        <pre>public int getDataSize()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.DataPointer">
      <summary>Gets data pointer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>The Data pointer.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) void* dataPointer;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Width">
      <summary>Gets or sets the registration mark width, in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Registration mark width, in pixels. This property accepts only positive values.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Height">
      <summary>Gets or sets the registration mark height, in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Registration mark height, in pixels. This property accepts only positive values.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MinimumScale">
      <summary>Gets or sets the minimum registration mark scale to be detected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Minimum registration mark scale to be detected. This is a percentage. It must not exceed MaximumScale. This property accepts only positive values.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int minimumScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumScale()
public void setMinimumScale(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MaximumScale">
      <summary>Gets or sets the maximum registration mark scale to be detected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Maximum registration mark scale to be detected. This is a percentage. It must not be lower than MinimumScale. This property accepts only positive values.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int maximumScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumScale()
public void setMaximumScale(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Rectangle">
      <summary>Gets or sets a rectangle structure that contains the area to be searched for registration marks (in pixels). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>The area to be searched for registration marks (in pixels).</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect rectangle;</pre>
      </objectivec>
      <java>
        <pre>
public LeadRect getRectangle()
public void setRectangle(LeadRect value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.SearchMarkCount">
      <summary>Gets or sets the number of registration marks expected inside the search area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Number of registration marks expected inside the search area. This property accepts only positive values.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int searchMarkCount;</pre>
      </objectivec>
      <java>
        <pre>
public int getSearchMarkCount()
public void setSearchMarkCount(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.Type">
      <summary>Gets or sets a value that represents the registration mark type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Registration mark type.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRegistrationMarkCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public RegistrationMarkCommandType getType()
public void setType(RegistrationMarkCommandType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MarkDetectedCount">
      <summary>Gets or sets the number of detected registration marks inside the search area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>The number of detected registration marks inside the search area.
            </value>
      <remarks>
            This property will be updated by the <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            This property indicates how many elements of the MarkDetectedPoints array will be filled.
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int markDetectedCount;</pre>
      </objectivec>
      <java>
        <pre>
public int getMarkDetectedCount()
public void setMarkDetectedCount(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData.MarkDetectedPoints">
      <summary>Gets or sets an array which will be filled with the location points of the detected registration marks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Array which will be filled with the location points of the detected registration marks. <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> 
            will fill the first MarkDetectedCount elements in this array.</value>
      <remarks>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) NSMutableArray* markDetectedPoints;</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint[] getMarkDetectedPoints()
public void setMarkDetectedPoints(LeadPoint[] value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand">
      <summary>Searches the image for the registration marks according to the information in SearchMarks. This command is available in 
            the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command searches the image for registration marks. The SearchMarks array contains the information 
            about the registration marks. Declare the array and fill in the information about the registration marks for which to search before calling the command.</description>
          </item>
          <item>
            <description>The command will update each member of the SearchMarks array with information about the detected registration marks:<br /><br /><list type="bullet"><item><description>The MarkDetectedCount property will be updated with number of detected marks in that area.</description></item><item><description>The MarkDetectedPoints property (and the markDetectedPoints parameter if you are using the 
            appropriate SearchRegistrationMarksCommand Constructor, will be updated with the position of the detected marks.</description></item></list></description>
          </item>
          <item>
            <description>You can call <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" /> to get the transformation parameters,
            which can be applied to this image to make it match the reference image.</description>
          </item>
          <item>
            <description>If you simply want to automatically straighten the image, use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</description>
          </item>
          <item>
            <description>This commend supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit 
            grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" /> for sample code.
            </example>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])"></seealso>.
            <objectivec><pre>@interface LTSearchRegistrationMarksCommand : LTRasterCommand</pre></objectivec><java><pre>public class SearchRegistrationMarksCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public SearchRegistrationMarksCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.#ctor(Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData[])">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="searchMarks">An array of <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> structures describing all the characteristics of the registration marks.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithSearchMarks:(NSArray*)searchMarks;</pre>
      </objectivec>
      <java>
        <pre>public SearchRegistrationMarksCommand(ArrayList&lt;SearchRegistrationMarksCommandData&gt; searchMarks)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand.SearchMarks">
      <summary>Gets or sets an array of <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> structures describing all the characteristics of the registration marks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>Array of <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommandData" /> structures describing all the characteristics of the registration marks.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyTransformationParametersCommand.#ctor">ApplyTransformationParametersCommand()</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) NSMutableArray* searchMarks;</pre>
      </objectivec>
      <java>
        <pre>
public ArrayList&lt;SearchRegistrationMarksCommandData&gt; getSearchMarks()
public void setSearchMarks(ArrayList&lt;SearchRegistrationMarksCommandData&gt; value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor">
      <summary>This is used by other structures to define a LookupTable (LookupTable) 
            descriptor. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <objectivec>
        <pre>@interface LTDicomLookupTableDescriptor : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class DicomLookupTableDescriptor</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.#ctor">
      <summary>Initializes a new DicomLookupTableDescriptor with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public DicomLookupTableDescriptor()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new DicomLookupTableDescriptor with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="firstStoredPixelValueMapped">The second value in the 
            "LookupTable Descriptor", this specifies the first input value mapped.</param>
      <param name="entryBits">The third value in the "LookupTable Descriptor", this
            specifies the number of bits for each entry in the LookupTable Data.</param>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.#ctor(Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor,System.Int16[],Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags)">ApplyModalityLookupTableCommand (DicomLookupTableDescriptor,short[], ModalityLookupTableCommandFlags)</see></example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFirstStoredPixelValueMapped:(int)firstStoredPixelValueMapped 
                                entryBits:(unsigned int)entryBits;            </pre>
      </objectivec>
      <java>
        <pre>
public DicomLookupTableDescriptor(
   int firstStoredPixelValueMapped, 
   int entryBits
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.FirstStoredPixelValueMapped">
      <summary>The second value in the "LookupTable Descriptor", this specifies the first input 
            value mapped. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The second value in the "LookupTable Descriptor", this specifies the first 
            input value mapped.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int firstStoredPixelValueMapped;</pre>
      </objectivec>
      <java>
        <pre>
public int getFirstStoredPixelValueMapped()
public void setFirstStoredPixelValueMapped(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor.EntryBits">
      <summary>The third value in the "LookupTable Descriptor", this specifies the number of bits
            for each entry in the LookupTable Data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The third value in the "LookupTable Descriptor", this specifies the number 
            of bits for each entry in the LookupTable Data.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int entryBits;</pre>
      </objectivec>
      <java>
        <pre>
public int getEntryBits()
public void setEntryBits(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand">
      <summary>Remaps the image pixels through a LookupTable (LookupTable).  This class is 
             available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This class remaps the image pixels through a 
             LookupTable (LookupTable).  In the DICOM world, this is referred to as 
             "applying a non-linear Modality LookupTable".</description>
          </item>
          <item>
            <description>This class is similar to <see cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand" /> because it remaps 
             the image pixel values through a LookupTable. The class differs from <see cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand" />
              as follows:<br /><br /><b>ApplyModalityLookupTableCommand</b> allows you to specify an incomplete 
              LookupTable. Values less than the first mapped index will be mapped to the first
              entry in the palette. Values higher than "first mapped index" + "LookupTable 
              length" will be mapped to the last entry in the LookupTable.<br /><br /><b>ApplyModalityLookupTableCommand</b> only works on grayscale images. 
              <br /><b>ApplyModalityLookupTableCommand</b> can create signed images. The 
              output image will be signed (if <see cref="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">ModalityLookupTableCommandFlags.SignedLookupTable</see> is set), 
              or unsigned (<see cref="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">ModalityLookupTableCommandFlags.SignedLookupTable</see> is not set).
              </description>
          </item>
          <item>
            <description>The values in the LookupTable will be masked such that only 
             the useful bits in the image are considered. The values are considered 
             as if the image pixel values are normalized, <see cref="P:Leadtools.RasterImage.LowBit" /> = 0.</description>
          </item>
          <item>
            <description>For example, let's say the image is:<br /><br /><see cref="P:Leadtools.RasterImage.BitsPerPixel" /> = 12<br /><br /><see cref="P:Leadtools.RasterImage.LowBit" /> = 4<br /><br /><see cref="P:Leadtools.RasterImage.HighBit" /> = 10<br /><br />In this case, there are 10-4+1=7 valid bits. This means that there 
             are 128 values to remap. For every pixel, <b>ApplyModalityLookupTableCommand</b> will
             do the following:
             </description>
          </item>
          <item>
            <description>Take the pixel value, shift it to the right by 4 and 
             mask out the high bits, producing a value (val = 0..127).</description>
          </item>
          <item>
            <description>The value is remapped according to the LookupTable (values smaller 
             than FirstStoredPixelValueMapped (property of DicomLookupTableDescriptor class)
             are mapped to first LookupTable entry, while values greater than FirstStoredPixelValueMapped 
             (property of DicomLookupTableDescriptor class) + LookupTable-&gt;Length  are 
             mapped to the last LookupTable entry).</description>
          </item>
          <item>
            <description>After remapping, the value is shifted to the left by 4 and 
             will replace bits 4 thru 10 from the original image.</description>
          </item>
          <item>
            <description>If the image is signed, the indices for the LookupTable are 
             assumed to be signed and be between -32768 and +32767.</description>
          </item>
          <item>
            <description>If the image is unsigned, the indices are unsigned and
             are between 0..65535.</description>
          </item>
          <item>
            <description>It is recommended to always set the <see cref="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">ModalityLookupTableCommandFlags.UpdateMinMax</see> 
             flag.</description>
          </item>
          <item>
            <description>This class is helpful in applying what is referred to
             as a "Non-Linear Modality LookupTable" in the DICOM world. According to the 
             DICOM standard a "Modality LookupTable" defines the transformation of 
             manufacturer-dependent pixel values into pixel values, which are 
             manufacturer independent (e.g. Hounsfield units for CT, Optical Density 
             for film digitizers, etc.).</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
             For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
             <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
             command will fail if the image data for the RasterImage object is stored internally
              using a Silverlight WriteableBitmap object.  For more information,
             refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ApplyModalityLookupTableCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim i As Integer
      Dim pLookupTable() As Short
      ReDim pLookupTable(65535)
      Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor

      ' set a LookupTable which reduces the intensity of each pixel to half
      For i = 0 To 65535
         pLookupTable(i) = CType(i \ 2, Int16)
      Next


      ' fill the LookupTableDescriptor object
      LookupTableDescriptor.FirstStoredPixelValueMapped = 0
      LookupTableDescriptor.EntryBits = 16

      ' apply the LookupTable
      Dim command As ApplyModalityLookupTableCommand = New ApplyModalityLookupTableCommand
      command.Flags = ModalityLookupTableCommandFlags.None
      command.LookupTable = pLookupTable
      command.LookupTableDescriptor = LookupTableDescriptor
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyModalityLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[0x10000]; 
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt;= 0xFFFF; i++)
            pLookupTable[i] = (short)(i / 2);

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0; 
         LookupTableDescriptor.EntryBits = 16; 

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand();
         command.Flags = ModalityLookupTableCommandFlags.None;
         command.LookupTable = pLookupTable;
         command.LookupTableDescriptor = LookupTableDescriptor;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyModalityLookupTableCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var i; 
         var pLookupTable = new Array();; 
         var LookupTableDescriptor = new DicomLookupTableDescriptor();

         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt;= 0xFFFF; i++)
            pLookupTable[i] = parseInt(i / 2);
         
         // fill the LookupTableDescriptor object
         LookupTableDescriptor.firstStoredPixelValueMapped = 0; 
         LookupTableDescriptor.entryBits = 16; 
         
         // apply the LookupTable
         var command = new ApplyModalityLookupTableCommand();
         command.flags = ModalityLookupTableCommandFlags.none;
         command.lookupTable = pLookupTable;
         command.lookupTableDescriptor = LookupTableDescriptor;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyModalityLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[0x10000]; 
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt;= 0xFFFF; i++)
            pLookupTable[i] = (short)(i / 2);

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0; 
         LookupTableDescriptor.EntryBits = 16; 

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand();
         command.Flags = ModalityLookupTableCommandFlags.None;
         command.LookupTable = pLookupTable;
         command.LookupTableDescriptor = LookupTableDescriptor;
         command.Run(image);
      }</code>
        <code lang="SilverlightCSharp">      public void ApplyModalityLookupTableCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int i;
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();
         // set a LookupTable which reduces the intensity of each pixel to half
         for (i = 0; i &lt;= 0xFFFF; i++)
            pLookupTable[i] = (short)(i / 2);

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand();
         command.Flags = ModalityLookupTableCommandFlags.None;
         command.LookupTable = pLookupTable;
         command.LookupTableDescriptor = LookupTableDescriptor;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyModalityLookupTableCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim i As Integer
         Dim pLookupTable As Short() = New Short(&amp;H10000 - 1){}
         Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor()
         ' set a LookupTable which reduces the intensity of each pixel to half
         i = 0
         Do While i &lt;= &amp;HFFFF
            pLookupTable(i) = CShort(i / 2)
            i += 1
         Loop

         ' fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0
         LookupTableDescriptor.EntryBits = 16

         ' apply the LookupTable
         Dim command As ApplyModalityLookupTableCommand = New ApplyModalityLookupTableCommand()
         command.Flags = ModalityLookupTableCommandFlags.None
         command.LookupTable = pLookupTable
         command.LookupTableDescriptor = LookupTableDescriptor
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectExtendedCommand"></seealso>.
             <objectivec><pre>@interface LTApplyModalityLookupTableCommand : LTRasterCommand</pre></objectivec><java><pre>public class ApplyModalityLookupTableCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.#ctor">
      <summary>Initializes a new ApplyModalityLookupTableCommand with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ApplyModalityLookupTableCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.#ctor(Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor,System.Int16[],Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags)">
      <summary>Initializes a new ApplyModalityLookupTableCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="lookupTableDescriptor">Structure describing the LookupTable. The following members 
            are used:
            <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>FirstStoredPixelValueMapped</td><td>Indicates the first index whose remapped value is stored in the 
                 LookupTable. All pixels that are less than this value will be 
                 remapped to LookupTable[0].</td></tr></table></param>
      <param name="lookupTable">Array of short values that contains the lookup table.
            Its length determines the number of entries. All the pixels that are 
            greater than FirstStoredPixelValueMapped + (LookupTable-&gt;Length)
            will be set to the last entry in the LookupTable (LookupTable[LookupTable-&gt;Length - 1]).</param>
      <param name="flags">Flags that determine the behavior of this 
            method. These flags can be OR-ed together.</param>
      <example>
        <code lang="VB">   Public Sub ApplyModalityLookupTableConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim i As Integer
      Dim pLookupTable() As Short
      ReDim pLookupTable(65535)
      Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor(0, 16)
      ' set a LookupTable which reduces the intensity of each pixel to half
      For i = 0 To 65535
         pLookupTable(i) = CType(i \ 2, Int16)
      Next
      ' apply the LookupTable
      Dim command As ApplyModalityLookupTableCommand = New ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyModalityLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[65536]; 
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor(0, 16);

         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt; 65536; i++)
            pLookupTable[i] = (short)(i / 2);

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyModalityLookupTableConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var i; 
         var pLookupTable = new Array();; 
         var LookupTableDescriptor = new DicomLookupTableDescriptor();
         
         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt;= 0xFFFF; i++)
            pLookupTable[i] = parseInt(i / 2);
         
         // apply the LookupTable
         var command = new ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None);
         command.run(image);
      }
   });

}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyModalityLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[65536]; 
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor(0, 16);

         // set a LookupTable which reduces the intensity of each pixel to half
         for(i = 0; i &lt; 65536; i++)
            pLookupTable[i] = (short)(i / 2);

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyModalityLookupTableConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int i;
         short[] pLookupTable = new short[65536];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor(0, 16);
         // set a LookupTable which reduces the intensity of each pixel to half
         for (i = 0; i &lt; 65536; i++)
            pLookupTable[i] = (short)(i / 2);

         // apply the LookupTable
         ApplyModalityLookupTableCommand command = new ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None);
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyModalityLookupTableConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim i As Integer
         Dim pLookupTable As Short() = New Short(65535){}
         Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor(0, 16)
         ' set a LookupTable which reduces the intensity of each pixel to half
         For i = 0 To 65535
            pLookupTable(i) = CShort(i / 2)
         Next i

         ' apply the LookupTable
         Dim command As ApplyModalityLookupTableCommand = New ApplyModalityLookupTableCommand(LookupTableDescriptor, pLookupTable, ModalityLookupTableCommandFlags.None)
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithLookupTableDescriptor:(LTDicomLookupTableDescriptor*)lookupTableDescriptor 
                        lookupTable:(const unsigned short*)lookupTable 
                  lookupTableLength:(unsigned int)lookupTableLength 
                              flags:(LTModalityLookupTableCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ApplyModalityLookupTableCommand(
   DicomLookupTableDescriptor lookupTableDescriptor, 
   int[] lookupTable, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.LookupTableDescriptor">
      <summary>Structure describing the LookupTable. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Structure describing the LookupTable. The following members 
            are used:
            <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>FirstStoredPixelValueMapped</td><td>Indicates the first index whose remapped value is stored in the 
                 LookupTable. All pixels that are less than this value will be 
                 remapped to LookupTable[0].</td></tr></table></value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTDicomLookupTableDescriptor* lookupTableDescriptor;</pre>
      </objectivec>
      <java>
        <pre>
public DicomLookupTableDescriptor getLookupTableDescriptor()
public void setLookupTableDescriptor(DicomLookupTableDescriptor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.LookupTable">
      <summary>Array of short values that contains the lookup table. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Array of short values that contains the lookup table.
            Its length determines the number of entries. All the pixels that are 
            greater than FirstStoredPixelValueMapped + (LookupTable-&gt;Length)
            will be set to the last entry in the LookupTable (LookupTable[LookupTable-&gt;Length - 1]).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) const unsigned short* lookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public int[] getLookupTable()
public void setLookupTable(int[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.lookupTableLength_objectivec">
      <summary>Get or set the length of lookupTable <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length of the array in lookupTable property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int lookupTableLength;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand.Flags">
      <summary>Flags that determine the behavior of the command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that determine the behavior of the command. These flags 
            can be OR-ed together.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTModalityLookupTableCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand">
      <summary>Remaps the image pixels by applying a linear transformation described by
            a rescale slope and an intercept.  This class is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This class remaps the image pixels by applying a 
            linear transformation described by rescale slope and intercept.  In the 
            DICOM world, this is referred to as "applying a linear Modality LookupTable (LookupTable)".</description>
          </item>
          <item>
            <description>This class will remap the image pixels by applying 
            the linear transformation described by the equation:
            <br /><br />Y = mX + b<br /><br />m: slope of a straight line, this is also referred to as "Rescale Slope" in the DICOM world.<br /><br />b: the y-intercept of a straight line, this is also referred to as "Rescale Intercept" in the DICOM world.<br /><br />Y: the resulting pixel value.<br /><br />X: the input or original pixel value. <br /></description>
          </item>
          <item>
            <description>This class is helpful in applying what is referred 
            to as a "Linear Modality LookupTable (LookupTable)" in the DICOM world. According to the DICOM
            standard a "Modality LookupTable (LookupTable)" defines the transformation of manufacturer-dependent
            pixel values into pixel values, which are manufacturer independent (e.g.
            Hounsfield units for CT, Optical Density for film digitizers, etc.).</description>
          </item>
          <item>
            <description>This class only works on grayscale images. Using 
            this class for non-grayscale images will generate an error.</description>
          </item>
          <item>
            <description>It is recommended to always set the <see cref="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">ModalityLookupTableCommandFlags.UpdateMinMax</see> flag.</description>
          </item>
          <item>
            <description>This class can change the image from signed to 
            unsigned, or from unsigned to signed.  This is determined by the values 
            of the resulting image pixels after applying the linear transformation.</description>
          </item>
          <item>
            <description>Only the useful bits in the image are considered. The 
            values are considered as if the image pixel values are normalized, 
            <see cref="P:Leadtools.RasterImage.LowBit" /> = 0.</description>
          </item>
          <item>
            <description>For example, let's say the image is:
            <br /><br /><see cref="P:Leadtools.RasterImage.BitsPerPixel" /> = 12<br /><br /><see cref="P:Leadtools.RasterImage.LowBit" /> = 4<br /><br /><see cref="P:Leadtools.RasterImage.HighBit" /> = 10<br /><br />In this case, there are 10-4+1=7 valid bits. This means that there 
            are 128 values to remap.</description>
          </item>
          <item>
            <description>If <see cref="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">ModalityLookupTableCommandFlags.AllowRangeExpansion</see> flag is set in Flags property,
            consider the following example:<br /><br />If the dataset has the following attributes:<br /><br /><see cref="P:Leadtools.RasterImage.BitsPerPixel" />   16<br /><br /><see cref="P:Leadtools.RasterImage.HighBit" />	11<br /><br /><see cref="P:Leadtools.RasterImage.LowBit" />	0<br /><br />Pixel Range	0 to +4095,<br /><br />Unsigned<br /><br />The number of bits stored inside the image is 11-0+1 =12.<br /><br />If the fIntercept is set to -1024 and fSlope is set to 0, then after 
            applying the rescale slope and intercept: <br /><br />Output minimum pixel value = (0 *1 +(-1024))= -1024<br /><br />Output maximum pixel value = (4095 *1 +(-1024))= 3071<br /></description>
          </item>
          <item>
            <description>The new pixel value range (-1024 to 3071) can't be 
            represented with the current bits stored (12 bits), which can represent 
            values in the range (-2048 to 2048). In this case the class will change
            the high bit inside the image handle to be 12 instead of 11 (bits stored
            becomes 13), which can represent values in the range (-8192 to 8191). </description>
          </item>
          <item>
            <description>Please note that the class won't be able to update 
            the high bit and/or low bit if the number of bits stored was already 
            equal to the image bits per pixel.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ApplyLinearModalityLookupTableCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ApplyLinearModalityLookupTableCommand = New ApplyLinearModalityLookupTableCommand
      command.Flags = ModalityLookupTableCommandFlags.None
      command.Intercept = 0.0
      command.Slope = 0.5
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyLinearModalityLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand();
         command.Flags     = ModalityLookupTableCommandFlags.None;
         command.Intercept = 0.0;
         command.Slope     = 0.5;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyLinearModalityLookupTableCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ApplyLinearModalityLookupTableCommand();
         command.flags = ModalityLookupTableCommandFlags.none;
         command.intercept = 0.0;
         command.slope = 0.5;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyLinearModalityLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand();
         command.Flags     = ModalityLookupTableCommandFlags.None;
         command.Intercept = 0.0;
         command.Slope     = 0.5;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyLinearModalityLookupTableCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand();
         command.Flags = ModalityLookupTableCommandFlags.None;
         command.Intercept = 0.0;
         command.Slope = 0.5;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyLinearModalityLookupTableCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ApplyLinearModalityLookupTableCommand = New ApplyLinearModalityLookupTableCommand()
         command.Flags = ModalityLookupTableCommandFlags.None
         command.Intercept = 0.0
         command.Slope = 0.5
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectExtendedCommand"></seealso>.
            <objectivec><pre>@interface LTApplyLinearModalityLookupTableCommand : LTRasterCommand</pre></objectivec><java><pre>public class ApplyLinearModalityLookupTableCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> class with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ApplyLinearModalityLookupTableCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.#ctor(System.Double,System.Double,Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> class with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="intercept">"Rescale Intercept" : the value of "b" in the linear 
            relationship between the original pixel values and the new pixel values.
            <br /><br />(new pixel value) = m * (original pixel value) + b. Where 
            "m" is the "Rescale Slope".</param>
      <param name="slope">"Rescale Slope" : the value of "m" in the linear 
            relationship between the original pixel values and the new pixel values.
            <br /><br />(new pixel value) = m * (original pixel value) + b. Where 
            "b" is the "Rescale Intercept". </param>
      <param name="flags">Flags that determine the behavior of this 
            method.</param>
      <example>
        <code lang="VB">   Public Sub ApplyLinearModalityLookupTableConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ApplyLinearModalityLookupTableCommand = New ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyLinearModalityLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyLinearModalityLookupTableConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var command = new ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyLinearModalityLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyLinearModalityLookupTableConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ApplyLinearModalityLookupTableCommand command = new ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyLinearModalityLookupTableConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ApplyLinearModalityLookupTableCommand = New ApplyLinearModalityLookupTableCommand(0.0, 0.5, ModalityLookupTableCommandFlags.None)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithIntercept:(double)intercept 
                  slope:(double)slope 
                  flags:(LTModalityLookupTableCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ApplyLinearModalityLookupTableCommand(
   double intercept, 
   double slope, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.Intercept">
      <summary>"Rescale Intercept" : the value of "b" in the linear relationship 
            between original pixel values and the new pixel values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>"Rescale Intercept" : the value of "b" in the linear 
            relationship between original pixel values and the new pixel values.
            <br /><br />(new pixel value) = m * (original pixel value) + b. Where 
            "m" is the "Rescale Slope". </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) double intercept;</pre>
      </objectivec>
      <java>
        <pre>
public double getIntercept()
public void setIntercept(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.Slope">
      <summary>"Rescale Slope" : the value of "m" in the linear relationship between the
            original pixel values and the new pixel values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>"Rescale Slope" : the value of "m" in the linear 
            relationship between original pixel values and the new pixel values.
            <br /><br />(new pixel value) = m * (original pixel value) + b. Where 
            "b" is the "Rescale Intercept".</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) double slope;</pre>
      </objectivec>
      <java>
        <pre>
public double getSlope()
public void setSlope(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand.Flags">
      <summary>Flags which determine the behavior of this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags which determine the behavior of this command.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTModalityLookupTableCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">
      <summary>This enumeration contains the possible halftone patterns. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.None">
      <summary>(0x00000000)No Flags selected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Dot">
      <summary>(0x00000001)Dot pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Line">
      <summary>(0x00000002)Line pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Circle">
      <summary>(0x00000003)Circle pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType.Ellipse">
      <summary>(0x00000004)Ellipse pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand">
      <summary>Creates a halftone screen effect for an image while keeping its continuous range of tones. This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>If the image has a region, this method works only on 
            the region. If the image does not have a region, this method works on the
            entire image.</description>
          </item>
          <item>
            <description>This method does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub HalfTonePatternCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As New HalfTonePatternCommand
      command.Contrast = 100
      command.Ripple = 200
      command.AngleContrast = 12
      command.AngleRipple = 2
      command.AngleOffset = 4500
      command.BackGroundColor = New RasterColor(255, 255, 255)
      command.ForeGroundColor = New RasterColor(255, 0, 0)
      command.Type = HalfTonePatternCommandType.Line
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HalfTonePatternCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         HalfTonePatternCommand command  = new HalfTonePatternCommand();
         command.Contrast = 100;
         command.Ripple = 200;
         command.AngleContrast = 12;
         command.AngleRipple = 2;
         command.AngleOffset = 4500;
         command.BackGroundColor = new RasterColor(255, 255, 255);
         command.ForeGroundColor = new RasterColor(255, 0,0);
         command.Type = HalfTonePatternCommandType.Line;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HalfTonePatternCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command  = new HalfTonePatternCommand();
         command.contrast = 100;
         command.ripple = 200;
         command.angleContrast = 12;
         command.angleRipple = 2;
         command.angleOffset = 4500;
         command.backGroundColor = Leadtools.RasterColorHelper.create(255, 255, 255);
         command.foreGroundColor = Leadtools.RasterColorHelper.create(255, 0,0);
         command.type = HalfTonePatternCommandType.line;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task HalfTonePatternCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HalfTonePatternCommand command  = new HalfTonePatternCommand();
         command.Contrast = 100;
         command.Ripple = 200;
         command.AngleContrast = 12;
         command.AngleRipple = 2;
         command.AngleOffset = 4500;
         command.BackGroundColor = RasterColorHelper.Create(255, 255, 255);
         command.ForeGroundColor = RasterColorHelper.Create(255, 0,0);
         command.Type = HalfTonePatternCommandType.Line;
         command.Run(image);

      }</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">Color Halftone and Halftone Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.GrayscaleCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleExtendedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SkeletonCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.DesaturateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorCountCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ConvertToColoredGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.Core.HalfTonePatternCommandType)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="contrast">Halftone pattern contrast. Increasing this value increases the pattern brightness, making it more visible.</param>
      <param name="ripple">Halftone pattern frequency. Internally, this value is divided by 100. For example, if ripple = 200 the 
            actual frequency is 2. Increasing this value increases the number of dots, lines, etc. in the pattern.</param>
      <param name="angleContrast">Angular pattern contrast. Increasing this value increases brightness of the "spokes" in the image.</param>
      <param name="angleRipple">Angular pattern frequency. This value determines how many "spokes" appear in the image.</param>
      <param name="angleOffset">Angular pattern offset in hundredths of degrees (+/-). A positive value will rotate the screen clockwise, 
            while a negative value will rotate the screen counter-clockwise. </param>
      <param name="foreGroundColor">Value that specifies the foreground color for any exposed areas.</param>
      <param name="backGroundColor">Value that specifies the background color for any exposed areas.</param>
      <param name="type">Value that indicates which halftone pattern type to use.</param>
      <example>
        <code lang="VB">   Public Sub HalfTonePatternConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As New HalfTonePatternCommand(100, 200, 12, 2, 4500, _
                                       New RasterColor(255, 0, 0), _
                                       New RasterColor(255, 255, 255), _
                                       HalfTonePatternCommandType.Line)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HalfTonePatternConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         HalfTonePatternCommand command  = new HalfTonePatternCommand(100, 200, 12, 2, 4500,
            new RasterColor(255, 0, 0),
            new RasterColor(255, 255, 255),
            HalfTonePatternCommandType.Line);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HalfTonePatternConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command  = new HalfTonePatternCommand(100, 200, 12, 2, 4500,
            Leadtools.RasterColorHelper.create(255, 0, 0),
            Leadtools.RasterColorHelper.create(255, 255, 255),
            HalfTonePatternCommandType.line);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task HalfTonePatternConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HalfTonePatternCommand command  = new HalfTonePatternCommand(100, 200, 12, 2, 4500,
            RasterColorHelper.Create(255, 0, 0),
            RasterColorHelper.Create(255, 255, 255),
            HalfTonePatternCommandType.Line);
         command.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>string that contains the name of this method.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Contrast">
      <summary>Gets or sets a value that represents the amount of halftone pattern contrast. Increasing this value increases the pattern brightness, making it more visible. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that represents the halftone pattern contrast.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Ripple">
      <summary>Gets or sets a value that represents the halftone pattern frequency. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value represents halftone pattern frequency. Internally, it is divided by 100, 
            for example if Ripple = 200 the actual frequency is 2. Increasing this value increases 
            the number of dots, lines, etc. in the pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleContrast">
      <summary>Gets or sets a value that represents the amount of angular pattern contrast. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that represents angular pattern contrast. Angular pattern only occurs when either <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see> or <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see> 
             is selected in the type property. Increasing this value increases brightness of the "spokes" in the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleRipple">
      <summary>Gets or sets a value that represents the amount of angular pattern frequency. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that represents angular pattern frequency. Angular pattern only occurs when either <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see> or <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see> 
             is selected in the type property. This value determines how many "spokes" appear in the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.AngleOffset">
      <summary>Gets or sets a value that represents the amount of angular pattern offset in hundredths of degrees (+/-). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that represents the angular pattern offset in a hundredths of degrees (+/-).
             A positive value will rotate the screen clockwise, while a 
             negative value will rotate the screen counter-clockwise.
             Angular pattern offset only occurs when either <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Circle</see> or <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommandType">HalfTonePatternCommandType.Ellipse</see> 
             is selected in type property.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.ForeGroundColor">
      <summary>Gets or sets the foregound color for any exposed areas.. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The foregound color.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.BackGroundColor">
      <summary>Gets or sets the background color for any exposed areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The background color.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfTonePatternCommand.Type">
      <summary>Gets or sets the type of halftone pattern. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that indicates the type of halftone pattern.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.Complex">
      <summary>The Complex structure contains a complex number representing a specific frequency component in Fourier Transform methods. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.Complex.#ctor(System.Double,System.Double)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="r">Real part of a complex number.</param>
      <param name="i">Imaginary part of a complex number.</param>
      <example>
        <code lang="VB">   Public Sub ComplexConstructorExample_S2()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim com As Complex = New Complex(12.0, 5.0)

      ' Get the real and the imaginary part of the complex number.
      MessageBox.Show("Complex number real part is : " &amp; com.R)
      MessageBox.Show("Complex number Imaginary part is : " &amp; com.I)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ComplexConstructorExample_S2()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Set the real and the imaginary part of the complex number.
         Complex com = Complex.Empty;

         com.R = 12.0;
         com.I = 5.0;

         Complex com2 = new Complex(com.R, com.I);

         // Get the real and the imaginary part of the complex number.
         MessageBox.Show("Complex number real part is : " + com2.R);
         MessageBox.Show("Complex number Imaginary part is : " + com2.I);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ComplexConstructorExample_S2()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Set the real and the imaginary part of the complex number.
         var com = ComplexHelper.empty;

         com.r = 12.0;
         com.i = 5.0;

         var com2 = ComplexHelper.create(com.r, com.i);
         
         // Get the real and the imaginary part of the complex number.
         console.error("Complex number real part is : " + com2.r);
         console.error("Complex number Imaginary part is : " + com2.i);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ComplexConstructorExample_S2()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Set the real and the imaginary part of the complex number.
         Complex com = ComplexHelper.Empty;

         com.R = 12.0;
         com.I = 5.0;

         Complex com2 = ComplexHelper.Create(com.R, com.I);

         // Get the real and the imaginary part of the complex number.
         Debug.WriteLine("Complex number real part is : " + com2.R);
         Debug.WriteLine("Complex number Imaginary part is : " + com2.I);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.Complex.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.Complex.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.Complex.Empty">
      <summary>Gets an Empty class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Represents a new instance of the <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> structure with uninitialized member data.</value>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.Complex" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.Complex.R">
      <summary>Gets or sets a value that represents the real part of a complex number. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a></summary>
      <value>Value that represents the real part of a complex number.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.Complex" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.Complex.I">
      <summary>Gets or sets a value that represents the imaginary part of a complex number. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a></summary>
      <value>Value that represents the imaginary part of a complex number.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.Complex" /></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FourierTransformInformation">
      <summary>The <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation" /> class contains information about the complex 2D array that will hold the frequency components of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <para>
                    The Fourier Transform commands return an instance of
                    FourierTransformInformation. This object holds all the frequency domain
                    information (harmonics information). Each <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Data" /> element holds the information about
                    the harmonic frequency at its location. This information is an instance of the
                    <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> structure, which contains the real and imaginary
                    values of the harmonic.
                </para>
        <para>To obtain the magnitude, take the square root of the sum of the squared real
                and imaginary values.</para>
        <para>To calculate the phase, find the arctan of (imaginary/real).</para>
        <para>
                    To get/set the value of a harmonic at a specific location, use the <see cref="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.GetDataOf(System.Int32,System.Int32)" /> / <see cref="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.SetData(Leadtools.ImageProcessing.Core.Complex[])" /> methods. (0,0) is the first
                    element.
                </para>
        <para>The frequency harmonics are sorted as follows:</para>
        <pre>
          <code>
            LowX LowY---------HighXLowY----------LowXLowY
            |                     |                  |
            |                     |                  |
            |                     |                  |
            |                     |                  |
            |                     |                  |
            |                     |                  |
            LowXHighY---------HighXHighY---------LowXHighY
            |                     |                  |
            |                     |                  |
            |                     |                  |
            |                     |                  |
            |                     |                  |
            LowXLowY----------HighXLowY----------LowXLowY
            </code>
        </pre>
        <para>
        </para>
        <para>
          <para>This structure is used only by the Fourier
                    Transform methods:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" />
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" />
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand" />
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand" />
              </description>
            </item>
          </list>
          <para>
          </para>
        </para>
        <para>
            		This command does not support 32-bit grayscale
                    images.
            	</para>
      </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> .
            </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand">
      </seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand">
      </seealso>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation" /> object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.#ctor(Leadtools.RasterImage)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformInformation" /> object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="image">RasterImage object used to specify the width and height of the 2d Complex array.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Finalize">
      <summary>Destructor of the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Dispose">
      <summary>Releases all resources used by the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a></summary>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Dispose(System.Boolean)">
      <summary>Releases all resources used by the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="disposing">
            true to release both managed and unmanaged resources; false to release only unmanaged
            resources.
            </param>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.Clone">
      <summary>Clones the current object into a new object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>New object with the same data as the current object.</returns>
      <example>
            For example, refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.SetData(Leadtools.ImageProcessing.Core.Complex[])">
      <summary>Sets the 2D data array. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="data">The 2D data array.</param>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.GetDataOf(System.Int32,System.Int32)">
      <summary>Gets the resulting transformed data complex at the given location. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="x">The X coordinate of the location.</param>
      <param name="y">The Y coordinate of the location.</param>
      <returns>A <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> representing the transformed data complex at the given location.</returns>
      <example>
            For example, refer to <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformInformation.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Width">
      <summary>Gets the width of the 2D array in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Width of the 2D array in pixels.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Height">
      <summary>Gets the height of the 2D array in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Height of the 2D array in pixels.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Data">
      <summary>Gets the 2D data array. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The 2D data array. Note that, although only one element is declared in the array, the array contains Width * Height elements. The frequency component for the pixel (row, col) is <b>Data</b>[row * <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.Width" /> + col].</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.DataSize">
      <summary>Gets the size of data pointer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The size of data pointer.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformInformation.DataPointer">
      <summary>Gets the data pointer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The Data pointer.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FastFourierTransformCommand.#ctor">FastFourierTransformCommand()</see></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags">
      <summary>Flags that indicate the operation to be performed on the specified X and Y harmonics ranges. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that indicate how to handle peripherally exposed areas</td><td>Color, Repeat, NoChange</td></tr><tr><td>Flags that indicate how to handle exposed areas inside the surface</td><td>Rotate, WithoutRotate</td></tr></table></remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.None">
      <summary>No change. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.InsideX">
      <summary>Keep the X harmonics inside the X range and remove outside ones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.OutsideX">
      <summary>Remove the X harmonics inside the X range and keep outside ones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.InsideY">
      <summary>Keep the Y harmonics inside the Y range and remove outside ones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags.OutsideY">
      <summary>Remove the Y harmonics inside the Y range and keep outside ones. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand">
      <summary>Filters the frequency harmonics data produced by a Fourier Transform method using a range rectangle. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command is used only when working with Fourier Transform methods.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images. If the image is 12 and 16-bit grayscale and 48 and 64-bit color, the command will not threw an exception.</description>
          </item>
          <item>
            <description>This command does not support signed images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub FrequencyFilterCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizecommand As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)

      sizecommand.Run(leadImage)

      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      ' Apply FFT.
      Dim command As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray)


      command.Run(leadImage)
      Dim rcRect As LeadRect = New LeadRect(0, 0, leadImage.Width \ 2, leadImage.Height \ 2)
      Dim FreqCommand As FrequencyFilterCommand = New FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX Or FrequencyFilterCommandFlags.OutsideY)

      Dim InvCommand As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)

      InvCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FrequencyFilterCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, Leadtools.RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);

         command.Run(image);
         LeadRect rcRect = new LeadRect(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.InsideY);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FrequencyFilterCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizecommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);
         
         sizecommand.run(image);

         var FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         var command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.fastFourierTransform |  FastFourierTransformCommandFlags.gray);

         command.run(image);
         var rcRect = Leadtools.LeadRectHelper.create(0, 0, image.width / 2, image.height / 2);
         var FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.insideX | FrequencyFilterCommandFlags.insideY);

         var InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.inverseFastFourierTransform |  FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         InvCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FrequencyFilterCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, Leadtools.RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);

         command.Run(image);
         LeadRect rcRect = LeadRectHelper.Create(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand FreqCommand = new FrequencyFilterCommand(FTArray, rcRect, FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.InsideY);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub FrequencyFilterConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizeCmd As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)
      sizeCmd.Run(leadImage)

      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      ' Apply FFT.
      Dim command As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray)
      command.Run(leadImage)

      Dim rcRect As LeadRect = New LeadRect(0, 0, leadImage.Width \ 2, leadImage.Height \ 2)
      Dim FreqCommand As FrequencyFilterCommand = New FrequencyFilterCommand
      FreqCommand.Flags = FrequencyFilterCommandFlags.InsideX Or FrequencyFilterCommandFlags.OutsideY
      FreqCommand.FourierTransformInformation = FTArray
      FreqCommand.Rectangle = rcRect

      Dim InvCommand As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)
      InvCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FrequencyFilterConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);           
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);   
         command.Run(image);

         LeadRect rcRect = new LeadRect(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand freqCommand = new FrequencyFilterCommand();
         freqCommand.Flags = FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.InsideY;
         freqCommand.FourierTransformInformation = ftArray;
         freqCommand.Rectangle = rcRect;

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform | FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FrequencyFilterConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizeCommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);           
         sizeCommand.run(image);

         var ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         var command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.fastFourierTransform |  FastFourierTransformCommandFlags.gray);   
         command.run(image);

         var rcRect = Leadtools.LeadRectHelper.create(0, 0, image.width / 2, image.height / 2);
         var freqCommand = new FrequencyFilterCommand();
         freqCommand.flags = FrequencyFilterCommandFlags.insideX | FrequencyFilterCommandFlags.insideY;
         freqCommand.fourierTransformInformation = ftArray;
         freqCommand.rectangle = rcRect;

         var invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.inverseFastFourierTransform | FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         invCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FrequencyFilterConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);           
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);   
         command.Run(image);

         LeadRect rcRect = LeadRectHelper.Create(0, 0, image.Width / 2, image.Height / 2);
         FrequencyFilterCommand freqCommand = new FrequencyFilterCommand();
         freqCommand.Flags = FrequencyFilterCommandFlags.InsideX | FrequencyFilterCommandFlags.InsideY;
         freqCommand.FourierTransformInformation = ftArray;
         freqCommand.Rectangle = rcRect;

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform | FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.LeadRect,Leadtools.ImageProcessing.Core.FrequencyFilterCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="fourierTransformInformation">
        <see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation" /> 
            structure is a two-dimensional array holding the frequency components.</param>
      <param name="rectangle">Specifies the filter dimension that will be applied, it represents the frequency range to be kept or removed. The left value refers to 
            the minimum X harmonic, the right refers to the maximum X harmonic, the top refers to the minimum Y harmonic and the bottom refers to the maximum Y harmonic. 
            The maximum X harmonic equals Width -1 and the maximum Y harmonic equals Height -1.</param>
      <param name="flags">Flags that indicate the operation to be performed on the specified X and Y harmonics ranges. You can use a bit wise OR (|) to specify one 
            flag from each group.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Run">
      <summary>Apply the method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>1     the command was successful <br /> &lt; 1   An error occurred. </returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Flags">
      <summary>Gets or sets flags that indicate the operation to be performed on the X and Y harmonics ranges. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Flags that indicate the operation to be performed on the X and Y harmonics ranges. You can use a bit wise OR (|) to specify one flag from each group.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.Rectangle">
      <summary>Gets or sets a rectangle structure that contains the filter dimension that will be applied. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Rectangle structure that contains the filter dimension that will be applied, it represents the frequency range to be kept or removed. The left value refers to the minimum X harmonic, the right refers to the maximum X harmonic, the top refers to the minimum Y harmonic and the bottom refers to the maximum Y harmonic. The maximum X harmonic equals Width -1 and the maximum Y harmonic equals Height -1.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.FourierTransformInformation">
      <summary>Gets or sets a <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see> structure that contains information on the Fourier Transform. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see> structure is a two-dimensional array holding the frequency components.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterCommand.#ctor">FrequencyFilterCommand()</see></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags">
      <summary>Options for the <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>You can use a bitwise OR (|) to specify one or more flags.</para>
        <para>The <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags" /> enumeration is used as the type for the <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Flags">HighQualityRotateCommand.Flags</see> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>enum LTHighQualityRotateCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum HighQualityRotateCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags.None">
      <summary>
        <para>Default value. Do not resize the image. Crop it and use fast rotation as opposed to optimal quality. This is the same as
            specifying the <strong>Crop</strong> | <strong>Fastest</strong> flags</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTHighQualityRotateCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags.Crop">
      <summary>
        <para>Crop the resulting image. Since a <see cref="T:Leadtools.RasterImage" /> is always a rectangular object, rotation will always increase the width and
            height of the image. Specifying this flag will keep the original image size by cropping the extra size resulting from the rotation operation.
            The value specified in <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor">HighQualityRotateCommand.FillColor</see> will not be used</para>
        <para>This flag cannot be ORed with <strong>Resize</strong>.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTHighQualityRotateCommandFlags_Crop</pre>
      </objectivec>
      <java>
        <pre>CROP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags.Resize">
      <summary>
        <para>Size the resulting image as needed. Since a <see cref="T:Leadtools.RasterImage" /> is always a rectangular object, rotation will always increase the width
            and height of the image. Specifying this flag will increase the size of the image and fill the extra space with the value specified in the
            <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor">HighQualityRotateCommand.FillColor</see> property.</para>
        <para>This flag cannot be ORed with <strong>Crop</strong></para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTHighQualityRotateCommandFlags_Resize</pre>
      </objectivec>
      <java>
        <pre>RESIZE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags.Fastest">
      <summary>
        <para>Use fastest interpolation possible (Bilinear) when rotating.</para>
        <para>This flag cannot be ORed with <strong>BestQuality</strong></para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTHighQualityRotateCommandFlags_Fastest</pre>
      </objectivec>
      <java>
        <pre>FASTEST</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags.BestQuality">
      <summary>
        <para>Use highest quality interpolation possible (Bicubic) when rotating.</para>
        <para>This flag cannot be ORed with <strong>Fastest</strong></para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <objectivec>
        <pre>LTHighQualityRotateCommandFlags_BestQuality</pre>
      </objectivec>
      <java>
        <pre>BEST_QUALITY</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand">
      <summary>Perform high quality rotation on a black and white image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> can be used to perform high quality rotation on a black and white (1 bits/pixel) images in
            any angle.</para>
        <para>Normal rotation commands such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> will rotate the image data as is, which may result in less than desired
            quality due to the limited number of bits/pixel of the image (1 bit). This command will temporarily convert the image to 8 bits/pixel internally,
            perform the rotation and then convert the image back to 1 bits/pixel.</para>
        <para>This command only works with a 1 bits/pixel images (a <see cref="T:Leadtools.RasterImage" /> with <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see>
            equals to 1). Using this command on any other image type will result in an exception.</para>
        <para>This command does not support signed data images.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.</para>
        <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para>
      </remarks>
      <example>
        <code lang="VB">   Public Sub HighQualityRotateCommandExample()
      Dim codecs As New RasterCodecs()

      ' Get an image
      Dim tifFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1.tif")
      Dim normalRotateFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_NormalRotated.tif")
      Dim highQualityRotateFileName As String = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_HighQualityRotated.tif")

      Dim angle As Integer = 30 * 100
      Dim fillColor As RasterColor = RasterColor.FromKnownColor(RasterKnownColor.White)

      ' Load the image, rotate normally by 30 degrees and save
      Using image As RasterImage = codecs.Load(tifFileName)
         Dim cmd As New RotateCommand()
         cmd.Angle = angle
         cmd.Flags = RotateCommandFlags.Resize Or RotateCommandFlags.Bicubic
         cmd.FillColor = fillColor
         cmd.Run(image)
         codecs.Save(image, normalRotateFileName, image.OriginalFormat, image.BitsPerPixel)
      End Using

      ' Load the image, rotate with high quality by 30 degrees and save
      Using image As RasterImage = codecs.Load(tifFileName)
         Dim cmd As New HighQualityRotateCommand()
         cmd.Angle = angle
         cmd.Flags = HighQualityRotateCommandFlags.Resize Or HighQualityRotateCommandFlags.BestQuality
         cmd.FillColor = fillColor
         cmd.Run(image)
         codecs.Save(image, highQualityRotateFileName, image.OriginalFormat, image.BitsPerPixel)
      End Using

      ' Now compare the saved TIF files and notice the difference in quality between
      ' the normal rotate and high quality

      codecs.Dispose()
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HighQualityRotateCommandExample()
      {
         RasterCodecs codecs = new RasterCodecs();

         // Get an image
         string tifFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1.tif");
         string normalRotateFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_NormalRotated.tif");
         string highQualityRotateFileName = Path.Combine(LEAD_VARS.ImagesDir, "ocr1_HighQualityRotated.tif");

         int angle = 30 * 100;
         RasterColor fillColor = RasterColor.FromKnownColor(RasterKnownColor.White);

         // Load the image, rotate normally by 30 degrees and save
         using(RasterImage image = codecs.Load(tifFileName))
         {
            RotateCommand cmd = new RotateCommand();
            cmd.Angle = angle;
            cmd.Flags = RotateCommandFlags.Resize | RotateCommandFlags.Bicubic;
            cmd.FillColor = fillColor;
            cmd.Run(image);
            codecs.Save(image, normalRotateFileName, image.OriginalFormat, image.BitsPerPixel);
         }


         // Load the image, rotate with high quality by 30 degrees and save
         using(RasterImage image = codecs.Load(tifFileName))
         {
            HighQualityRotateCommand cmd = new HighQualityRotateCommand();
            cmd.Angle = angle;
            cmd.Flags = HighQualityRotateCommandFlags.Resize | HighQualityRotateCommandFlags.BestQuality;
            cmd.FillColor = fillColor;
            cmd.Run(image);
            codecs.Save(image, highQualityRotateFileName, image.OriginalFormat, image.BitsPerPixel);
         }

         // Now compare the saved TIF files and notice the difference in quality between
         // the normal rotate and high quality

         codecs.Dispose();
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HighQualityRotateCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   var loadedImage;

   // Get an image
   var angle = 30 * 100;
   var fillColor = Leadtools.RasterColorHelper.fromKnownColor(Leadtools.RasterKnownColor.white);

   // Load the image, rotate normally by 30 degrees and save
   var srcFileName = "Assets\\ocr1.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      loadedImage = image;
      // Prepare the command
      with (Leadtools.ImageProcessing) {
         var cmd = new RotateCommand();
         cmd.angle = angle;
         cmd.flags = RotateCommandFlags.resize | RotateCommandFlags.bicubic;
         cmd.fillColor = fillColor;
         cmd.run(image);
      }

      var destFileName = "ocr1_NormalRotated.tif";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(loadedImage, Leadtools.LeadStreamFactory.create(saveFile), loadedImage.originalFormat, loadedImage.bitsPerPixel);
   }).then(function () {

      // Load the image, rotate with high quality by 30 degrees and save
      srcFileName = "Assets\\ocr1.tif";
      return Tools.AppInstallFolder().getFileAsync(srcFileName);
   }).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      loadedImage = image;
      with (Leadtools.ImageProcessing.Core) {
         var cmd = new HighQualityRotateCommand();
         cmd.angle = angle;
         cmd.flags = HighQualityRotateCommandFlags.resize | HighQualityRotateCommandFlags.bestQuality;
         cmd.fillColor = fillColor;
         cmd.run(image);
      }

      var destFileName = "ocr1_HighQualityRotated.tif";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(loadedImage, Leadtools.LeadStreamFactory.create(saveFile), loadedImage.originalFormat, loadedImage.bitsPerPixel);
   });

   // Now compare the saved TIF files and notice the difference in quality between
   // the normal rotate and high quality
}
 </code>
        <code lang="CSWinRT">      
      public async Task HighQualityRotateCommandExample()
      {
         RasterCodecs codecs = new RasterCodecs();
         // Get an image
         int angle = 30 * 100;
         RasterColor fillColor = RasterColorHelper.FromKnownColor(RasterKnownColor.White);

         // Load the image, rotate normally by 30 degrees and save
         string srcFileName = @"Assets\ocr1.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         using (RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile)))
         {
            RotateCommand cmd = new RotateCommand();
            cmd.Angle = angle;
            cmd.Flags = RotateCommandFlags.Resize | RotateCommandFlags.Bicubic;
            cmd.FillColor = fillColor;
            cmd.Run(image);
            string destFileName = @"ocr1_NormalRotated.tif";
            StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
            await codecs.SaveAsync(image, LeadStreamFactory.Create(saveFile), image.OriginalFormat, image.BitsPerPixel);
         }

         // Load the image, rotate with high quality by 30 degrees and save
         srcFileName = @"Assets\ocr1.tif";
         loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         using (RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile)))
         {
            HighQualityRotateCommand cmd = new HighQualityRotateCommand();
            cmd.Angle = angle;
            cmd.Flags = HighQualityRotateCommandFlags.Resize | HighQualityRotateCommandFlags.BestQuality;
            cmd.FillColor = fillColor;
            cmd.Run(image);
            string destFileName = @"ocr1_HighQualityRotated.tif";
            StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
            await codecs.SaveAsync(image, LeadStreamFactory.Create(saveFile), image.OriginalFormat, image.BitsPerPixel);
         }

         // Now compare the saved TIF files and notice the difference in quality between
         // the normal rotate and high quality

         codecs.Dispose();
      }</code>
        <code lang="SilverlightCSharp">      public void HighQualityRotateCommandExample(RasterImage image1, Stream outStream1, Stream outStream2)
      {
         RasterImage image2 = image1.Clone();
         RasterCodecs codecs = new RasterCodecs();
         int angle = 30 * 100;
         RasterColor fillColor = new RasterColor(255, 255, 255);

         // rotate normally by 30 degrees and save
         RotateCommand cmd1 = new RotateCommand();
         cmd1.Angle = angle;
         cmd1.Flags = RotateCommandFlags.Resize | RotateCommandFlags.Bicubic;
         cmd1.FillColor = fillColor;
         cmd1.Run(image1);
         // save result image to "ocr1_NormalRotated.tif"
         codecs.Save(image1, outStream1, image1.OriginalFormat, image1.BitsPerPixel);

         // rotate with high quality by 30 degrees and save
         HighQualityRotateCommand cmd2 = new HighQualityRotateCommand();
         cmd2.Angle = angle;
         cmd2.Flags = HighQualityRotateCommandFlags.Resize | HighQualityRotateCommandFlags.BestQuality;
         cmd2.FillColor = fillColor;
         cmd2.Run(image2);

         // save result image to "ocr1_HighQualityRotated.tif"
         codecs.Save(image2, outStream2, image2.OriginalFormat, image2.BitsPerPixel);

         // Now compare the saved TIF files and notice the difference in quality between
         // the normal rotate and high quality
         image1.Dispose();
         image2.Dispose();
      }</code>
        <code lang="VB">      Public Sub HighQualityRotateCommandExample(ByVal image1 As RasterImage, ByVal outStream1 As Stream, ByVal outStream2 As Stream)
         Dim image2 As RasterImage = image1.Clone()
         Dim codecs As RasterCodecs = New RasterCodecs()
         Dim angle As Integer = 30 * 100
         Dim fillColor As RasterColor = New RasterColor(255, 255, 255)

         ' rotate normally by 30 degrees and save
         Dim cmd1 As RotateCommand = New RotateCommand()
         cmd1.Angle = angle
         cmd1.Flags = RotateCommandFlags.Resize Or RotateCommandFlags.Bicubic
         cmd1.FillColor = fillColor
         cmd1.Run(image1)
         ' save result image to "ocr1_NormalRotated.tif"
         codecs.Save(image1, outStream1, image1.OriginalFormat, image1.BitsPerPixel)

         ' rotate with high quality by 30 degrees and save
         Dim cmd2 As HighQualityRotateCommand = New HighQualityRotateCommand()
         cmd2.Angle = angle
         cmd2.Flags = HighQualityRotateCommandFlags.Resize Or HighQualityRotateCommandFlags.BestQuality
         cmd2.FillColor = fillColor
         cmd2.Run(image2)

         ' save result image to "ocr1_HighQualityRotated.tif"
         codecs.Save(image2, outStream2, image2.OriginalFormat, image2.BitsPerPixel)

         ' Now compare the saved TIF files and notice the difference in quality between
         ' the normal rotate and high quality
         image1.Dispose()
         image2.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <noremarks /><objectivec><pre>@interface LTHighQualityRotateCommand : LTRasterCommand</pre></objectivec><java><pre>public class HighQualityRotateCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The new <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> constructed will have <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Angle" /> set to 0, <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Flags" /> set to 
            <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags">HighQualityRotateCommandFlags.Resize</see> | <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags">HighQualityRotateCommandFlags.Fastest</see>
            and <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor" /> set to <see cref="P:System.Drawing.Color.White" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public HighQualityRotateCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags,Leadtools.RasterColor)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="angle">Hundredths of degrees to rotate (+/-). This can be a number from 1 to 36,000. A positive value will rotate the image in a
            clockwise rotation, while a negative value will rotate the image in a counter-clockwise rotation.</param>
      <param name="flags">Options to keep the resulting image the same size as the original image, or to resize according to the rotation direction specified, as well controlling the quality of the rotation.</param>
      <param name="fillColor">The background fill color. This parameter is used only when <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags">HighQualityRotateCommandFlags.Resize</see> is specified in <paramref name="flags" />.</param>
      <remarks>
        <para>You can also use the default constructor of the <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" /> class and set the options using the
            <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Angle" />, <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Flags" /> and <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor" /> properties.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>
- (id)initWithAngle:(int)angle 
              flags:(LTHighQualityRotateCommandFlags)flags 
          fillColor:(LTRasterColor*)fillColor;            </pre>
      </objectivec>
      <java>
        <pre>
public HighQualityRotateCommand(
   int angle, 
   int flags, 
   RasterColor fillColor
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Angle">
      <summary>Gets or sets the rotation angle <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Hundredths of degrees to rotate (+/-). This can be a number from 1 to 36,000. A positive value will rotate
            the image in a clockwise rotation, while a negative value will rotate the image in a counter-clockwise rotation.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Flags">
      <summary>Options to keep the resulting image the same size as the original image or to resize according to the rotation direction specified as well controlling the quality of the rotation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>One or more <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags" /> enumeration members ORed together.</value>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags" /> enumeration.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTHighQualityRotateCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor">
      <summary>Gets or sets the background fill color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterColor" /> object that specifies the background fill color.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor" /> property will only be used if <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommandFlags">HighQualityRotateCommandFlags.Resize</see>
            is specified in the <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.Flags" /> property. Since a <see cref="T:Leadtools.RasterImage" /> is always a rectangular object, rotation will always
            increase the width and height of the image. The extra space will be filled with the color specified in <see cref="P:Leadtools.ImageProcessing.Core.HighQualityRotateCommand.FillColor" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* fillColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getFillColor()
public void setFillColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">
      <summary>
        <para>Enumerated values that determine the behavior of the border removal process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTBorderRemoveCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum BorderRemoveCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.LeadRegion">
      <summary>When the <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion" /> 
            is updated with a shallow copy of the affected image that also contains a region with all the removed borders. 
            This flag must be used in conjunction with SingleRegion. So set <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags" /> 
            to SingleRegion | LeadRegion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_LeadRegion</pre>
      </objectivec>
      <java>
        <pre>LEAD_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.CallBackRegion">
      <summary>
        <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region" /> property is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains the current border to be removed. 
            Setting this flag lets the user create his or her own composite of removed borders by combining the regions received, if <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>. The regions can be combined using a logical OR operator. 
            Combining all regions received when the <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> status results in a region identical to the region created 
            when SingleRegion is set in <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags" />. 
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />. 
            When the region received by the <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region" /> property 
            is no longer needed, it must be disposed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_CallBackRegion</pre>
      </objectivec>
      <java>
        <pre>CALLBACK_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.SingleRegion">
      <summary>For each border encountered by <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> status, the removed border is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see> status , 
            the border is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region" /> will 
            reference a region that contains all the removed borders. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion" /> will be 
            updated with a shallow copy of image that has a LEAD region that contains all the removed borders. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all the removed borders. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed (either region allocated in <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_SingleRegion</pre>
      </objectivec>
      <java>
        <pre>SINGLE_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.ImageUnchanged">
      <summary>The affected image is unchanged. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_ImageUnchanged</pre>
      </objectivec>
      <java>
        <pre>IMAGE_UNCHANGED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags.UseVariance">
      <summary>Consider border variance when performing border removal. If this flag is passed, the <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance" /> property is used. 
            If this flag is not passed, the <see cref="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance" /> property is ignored. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveCommandFlags_UseVariance</pre>
      </objectivec>
      <java>
        <pre>USE_VARIANCE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">
      <summary>
        <para>Indicates which border to remove</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTBorderRemoveBorderFlags</pre>
      </objectivec>
      <java>
        <pre>public enum BorderRemoveBorderFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Left">
      <summary>Remove the left border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_Left</pre>
      </objectivec>
      <java>
        <pre>LEFT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Top">
      <summary>Remove the top border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_Top</pre>
      </objectivec>
      <java>
        <pre>TOP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Right">
      <summary>Remove the right border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_Right</pre>
      </objectivec>
      <java>
        <pre>RIGHT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.Bottom">
      <summary>Remove the bottom border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_Bottom</pre>
      </objectivec>
      <java>
        <pre>BOTTOM</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags.All">
      <summary>Remove all borders. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTBorderRemoveBorderFlags_All</pre>
      </objectivec>
      <java>
        <pre>ALL</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs">
      <summary>Handles each border found by <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>.
            </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTBorderRemoveCommandEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class BorderRemoveCommandEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags,Leadtools.LeadRect)">
      <summary>Initializes a new BorderRemoveCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the affected image</param>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the border to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</param>
      <param name="border">Flag that indicates which border is being processed.</param>
      <param name="boundingRectangle">Rectangle object that contains the bounding rectangle of the border being processed.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>.
            </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithImage:(LTRasterImage*)image 
             region:(LTRasterRegion*)region 
             border:(LTBorderRemoveBorderFlags)border 
  boundingRectangle:(LeadRect)boundingRectangle;            </pre>
      </objectivec>
      <java>
        <pre>
public BorderRemoveCommandEvent(
   Object source, 
   RasterImage image, 
   RasterRegion region, 
   int border, 
   LeadRect boundingRectangle
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Image">
      <summary>Gets the RasterImage object that references the affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>RasterImage object that references the affected image</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Region">
      <summary>Gets the LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the border to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the border to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">BorderRemoveCommand(BorderRemoveCommandFlags , BorderRemoveBorderFlags, int, int, int)</see>.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Border">
      <summary>Gets a flag that indicates which border is being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates which border is being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTBorderRemoveBorderFlags border;</pre>
      </objectivec>
      <java>
        <pre>public int getBorder()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.BoundingRectangle">
      <summary>Gets a <see cref="T:Leadtools.LeadRect" /> structure that contains the bounding rectangle of the border being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Rectangle structure that contains the bounding rectangle of the border being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect boundingRectangle;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getBoundingRectangle()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs.Status">
      <summary>Gets or sets the status of the border remove process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Status of the border remove process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRemoveStatus status;</pre>
      </objectivec>
      <java>
        <pre>
public RemoveStatus getStatus()
public void setStatus(RemoveStatus value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand">
      <summary>Removes the black borders in a 1-bit black and white image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command removes borders that commonly appear in scanned text documents. 
            Any or all of the four borders can be detected and removed. The behavior of this command can be modified 
            by using an Event Handler that handles the <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandEventArgs" />. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public WithEvents borderRemoveCommandCallback As BorderRemoveCommand
   Public Sub BorderRemoveCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      borderRemoveCommandCallback = New BorderRemoveCommand
      borderRemoveCommandCallback.Border = BorderRemoveBorderFlags.All
      borderRemoveCommandCallback.Flags = BorderRemoveCommandFlags.UseVariance
      borderRemoveCommandCallback.Percent = 20
      borderRemoveCommandCallback.Variance = 3
      borderRemoveCommandCallback.WhiteNoiseLength = 9

      borderRemoveCommandCallback.Run(leadImage)

   End Sub

   Private Sub BorderRemoveCommand_BorderRemove_S1(ByVal sender As Object, ByVal e As BorderRemoveCommandEventArgs) Handles borderRemoveCommandCallback.BorderRemove
      Dim Border As String

      Select Case (e.Border)
         Case BorderRemoveBorderFlags.Top
            Border = "Top"

         Case BorderRemoveBorderFlags.Left
            Border = "Left"

         Case BorderRemoveBorderFlags.Right
            Border = "Right"

         Case BorderRemoveBorderFlags.Bottom
            Border = "Bottom"

         Case Else
            Border = ""
      End Select
      MessageBox.Show("Bounds ( " + Convert.ToString(e.BoundingRectangle.Left) + ", " + Convert.ToString(e.BoundingRectangle.Top) + ") - " + "( " + Convert.ToString(e.BoundingRectangle.Right) + ", " + Convert.ToString(e.BoundingRectangle.Bottom) + ")" + Chr(13) + " Border " + Border.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BorderRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S1);
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);

      }

      private void command_BorderRemove_S1(object sender, BorderRemoveCommandEventArgs e)
      {
         string Border;

         switch (e.Border)
         {
            case BorderRemoveBorderFlags.Top:
               Border = "Top";
               break;
            case BorderRemoveBorderFlags.Left:
               Border = "Left";
               break;
            case BorderRemoveBorderFlags.Right:
               Border = "Right";
               break;
            case BorderRemoveBorderFlags.Bottom:
               Border = "Bottom";
               break;
            default:
               Border = "";
               break;
         }
         MessageBox.Show("Bounds " + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" + "\n Border " + Border.ToString());
         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BorderRemoveCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BorderRemoveCommand();
         command.addEventListener("borderremove", command_BorderRemove_S1);
         command.border = BorderRemoveBorderFlags.all;
         command.flags = BorderRemoveCommandFlags.useVariance;
         command.percent = 20;
         command.variance = 3;
         command.whiteNoiseLength = 9;
         command.run(image);
      }
   });
}

function command_BorderRemove_S1(e) {
   var Border;

   with (Leadtools.ImageProcessing.Core) {
      switch (e.border) {
         case BorderRemoveBorderFlags.top:
            Border = "Top";
            break;
         case BorderRemoveBorderFlags.left:
            Border = "Left";
            break;
         case BorderRemoveBorderFlags.right:
            Border = "Right";
            break;
         case BorderRemoveBorderFlags.bottom:
            Border = "Bottom";
            break;
         default:
            Border = "";
            break;
      }
      console.error("Bounds " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" + "\n Border " + Border.toString());
      e.status = RemoveStatus.remove;
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task BorderRemoveCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S1);
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);

      }

      private void command_BorderRemove_S1(object sender, BorderRemoveCommandEventArgs e)
      {
         string Border;

         switch (e.Border)
         {
            case BorderRemoveBorderFlags.Top:
               Border = "Top";
               break;
            case BorderRemoveBorderFlags.Left:
               Border = "Left";
               break;
            case BorderRemoveBorderFlags.Right:
               Border = "Right";
               break;
            case BorderRemoveBorderFlags.Bottom:
               Border = "Bottom";
               break;
            default:
               Border = "";
               break;
         }
         Debug.WriteLine("Bounds " + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" + "\n Border " + Border.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void BorderRemoveCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S1);
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void command_BorderRemove_S1(object sender, BorderRemoveCommandEventArgs e)
      {
         string Border;

         switch (e.Border)
         {
            case BorderRemoveBorderFlags.Top:
               Border = "Top";
               break;
            case BorderRemoveBorderFlags.Left:
               Border = "Left";
               break;
            case BorderRemoveBorderFlags.Right:
               Border = "Right";
               break;
            case BorderRemoveBorderFlags.Bottom:
               Border = "Bottom";
               break;
            default:
               Border = "";
               break;
         }
         Debug.WriteLine("Bounds " + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" + "\n Border " + Border.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub BorderRemoveCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As BorderRemoveCommand = New BorderRemoveCommand()
         AddHandler command.BorderRemove, AddressOf command_BorderRemove_S1
         command.Border = BorderRemoveBorderFlags.All
         command.Flags = BorderRemoveCommandFlags.UseVariance
         command.Percent = 20
         command.Variance = 3
         command.WhiteNoiseLength = 9
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub command_BorderRemove_S1(ByVal sender As Object, ByVal e As BorderRemoveCommandEventArgs)
         Dim Border As String

         Select Case e.Border
            Case BorderRemoveBorderFlags.Top
               Border = "Top"
            Case BorderRemoveBorderFlags.Left
               Border = "Left"
            Case BorderRemoveBorderFlags.Right
               Border = "Right"
            Case BorderRemoveBorderFlags.Bottom
               Border = "Bottom"
            Case Else
               Border = ""
         End Select
         Debug.WriteLine("Bounds " &amp; "( " &amp; e.BoundingRectangle.Left &amp; ", " &amp; e.BoundingRectangle.Top &amp; ") - " &amp; _
                         "( " &amp; e.BoundingRectangle.Right &amp; ", " &amp; e.BoundingRectangle.Bottom &amp; ")" &amp; Constants.vbLf &amp; " Border " &amp; Border.ToString())
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <noremarks /><objectivec><pre>@interface LTBorderRemoveCommand : LTRasterCommand</pre></objectivec><java><pre>public class BorderRemoveCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.#ctor">
      <summary>Initializes a new BorderRemoveCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public BorderRemoveCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.#ctor(Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags,Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new BorderRemoveCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flag that determines the behavior of the border removal process.</param>
      <param name="border">Flag that indicates which border to remove.</param>
      <param name="percent">Percent of the image dimension in which the border will be found. For most images, use 20.
             For example, if an image is 200 pixels wide, Percent is set to 20 and Border is set to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">BorderRemoveBorderFlags.Left</see>, 
             then the left border will be found in the area between the left edge of the image and a line 40 pixels from the left edge. 
             If the border is closer to the edge of the image, use a smaller value. If the border is farther from the edge, 
             use a larger value.</param>
      <param name="whiteNoiseLength">Amount of white noise tolerated when determining the border. The units are in pixels. 
            Values of 0 to 10 are sufficient for most images.</param>
      <param name="variance">Amount of variance tolerated in the border. If the border varies significantly in thickness, 
            you should use a higher value for Variance. Range is 0 to 10. </param>
      <example>
        <code lang="VB">   Public WithEvents borderRemoveConstructorCallback As BorderRemoveCommand
   Public Sub BorderRemoveConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      borderRemoveConstructorCallback = New BorderRemoveCommand(BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.CallBackRegion, BorderRemoveBorderFlags.All, 20, 9, 3)
      borderRemoveConstructorCallback.Run(leadImage)

   End Sub

   Private Sub BorderRemoveCommand_BorderRemove_S2(ByVal sender As Object, ByVal e As BorderRemoveCommandEventArgs) Handles borderRemoveConstructorCallback.BorderRemove
      Dim ee As BorderRemoveCommandEventArgs = New BorderRemoveCommandEventArgs(e.Image, e.Region, BorderRemoveBorderFlags.All, e.BoundingRectangle)
      e.Status = RemoveStatus.NoRemove

      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.Set)
         Dim command As InvertCommand = New InvertCommand
         command.Run(e.Image)
         e.Image.MakeRegionEmpty()
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void BorderRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand( BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.CallBackRegion, BorderRemoveBorderFlags.All, 20, 9, 3);
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S2);
         command.Run(image);

      }

      private void command_BorderRemove_S2(object sender, BorderRemoveCommandEventArgs e)
      {
         BorderRemoveCommandEventArgs ee = new BorderRemoveCommandEventArgs(e.Image, e.Region, BorderRemoveBorderFlags.All, e.BoundingRectangle);
         e.Status = RemoveStatus.NoRemove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.Set);
            InvertCommand command = new InvertCommand();
            command.Run(e.Image);
            e.Image.MakeRegionEmpty();
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function BorderRemoveConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BorderRemoveCommand( BorderRemoveCommandFlags.useVariance | BorderRemoveCommandFlags.callBackRegion, BorderRemoveBorderFlags.all, 20, 9, 3);
         command.addEventListener("borderremove", command_BorderRemove_S2);
         command.run(image);
      }
   });
}

function command_BorderRemove_S2(e)
{
   with (Leadtools.ImageProcessing.Core) {
      e.status = RemoveStatus.noRemove;

      if (e.region != null) {
         e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.set);
         with (Leadtools.ImageProcessing.Color) {
            var command = new InvertCommand();
            command.run(e.image);
         }
         e.image.makeRegionEmpty();
      }
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task BorderRemoveConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand( BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.CallBackRegion, BorderRemoveBorderFlags.All, 20, 9, 3);
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S2);
         command.Run(image);

      }

      private void command_BorderRemove_S2(object sender, BorderRemoveCommandEventArgs e)
      {
         BorderRemoveCommandEventArgs ee = new BorderRemoveCommandEventArgs(e.Image, e.Region, BorderRemoveBorderFlags.All, e.BoundingRectangle);
         e.Status = RemoveStatus.NoRemove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.Set);
            InvertCommand command = new InvertCommand();
            command.Run(e.Image);
            e.Image.MakeRegionEmpty();
         }
      }</code>
        <code lang="SilverlightCSharp">      public void BorderRemoveConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand( BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.CallBackRegion, BorderRemoveBorderFlags.All, 20, 9, 3);
         command.BorderRemove += new EventHandler&lt;BorderRemoveCommandEventArgs&gt;(command_BorderRemove_S2);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void command_BorderRemove_S2(object sender, BorderRemoveCommandEventArgs e)
      {
         BorderRemoveCommandEventArgs ee = new BorderRemoveCommandEventArgs(e.Image,null, BorderRemoveBorderFlags.All, e.BoundingRectangle);
         e.Status = RemoveStatus.NoRemove;

      }</code>
        <code lang="VB">      Public Sub BorderRemoveConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As BorderRemoveCommand = New BorderRemoveCommand(BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.CallBackRegion, _
                                                                      BorderRemoveBorderFlags.All, 20, 9, 3)
         AddHandler command.BorderRemove, AddressOf command_BorderRemove_S2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub command_BorderRemove_S2(ByVal sender As Object, ByVal e As BorderRemoveCommandEventArgs)
         Dim ee As BorderRemoveCommandEventArgs = New BorderRemoveCommandEventArgs(e.Image,Nothing, BorderRemoveBorderFlags.All, e.BoundingRectangle)
         e.Status = RemoveStatus.NoRemove

      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTBorderRemoveCommandFlags)flags 
             border:(LTBorderRemoveBorderFlags)border 
            percent:(int)percent 
   whiteNoiseLength:(int)whiteNoiseLength 
           variance:(int)variance;            </pre>
      </objectivec>
      <java>
        <pre>
public BorderRemoveCommand(
   int flags, 
   int border, 
   int percent, 
   int whiteNoiseLength, 
   int variance
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BorderRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Flags">
      <summary>Gets or sets a flag that determines the behavior of the border removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determines the behavior of the border removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTBorderRemoveCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Border">
      <summary>Flag that indicates which border to remove. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates which border to remove.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTBorderRemoveBorderFlags border;</pre>
      </objectivec>
      <java>
        <pre>
public int getBorder()
public void setBorder(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Percent">
      <summary>Gets or sets the percent of the image dimension in which the border will be found. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Percent of the image dimension in which the border will be found. For most images, use 20.
             For example, if an image is 200 pixels wide, Percent is set to 20 and Border is set to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveBorderFlags">BorderRemoveBorderFlags.Left</see>, 
             then the left border will be found in the area between the left edge of the image and a line 40 pixels from the left edge. 
             If the border is closer to the edge of the image, use a smaller value. If the border is farther from the edge, use a larger value.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int percent;</pre>
      </objectivec>
      <java>
        <pre>
public int getPercent()
public void setPercent(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.WhiteNoiseLength">
      <summary>Gets or sets the amount of white noise tolerated when determining the border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Amount of white noise tolerated when determining the border. The units are in pixels. 
            Values of 0 to 10 are sufficient for most images.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int whiteNoiseLength;</pre>
      </objectivec>
      <java>
        <pre>
public int getWhiteNoiseLength()
public void setWhiteNoiseLength(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Variance">
      <summary>Gets or sets the amount of variance tolerated in the border. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Amount of variance tolerated in the border. If the border varies significantly in thickness, 
            you should use a higher value for Variance. Range is 0 to 10. </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int variance;</pre>
      </objectivec>
      <java>
        <pre>
public int getVariance()
public void setVariance(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.Region">
      <summary>Gets the handle to a LEADTOOLS <see cref="T:Leadtools.RasterRegion" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Handle to a windows region. When <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /> returns, 
            this is updated with a single windows region corresponding to all changes, only if <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see> 
            has been set in Flags and <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see> has not been set. To use this, set the Flags to 
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see>. It is the programmer's responsibility to dispose of this region when the region is no longer needed.</value>
      <example>
        <code lang="VB">   Public Sub RegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BorderRemoveCommand = New BorderRemoveCommand
      command.Border = BorderRemoveBorderFlags.All
      command.Flags = BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.SingleRegion
      command.Percent = 20
      command.Variance = 3
      command.WhiteNoiseLength = 9

      command.Run(leadImage)
      leadImage.SetRegion(Nothing, command.Region, RasterRegionCombineMode.Set)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void RegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion ;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);
         image.SetRegion(null, command.Region, RasterRegionCombineMode.Set);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function RegionPropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BorderRemoveCommand();
         command.border = BorderRemoveBorderFlags.all;
         command.flags = BorderRemoveCommandFlags.useVariance | BorderRemoveCommandFlags.singleRegion ;
         command.percent = 20;
         command.variance = 3;
         command.whiteNoiseLength = 9;
         
         command.run(image);
         image.setRegion(null, command.region, Leadtools.RasterRegionCombineMode.set);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task RegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion ;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);
         image.SetRegion(null, command.Region, RasterRegionCombineMode.Set);

      }</code>
        <code lang="SilverlightCSharp">      public void RegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion ;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub RegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As BorderRemoveCommand = New BorderRemoveCommand()
         command.Border = BorderRemoveBorderFlags.All
         command.Flags = BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.SingleRegion
         command.Percent = 20
         command.Variance = 3
         command.WhiteNoiseLength = 9
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BorderRemoveCommand.ImageRegion">
      <summary>RasterImage object that is updated with a shallow copy of image that also has a region that contains the removed borders. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>If <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see> have been set in Flags, then when 
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /> returns, this is updated with a shallow copy of image that 
            also has a region that contains the removed borders. So set Flags to (<see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommandFlags">BorderRemoveCommandFlags.LeadRegion</see>). It is the programmer's responsibility to 
            dispose the region when it is no longer needed.</value>
      <example>
        <code lang="VB">   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      Dim command As BorderRemoveCommand = New BorderRemoveCommand
      command.Border = BorderRemoveBorderFlags.All
      command.Flags = BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.SingleRegion Or BorderRemoveCommandFlags.LeadRegion
      command.Percent = 20
      command.Variance = 3
      command.WhiteNoiseLength = 9

      command.Run(leadImage)

      Using tempRegion As RasterRegion = command.ImageRegion.GetRegion(Nothing)
         leadImage.SetRegion(Nothing, tempRegion, RasterRegionCombineMode.Set)
      End Using

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion | BorderRemoveCommandFlags.LeadRegion;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);

         using(RasterRegion tempRegion = command.ImageRegion.GetRegion(null))
         {
            image.SetRegion(null, tempRegion, RasterRegionCombineMode.Set);
         }

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new BorderRemoveCommand();
         command.border = BorderRemoveBorderFlags.all;
         command.flags = BorderRemoveCommandFlags.useVariance | BorderRemoveCommandFlags.singleRegion | BorderRemoveCommandFlags.leadRegion;
         command.percent = 20;
         command.variance = 3;
         command.whiteNoiseLength = 9;
         
         command.run(image);

         var tempRegion = command.imageRegion.getRegion(null);
         image.setRegion(null, tempRegion, Leadtools.RasterRegionCombineMode.set);
         tempRegion = null;
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion | BorderRemoveCommandFlags.LeadRegion;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;

         command.Run(image);

         using(RasterRegion tempRegion = command.ImageRegion.GetRegion(null))
         {
            image.SetRegion(null, tempRegion, RasterRegionCombineMode.Set);
         }

      }</code>
        <code lang="SilverlightCSharp">      public void ImageRegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         BorderRemoveCommand command = new BorderRemoveCommand();
         command.Border = BorderRemoveBorderFlags.All;
         command.Flags = BorderRemoveCommandFlags.UseVariance | BorderRemoveCommandFlags.SingleRegion | BorderRemoveCommandFlags.LeadRegion;
         command.Percent = 20;
         command.Variance = 3;
         command.WhiteNoiseLength = 9;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ImageRegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As BorderRemoveCommand = New BorderRemoveCommand()
         command.Border = BorderRemoveBorderFlags.All
         command.Flags = BorderRemoveCommandFlags.UseVariance Or BorderRemoveCommandFlags.SingleRegion Or BorderRemoveCommandFlags.LeadRegion
         command.Percent = 20
         command.Variance = 3
         command.WhiteNoiseLength = 9
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* imageRegion;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImageRegion()</pre>
      </java>
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.BorderRemoveCommand.BorderRemove">
      <summary>Handles border information that will be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Handles border information that will be removed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, unsafe_unretained) id&lt;LTBorderRemoveCommandDelegate&gt; delegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addBorderRemoveCommandListener(BorderRemoveCommandListener listener)
public void removeBorderRemoveCommandListener(BorderRemoveCommandListener listener)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommand">
      <summary>This function performs an Equalization between the Hard Tissue and the Soft Tissue in X-Ray Images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>
             Using this function improves the results in processing and recognition of Medical X-Ray and CT Images.
             </description>
          </item>
          <item>
            <description>This function does not support 32-bit grayscale images. It returns 
            the error code ERROR_GRAY32_UNSUPPORTED if a 32-bit grayscale image is passed to this function.
             </description>
          </item>
        </list>
             Options:
             <list type="bullet"><item><description>
             Intensification of X-Ray Image
             </description></item><item><description>
             Simplification of X-Ray Image
             </description></item></list><para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
             command will fail if the image data for the RasterImage object is stored internally
              using a Silverlight WriteableBitmap object.  For more information,
             refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub TissueEqualizeCommandExamples()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As TissueEqualizeCommand = New TissueEqualizeCommand
      'Apply 
      command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void TissueEqualizeCommandExample()
        {
           // Load an image
           RasterCodecs codecs = new RasterCodecs();
           codecs.ThrowExceptionsOnInvalidImages = true;

           RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

           // Prepare the command
           TissueEqualizeCommand command = new TissueEqualizeCommand();
           //Apply 
           command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption;
           command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function TissueEqualizeCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new TissueEqualizeCommand();
         //Apply 
         command.flags = TissueEqualizeCommandFlags.useIntensifyOption;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task TissueEqualizeCommandExample()
        {
           // Load an image
           RasterCodecs codecs = new RasterCodecs();
           codecs.ThrowExceptionsOnInvalidImages = true;
           // Load the image
           string srcFileName = @"Assets\Image1.cmp";
           StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
           RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

           // Prepare the command
           TissueEqualizeCommand command = new TissueEqualizeCommand();
           //Apply 
           command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption;
           command.Run(image);

        }</code>
        <code lang="SilverlightCSharp">        public void TissueEqualizeCommandExample(RasterImage image, Stream outStream)
        {
           // Prepare the command
           TissueEqualizeCommand command = new TissueEqualizeCommand();
           //Apply 
           command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption;
           command.Run(image);
           // Save result image
           RasterCodecs codecs = new RasterCodecs();
           codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
           image.Dispose();
        }</code>
        <code lang="VB">        Public Sub TissueEqualizeCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
           ' Prepare the command
           Dim command As TissueEqualizeCommand = New TissueEqualizeCommand()
           'Apply 
           command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption
           command.Run(image)
           ' Save result image
           Dim codecs As RasterCodecs = New RasterCodecs()
           codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
           image.Dispose()
        End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.   
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeContrastCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.StretchIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.InvertCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeSaturationCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramEqualizeCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.FillCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramContrastCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.AddWeightedCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.MultiplyCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorReplaceCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.AdaptiveContrastCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ApplyMathematicalLogicCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ColorIntensityBalanceCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.ContrastBrightnessIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Effects.EdgeDetectEffectCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand"></seealso>.
             <objectivec><pre>@interface LTTissueEqualizeCommand : LTRasterCommand</pre></objectivec><java><pre>public class TissueEqualizeCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>The default value for flags is TissueEqualizeCommandFlags::UseIntensifyOption  </remarks>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public TissueEqualizeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.#ctor(Leadtools.ImageProcessing.Core.TissueEqualizeCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flags that determine the behavior of Tissue Equalize process.</param>
      <example>
        <code lang="VB">   Public Sub TissueEqualizeConstructorExamples()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As TissueEqualizeCommand = New TissueEqualizeCommand(TissueEqualizeCommandFlags.UseIntensifyOption)
      'Apply 
      command.Flags = TissueEqualizeCommandFlags.UseIntensifyOption
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void TissueEqualizeConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            TissueEqualizeCommand command = new TissueEqualizeCommand(TissueEqualizeCommandFlags.UseIntensifyOption);
            //Apply 
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function TissueEqualizeConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new TissueEqualizeCommand(TissueEqualizeCommandFlags.useIntensifyOption);
         //Apply 
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task TissueEqualizeConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\Image1.cmp";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            TissueEqualizeCommand command = new TissueEqualizeCommand(TissueEqualizeCommandFlags.UseIntensifyOption);
            //Apply 
            command.Run(image);

        }</code>
        <code lang="SilverlightCSharp">        public void TissueEqualizeConstructorExample(RasterImage image, Stream outStream)
        {
           // Prepare the command
           TissueEqualizeCommand command = new TissueEqualizeCommand(TissueEqualizeCommandFlags.UseIntensifyOption);
           //Apply 
           command.Run(image);
           // Save result image
           RasterCodecs codecs = new RasterCodecs();
           codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
           image.Dispose();
        }</code>
        <code lang="VB">        Public Sub TissueEqualizeConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
           ' Prepare the command
           Dim command As TissueEqualizeCommand = New TissueEqualizeCommand(TissueEqualizeCommandFlags.UseIntensifyOption)
           'Apply 
           command.Run(image)
           ' Save result image
           Dim codecs As RasterCodecs = New RasterCodecs()
           codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
           image.Dispose()
        End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithFlags:(LTTissueEqualizeCommandFlags)flags;</pre>
      </objectivec>
      <java>
        <pre>public TissueEqualizeCommand(int flags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TissueEqualizeCommand.Flags">
      <summary>Gets or sets flags that determine the behavior of the Tissue Equalization process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determines the behavior of the Tissue Equalization process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommand" />.
            </example>
      <noremarks />&gt;
            <objectivec><pre>@property (nonatomic, assign) LTTissueEqualizeCommandFlags flags;</pre></objectivec><java><pre>
public int getFlags()
public void setFlags(int value)            </pre></java></member>
    <member name="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType">
      <summary>Values that determine the type of filter used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTMultiscaleEnhancementCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum MultiscaleEnhancementCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType.Gaussian">
      <summary>(0x00000000)Use the Gaussian filter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandType_Gaussian</pre>
      </objectivec>
      <java>
        <pre>GAUSSIAN</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType.Resample">
      <summary>(0x00000001)Use the resample filter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandType_Resample</pre>
      </objectivec>
      <java>
        <pre>RESAMPLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType.Bicubic">
      <summary>(0x00000002)Use the bicubic filter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandType_Bicubic</pre>
      </objectivec>
      <java>
        <pre>BICUBIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType.Normal">
      <summary>(0x00000003)Use the normal filter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandType_Normal</pre>
      </objectivec>
      <java>
        <pre>NORMAL</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags">
      <summary>Flags that determine method behavior.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTMultiscaleEnhancementCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum MultiscaleEnhancementCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags.None">
      <summary>No Enhancement. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags.EdgeEnhancement">
      <summary>Add the edge enhancement option. When this flag is set, the EdgeLevels and EdgeCoefficient properties will be used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandFlags_EdgeEnhancement</pre>
      </objectivec>
      <java>
        <pre>EDGE_ENHANCEMENT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags.LatitudeReduction">
      <summary>Add the latitude reduction option. When this flag is set, the LatitudeLevels and LatitudeCoefficient properties will be used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTMultiscaleEnhancementCommandFlags_LatitudeReduction</pre>
      </objectivec>
      <java>
        <pre>LATITUDE_REDUCTION</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand">
      <summary>Enhances an image's contrast, edges, and density range for use in Computed Radiography (CR), in a way that all relevant image features are rendered with an appropriate level of visibility. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The command wraps techniques of image enhancements, such as contrast enhancement, edge enhancement and latitude reduction, for Computed Radiography (CR).</description>
          </item>
          <item>
            <description>In multi scale enhancement, the image is decomposed into components or levels. Those components or levels that contain details will be enhanced separately from other components or levels.</description>
          </item>
          <item>
            <description>This will improve the visualization for the subtle image features without the risk of losing information of other features.</description>
          </item>
          <item>
            <description>To find the number of levels in any image follow this equation:</description>
          </item>
          <item>
            <description>MaximumLevels = ceil( log( max(pimage-&gt;Width, pimage-&gt;Height)) / log(2));</description>
          </item>
          <item>
            <description>The command will consider values larger than 10000 for contrast as 10000. If the user used a contrast of 0, then image contrast will not be improved.</description>
          </item>
          <item>
            <description>Best results are obtained if contrast is in the range of 15 percent ~ 30 percent. The larger the value the stronger the enhancement will be. Any stronger enhancement than 30 percent will reveal noise and no new enhancement will be noticed.</description>
          </item>
          <item>
            <description>The user can further enhance the image with:<br /><list><item><description>edge enhancements (use <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.EdgeEnhancement) and/or</description></item><item><description>latitude reduction (use <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.LatitudeReduction)</description></item></list></description>
          </item>
          <item>
            <description>The edge levels, edge coefficient, latitude levels and latitude coefficient values are available for advanced users. Using -1 would give the maximum enhancements.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub MultiScaleEnhancementCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand
      command.Contrast = 2000
      command.EdgeLevels = 4
      command.EdgeCoefficient = -1
      command.LatitudeLevels = 0
      command.LatitudeCoefficient = 0
      command.Type = MultiscaleEnhancementCommandType.Gaussian
      command.Flags = MultiscaleEnhancementCommandFlags.EdgeEnhancement
      ' Apply multiscale enhancement
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MultiScaleEnhancementCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand();
         command.Contrast = 2000;
         command.EdgeLevels = 4;
         command.EdgeCoefficient = -1;
         command.LatitudeLevels = 0;
         command.LatitudeCoefficient = 0;
         command.Type = MultiscaleEnhancementCommandType.Gaussian;
         command.Flags = MultiscaleEnhancementCommandFlags.EdgeEnhancement;
         // Apply multiscale enhancement
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="CSWinRT">      
      public async Task MultiScaleEnhancementCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand();
         command.Contrast = 2000;
         command.EdgeLevels = 4;
         command.EdgeCoefficient = -1;
         command.LatitudeLevels = 0;
         command.LatitudeCoefficient = 0;
         command.Type = MultiscaleEnhancementCommandType.Gaussian;
         command.Flags = MultiscaleEnhancementCommandFlags.EdgeEnhancement;
         // Apply multiscale enhancement
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MultiScaleEnhancementCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand();
         command.Contrast = 2000;
         command.EdgeLevels = 4;
         command.EdgeCoefficient = -1;
         command.LatitudeLevels = 0;
         command.LatitudeCoefficient = 0;
         command.Type = MultiscaleEnhancementCommandType.Gaussian;
         command.Flags = MultiscaleEnhancementCommandFlags.EdgeEnhancement;
         // Apply multiscale enhancement
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MultiScaleEnhancementCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand()
         command.Contrast = 2000
         command.EdgeLevels = 4
         command.EdgeCoefficient = -1
         command.LatitudeLevels = 0
         command.LatitudeCoefficient = 0
         command.Type = MultiscaleEnhancementCommandType.Gaussian
         command.Flags = MultiscaleEnhancementCommandFlags.EdgeEnhancement
         ' Apply multiscale enhancement
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.StretchIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.InvertCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeSaturationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramEqualizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.FillCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AddWeightedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MultiplyCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorReplaceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdaptiveContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ApplyMathematicalLogicCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorIntensityBalanceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ContrastBrightnessIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EdgeDetectEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <objectivec><pre>@interface LTMultiscaleEnhancementCommand : LTRasterCommand</pre></objectivec><java><pre>public class MultiscaleEnhancementCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MultiscaleEnhancementCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.#ctor(System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="contrast">Fraction of contrast enhancement applied to the image. Valid values range from 0 - 10000, which are interpreted as 0 percent - 100 percent. 
            This value is internally divided by 10000. Greater values will produce stronger contrast.</param>
      <example>
        <code lang="VB">   Public Sub MultiScaleEnhancementConstructorExample_S1()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000)
      ' Apply multiscale enhancement
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MultiScaleEnhancementConstructorExample_S1()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000);
         // Apply multiscale enhancement
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="CSWinRT">      
      public async Task MultiScaleEnhancementConstructorExample_S1()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000);
         // Apply multiscale enhancement
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MultiScaleEnhancementConstructorExample_S1(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000);
         // Apply multiscale enhancement
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MultiScaleEnhancementConstructorExample_S1(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000)
         ' Apply multiscale enhancement
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithContrast:(unsigned int)contrast;</pre>
      </objectivec>
      <java>
        <pre>public MultiscaleEnhancementCommand(int contrast)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType,Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="contrast">Fraction of contrast enhancement applied to the image. Valid values range from 0 - 10000, which are interpreted as 0 percent - 100 percent. 
            This value is internally divided by 10000. Greater values will produce stronger contrast.</param>
      <param name="type">Value that indicates the type of filter used.</param>
      <param name="flags">Flag that determines command behavior.</param>
      <example>
        <code lang="VB">   Public Sub MultiScaleEnhancementConstructorExample_S2()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)
      ' Apply multiscale enhancement
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MultiScaleEnhancementConstructorExample_S2()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="CSWinRT">      
      public async Task MultiScaleEnhancementConstructorExample_S2()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MultiScaleEnhancementConstructorExample_S2(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MultiScaleEnhancementConstructorExample_S2(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, MultiscaleEnhancementCommandType.Gaussian, _
                                                                                        MultiscaleEnhancementCommandFlags.EdgeEnhancement)
         ' Apply multiscale enhancement
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithContrast:(unsigned int)contrast 
                  type:(LTMultiscaleEnhancementCommandType)type 
                 flags:(LTMultiscaleEnhancementCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public MultiscaleEnhancementCommand(
   int contrast,
   MultiscaleEnhancementCommandType type, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandType,Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="contrast">Fraction of contrast enhancement applied to the image. Valid values range from 0 - 10000, which are interpreted as 0 percent - 100 percent. 
            This value is internally divided by 10000. Greater values will produce stronger contrast.</param>
      <param name="edgeLevels">The number of levels that will be used for edge enhancement. Valid values are from 1 to the maximum number of levels of the image. -1 will 
            use the default number of levels (which is 3). This option will take effect only if <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.EdgeEnhancement is set in the flags 
            parameter. Passing zero will return an error code.</param>
      <param name="edgeCoefficient">The edge enhancement coefficient. This value will be internally divided by 100. Pass -1 to use the default 
            values (which is 170 interpreted as 1.7). This option will be used only if EdgeEnhancment is set in the flags parameter. Any value (&gt;= 0) is valid. 
            A value of 100 will be interpreted as 1.0 and will keep the image's edges un-enhanced. Larger values will produce more visible edges. Smaller values will 
            produce less visible edges. Practically, the enhancement levels out at 200000 (interpreted as 2000.0) - values bigger than that will not enhance the image's edges any more.</param>
      <param name="latitudeLevels">The number of levels that will be used for Latitude reduction. Valid values are from 1 to maximum number of levels of the image. 
            You can also pass -1 to use the default level value (which is 5). This option will be used only if 
            the <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.LatitudeReduction is set in Flags. Passing zero will return an error code.</param>
      <param name="latitudeCoefficient">The latitude reduction coefficient. This value will be internally divided by 100. Pass -1 to use the default 
            values (which is 140 interpreted as 1.4). This option will be used only if <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.LatitudeReduction is 
            set in the flags parameter. Any value (&gt;= 0) is valid. A value of 100 will be interpreted as 1.0 and will keep the image's latitude un-enhanced. 
            Decreasing latitude makes the image brighter, increasing latitude makes the image dimmer. Practically, the enhancement levels 
            out at 200000 (interpreted as 2000,0) - values bigger than that will not decrease the image's latitude any more.</param>
      <param name="type">Value that indicates the type of filter used.</param>
      <param name="flags">Flag that determines the command behavior.</param>
      <example>
        <code lang="VB">   Public Sub MultiScaleEnhancementConstructorExample_S3()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)
      ' Apply multiscale enhancement
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MultiScaleEnhancementConstructorExample_S3()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="CSWinRT">      
      public async Task MultiScaleEnhancementConstructorExample_S3()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MultiScaleEnhancementConstructorExample_S3(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MultiscaleEnhancementCommand command = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);
         // Apply multiscale enhancement
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MultiScaleEnhancementConstructorExample_S3(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, _
                                                                                        MultiscaleEnhancementCommandFlags.EdgeEnhancement)
         ' Apply multiscale enhancement
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithContrast:(unsigned int)contrast 
            edgeLevels:(unsigned int)edgeLevels 
       edgeCoefficient:(unsigned int)edgeCoefficient 
        latitudeLevels:(unsigned int)latitudeLevels 
   latitudeCoefficient:(unsigned int)latitudeCoefficient 
                  type:(LTMultiscaleEnhancementCommandType)type 
                 flags:(LTMultiscaleEnhancementCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public MultiscaleEnhancementCommand(
   int contrast, 
   int edgeLevels, 
   int edgeCoefficient, 
   int latitudeLevels, 
   int latitudeCoefficient, 
   MultiscaleEnhancementCommandType type, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.Contrast">
      <summary>Gets or sets the fraction of contrast enhancement applied to the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Fraction of contrast enhancement applied to the image. Valid values range from 0 - 10000, which are interpreted as 0 percent - 100 percent. 
            This value is internally divided by 10000. Greater values will produce stronger contrast.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int contrast;</pre>
      </objectivec>
      <java>
        <pre>
public int getContrast()
public void setContrast(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.EdgeLevels">
      <summary>Gets or sets the number of levels that will be used for edge enhancement. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of levels that will be used for edge enhancement. Valid values are from 1 to the maximum number of levels of the 
            image. -1 will use the default number of levels (which is 3). This option will take effect only if <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.EdgeEnhancement is 
            set in the Flags property. Passing zero will return an error code.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int edgeLevels;</pre>
      </objectivec>
      <java>
        <pre>
public int getEdgeLevels()
public void setEdgeLevels(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.EdgeCoefficient">
      <summary>Gets or sets the edge enhancement coefficient. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The edge enhancement coefficient. This value will be internally divided by 100. Pass -1 to use the default values (which is 170 interpreted as 1.7). 
            This option will be used only if EdgeEnhancment is set in the Flags property. Any value (&gt;= 0) is valid. A value of 100 will be interpreted as 1.0 and will 
            keep the image's edges un-enhanced. Larger values will produce more visible edges. Smaller values will produce less visible edges. Practically, 
            the enhancement levels out at 200000 (interpreted as 2000.0) - values bigger than that will not enhance the image's edges any more.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int edgeCoefficient;</pre>
      </objectivec>
      <java>
        <pre>
public int getEdgeCoefficient()
public void setEdgeCoefficient(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.LatitudeLevels">
      <summary>Gets or sets the number of levels that will be used for Latitude reduction. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of levels that will be used for Latitude reduction. Valid values are from 1 to maximum number of levels of the image. You can also 
            pass -1 to use the default level value (which is 5). This option will be used only if <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.LatitudeReduction 
            is set in the Flags property. Passing zero will return an error code.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int latitudeLevels;</pre>
      </objectivec>
      <java>
        <pre>
public int getLatitudeLevels()
public void setLatitudeLevels(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.LatitudeCoefficient">
      <summary>Gets or sets the latitude reduction coefficient. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The latitude reduction coefficient. This value will be internally divided by 100. Pass -1 to use the default values (which is 140 interpreted as 1.4). 
            This option will be used only if <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommandFlags" />.LatitudeReduction is set in the Flags property. Any value (&gt;= 0) is valid. 
            A value of 100 will be interpreted as 1.0 and will keep the image's latitude un-enhanced. Decreasing latitude makes the image brighter, increasing latitude 
            makes the image dimmer. Practically, the enhancement levels out at 200000 (interpreted as 2000,0) - values bigger than that will not decrease the image's latitude any more.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int latitudeCoefficient;</pre>
      </objectivec>
      <java>
        <pre>
public int getLatitudeCoefficient()
public void setLatitudeCoefficient(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.Type">
      <summary>Gets or sets a value that indicates the type of filter used. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the type of filter used.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTMultiscaleEnhancementCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public MultiscaleEnhancementCommandType getType()
public void setType(MultiscaleEnhancementCommandType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand.Flags">
      <summary>Gets or sets a value that determines method behavior. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determines method behavior.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTMultiscaleEnhancementCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">
      <summary>
        <para>Flags that determine the behavior of the inverted text removal process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTInvertedTextCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum InvertedTextCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.None">
      <summary>(0x00000000)No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>None</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.UseDpi">
      <summary>(0x00000001)The unit of measure for all properties of the <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> 
            is thousandths of an inch. Use the image's DPI to convert to pixels. This allows the processing of many images 
            with different DPI. If this flag is not set, the unit of measure for all properties of the 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> is pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_UseDpi</pre>
      </objectivec>
      <java>
        <pre>USE_DPI</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.SingleRegion">
      <summary>(0x00000002)For each inverted text segment encountered by <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>, the removed inverted text is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.NoRemove</see>, 
            the inverted text is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region" /> will 
            reference a region that contains all the removed inverted text. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion" /> will be 
            updated with a shallow copy of the image that has a LEAD region that contains all of the inverted text. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all of the inverted text. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed of (either region allocated in <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_SingleRegion</pre>
      </objectivec>
      <java>
        <pre>SINGLE_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.LeadRegion">
      <summary>(0x00000004)When <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion" /> 
            is updated with a shallow copy of the Run method image that also contains a region with all the inverted text that has been removed. 
            This flag must be used in conjunction with SingleRegion. So set <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags" /> to SingleRegion | LeadRegion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_LeadRegion</pre>
      </objectivec>
      <java>
        <pre>LEAD_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.CallBackRegion">
      <summary>(0x00000008)The <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region" /> property receives a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> 
            that contains the current inverted text to be removed. Setting this flag lets users create their own composites of removed 
            inverted text by combining the regions received (if <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see>). The regions can be combined using a logical OR operator. 
            Combining all regions received when the <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus">RemoveStatus.Remove</see> results in a region identical to the region created 
            when SingleRegion is set in <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags" />. 
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />. 
            When the region received by the <see cref="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region" /> property 
            is no longer needed, dispose of it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_CallBackRegion</pre>
      </objectivec>
      <java>
        <pre>CALLBACK_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.ImageUnchanged">
      <summary>(0x00000010)The Run method image is unchanged. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_ImageUnchanged</pre>
      </objectivec>
      <java>
        <pre>IMAGE_UNCHANGED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags.UseDiagonals">
      <summary>(0x00001000)Considers pixels that are diagonal to the inverted text as part of the inverted text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTInvertedTextCommandFlags_UseDiagonals</pre>
      </objectivec>
      <java>
        <pre>USE_DIAGONALS</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs">
      <summary>Handles each inverted text segment found by <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents invertedTextCommand_S4 As InvertedTextCommand
   Public Sub InvertedTextCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      invertedTextCommand_S4 = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95)
      invertedTextCommand_S4.Run(leadImage)

   End Sub

   Private Sub InvertedTextCommand_InvertedText_S4(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs) Handles invertedTextCommand_S4.InvertedText
      Dim ee As InvertedTextCommandEventArgs = New InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
      e.Status = RemoveStatus.Remove
      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void InvertedTextCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);

      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function InvertedTextCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new InvertedTextCommand(InvertedTextCommandFlags.useDpi | InvertedTextCommandFlags.callBackRegion, 5000, 500, 70, 95);
         command.addEventListener("invertedtext", InvertedTextEvent_S4);
         command.run(image);
      }
   });
}

function InvertedTextEvent_S4(e) {
   with (Leadtools.ImageProcessing.Core) {
      var ee = new InvertedTextCommandEventArgs(e.image, e.region, e.boundingRectangle, e.whiteCount, e.blackCount);
      e.status = RemoveStatus.remove;
   }
   if (e.region != null) {
      e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task InvertedTextCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);

      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
        <code lang="SilverlightCSharp">      public void InvertedTextCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, null, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub InvertedTextCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As InvertedTextCommand = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95)
         AddHandler command.InvertedText, AddressOf InvertedTextEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub InvertedTextEvent_S4(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs)
         Dim ee As InvertedTextCommandEventArgs = New InvertedTextCommandEventArgs(e.Image, Nothing, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTInvertedTextCommandEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class InvertedTextCommandEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">
      <summary>Initializes a new InvertedTextCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the affected image.</param>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the inverted text to be removed. Dispose of this region when it is no longer needed.</param>
      <param name="boundingRectangle">The bounding rectangle of the inverted text region being processed.</param>
      <param name="whiteCount">Total number of white pixels in the inverted text region being processed.</param>
      <param name="blackCount">Total number of black pixels in the inverted text region being processed.</param>
      <example>
        <code lang="VB">   Public WithEvents invertedTextCommand_S4 As InvertedTextCommand
   Public Sub InvertedTextCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      invertedTextCommand_S4 = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95)
      invertedTextCommand_S4.Run(leadImage)

   End Sub

   Private Sub InvertedTextCommand_InvertedText_S4(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs) Handles invertedTextCommand_S4.InvertedText
      Dim ee As InvertedTextCommandEventArgs = New InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
      e.Status = RemoveStatus.Remove
      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void InvertedTextCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);

      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function InvertedTextCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new InvertedTextCommand(InvertedTextCommandFlags.useDpi | InvertedTextCommandFlags.callBackRegion, 5000, 500, 70, 95);
         command.addEventListener("invertedtext", InvertedTextEvent_S4);
         command.run(image);
      }
   });
}

function InvertedTextEvent_S4(e) {
   with (Leadtools.ImageProcessing.Core) {
      var ee = new InvertedTextCommandEventArgs(e.image, e.region, e.boundingRectangle, e.whiteCount, e.blackCount);
      e.status = RemoveStatus.remove;
   }
   if (e.region != null) {
      e.image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task InvertedTextCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);

      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, e.Region, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;

         if(e.Region != null)
         {
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
         }
      }</code>
        <code lang="SilverlightCSharp">      public void InvertedTextCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void InvertedTextEvent_S4(object sender, InvertedTextCommandEventArgs e)
      {
         InvertedTextCommandEventArgs ee = new InvertedTextCommandEventArgs(e.Image, null, e.BoundingRectangle, e.WhiteCount, e.BlackCount);
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub InvertedTextCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As InvertedTextCommand = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.CallBackRegion, 5000, 500, 70, 95)
         AddHandler command.InvertedText, AddressOf InvertedTextEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub InvertedTextEvent_S4(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs)
         Dim ee As InvertedTextCommandEventArgs = New InvertedTextCommandEventArgs(e.Image, Nothing, e.BoundingRectangle, e.WhiteCount, e.BlackCount)
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithImage:(LTRasterImage*)image 
             region:(LTRasterRegion*)region 
  boundingRectangle:(LeadRect)boundingRectangle 
         whiteCount:(int)whiteCount 
         blackCount:(int)blackCount;            </pre>
      </objectivec>
      <java>
        <pre>
public InvertedTextCommandEvent(
   Object source, 
   RasterImage image, 
   RasterRegion region, 
   LeadRect boundingRectangle, 
   int whiteCount, 
   int blackCount
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Image">
      <summary>Gets an <see cref="T:Leadtools.RasterImage" /> object that references the affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> object that references the affected image.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">InvertedTextCommandEventArgs(RasterImage, Region, LeadRect, int, int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Region">
      <summary>Gets a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the inverted text to be removed. Dispose of this region when it is no longer needed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the inverted text to be removed. Dispose of this region when it is no longer needed.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterRegion,Leadtools.LeadRect,System.Int32,System.Int32)">InvertedTextCommandEventArgs(RasterImage, Region, LeadRect, int, int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.BoundingRectangle">
      <summary>Gets a rectangular structure that contains the bounding rectangle of the inverted text region being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bounding rectangle of the inverted text region being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LeadRect boundingRectangle;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getBoundingRectangle()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.WhiteCount">
      <summary>Gets the total number of white pixels in the inverted text region being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Total number of white pixels in the inverted text region being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int whiteCount;</pre>
      </objectivec>
      <java>
        <pre>public int getWhiteCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.BlackCount">
      <summary>Gets the total number of black pixels in the inverted text region being processed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Total number of black pixels in the inverted text region being processed.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int blackCount;</pre>
      </objectivec>
      <java>
        <pre>public int getBlackCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs.Status">
      <summary>Gets or sets the status of the inverted text process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the status of the inverted text process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRemoveStatus status;</pre>
      </objectivec>
      <java>
        <pre>
public RemoveStatus getStatus()
public void setStatus(RemoveStatus value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.InvertedTextCommand">
      <summary>Finds and modifies areas of inverted text in a 1-bit black and white image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Document cleanup|Inverting text|Inverting|Cleanup|1-bit images|Inverting text</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description> This command finds and modifies areas of inverted text that are common in scanned text documents. Below is an example of inverted text:   
            <br><img src="Invert1.jpg" /></br><br>Modifying the area of inverted text yields the following:</br><br><img src="Invert2.jpg" /></br></description>
          </item>
          <item>
            <description>The behavior of this command can be modified by using an Event Handler that handles the  <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandEventArgs" />. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this method.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public WithEvents invertedTextCommand_S1 As InvertedTextCommand
   Public Sub InvertedTextCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      invertedTextCommand_S1 = New InvertedTextCommand
      invertedTextCommand_S1.Flags = InvertedTextCommandFlags.UseDpi
      invertedTextCommand_S1.MaximumBlackPercent = 95
      invertedTextCommand_S1.MinimumBlackPercent = 70
      invertedTextCommand_S1.MinimumInvertHeight = 500
      invertedTextCommand_S1.MinimumInvertWidth = 5000

      invertedTextCommand_S1.Run(leadImage)

   End Sub

   Private Sub InvertedTextCommand_InvertedText_S1(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs) Handles invertedTextCommand_S1.InvertedText
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
               Chr(13) + " Black Count " + e.BlackCount.ToString() + _
               Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void InvertedTextCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText  += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S1);
         command.Flags         = InvertedTextCommandFlags.UseDpi;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;

         command.Run(image);

      }

      private void InvertedTextEvent_S1(object sender, InvertedTextCommandEventArgs e)
      {

         MessageBox.Show("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function InvertedTextCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new InvertedTextCommand();
         command.addEventListener("invertedtext", InvertedTextEvent_S1);
         command.flags = InvertedTextCommandFlags.useDpi;
         command.maximumBlackPercent = 95;
         command.minimumBlackPercent = 70;
         command.minimumInvertHeight = 500;
         command.minimumInvertWidth = 5000;

         command.run(image);
      }
   });
}

function InvertedTextEvent_S1(e) {
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task InvertedTextCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText  += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S1);
         command.Flags         = InvertedTextCommandFlags.UseDpi;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;

         command.Run(image);

      }

      private void InvertedTextEvent_S1(object sender, InvertedTextCommandEventArgs e)
      {

         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void InvertedTextCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText  += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S1);
         command.Flags         = InvertedTextCommandFlags.UseDpi;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void InvertedTextEvent_S1(object sender, InvertedTextCommandEventArgs e)
      {

         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub InvertedTextCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As InvertedTextCommand = New InvertedTextCommand()
         AddHandler command.InvertedText, AddressOf InvertedTextEvent_S1
         command.Flags = InvertedTextCommandFlags.UseDpi
         command.MaximumBlackPercent = 95
         command.MinimumBlackPercent = 70
         command.MinimumInvertHeight = 500
         command.MinimumInvertWidth = 5000
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub InvertedTextEvent_S1(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs)

         Debug.WriteLine("Size " &amp; "( " &amp; e.BoundingRectangle.Left &amp; ", " &amp; e.BoundingRectangle.Top &amp; ") - " &amp; "( " &amp; e.BoundingRectangle.Right &amp; ", " _
                         &amp; e.BoundingRectangle.Bottom &amp; ")" &amp; Constants.vbLf &amp; " Black Count " &amp; e.BlackCount.ToString() &amp; Constants.vbLf &amp; _
                         " White Count " &amp; e.WhiteCount.ToString())
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <objectivec><pre>@interface LTInvertedTextCommand : LTRasterCommand</pre></objectivec><java><pre>public class InvertedTextCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor">
      <summary>Initializes a new InvertedTextCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public InvertedTextCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor(Leadtools.ImageProcessing.Core.InvertedTextCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new InvertedTextCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flags that determine the behavior of the inverted text removal process.</param>
      <param name="minimumInvertWidth">The minimum width of an area that is considered to be inverted text. If the 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="minimumInvertHeight">The minimum height of an area that is considered to be inverted text. 
            If the <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see> flag is set, 
            units are in thousandths of an inch, otherwise units are in pixels.</param>
      <param name="minimumBlackPercent">The minimum percent of total pixels in an inverted text area that must be black. 
            Areas with a lower percent of black pixels are not considered.</param>
      <param name="maximumBlackPercent">The maximum percent of total pixels in an inverted text area that must be black. 
            Areas with a higher percent of black pixels are not considered.</param>
      <example>
        <code lang="VB">   Public WithEvents invertedTextCommand_S2 As InvertedTextCommand
   Public Sub InvertedTextConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      invertedTextCommand_S2 = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi, 5000, 500, 70, 95)
      invertedTextCommand_S2.Run(leadImage)

   End Sub

   Private Sub InvertedTextCommand_InvertedText_S2(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs) Handles invertedTextCommand_S2.InvertedText
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
         Chr(13) + " Black Count " + e.BlackCount.ToString() + _
         Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void InvertedTextConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S2);
         command.Run(image);

      }

      private void InvertedTextEvent_S2(object sender, InvertedTextCommandEventArgs e)
      {
         MessageBox.Show("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function InvertedTextConstructorExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new InvertedTextCommand(InvertedTextCommandFlags.useDpi, 5000, 500, 70, 95);
         command.addEventListener("invertedtext", InvertedTextEvent_S2);
         command.run(image);
      }
   });
}

function InvertedTextEvent_S2(e) {
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task InvertedTextConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S2);
         command.Run(image);

      }

      private void InvertedTextEvent_S2(object sender, InvertedTextCommandEventArgs e)
      {
         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void InvertedTextConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand( InvertedTextCommandFlags.UseDpi, 5000, 500, 70, 95);
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S2);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void InvertedTextEvent_S2(object sender, InvertedTextCommandEventArgs e)
      {
         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub InvertedTextConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As InvertedTextCommand = New InvertedTextCommand(InvertedTextCommandFlags.UseDpi, 5000, 500, 70, 95)
         AddHandler command.InvertedText, AddressOf InvertedTextEvent_S2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub InvertedTextEvent_S2(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs)
         Debug.WriteLine("Size " &amp; "( " &amp; e.BoundingRectangle.Left &amp; ", " &amp; e.BoundingRectangle.Top &amp; ") - " &amp; "( " &amp; e.BoundingRectangle.Right &amp; ", " _
                         &amp; e.BoundingRectangle.Bottom &amp; ")" &amp; Constants.vbLf &amp; " Black Count " &amp; e.BlackCount.ToString() &amp; Constants.vbLf &amp; " White Count " _
                         &amp; e.WhiteCount.ToString())
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTInvertedTextCommandFlags)flags 
 minimumInvertWidth:(int)minimumInvertWidth 
minimumInvertHeight:(int)minimumInvertHeight 
minimumBlackPercent:(int)minimumBlackPercent 
maximumBlackPercent:(int)maximumBlackPercent;            </pre>
      </objectivec>
      <java>
        <pre>
public InvertedTextCommand(
   int flags, 
   int minimumInvertWidth, 
   int minimumInvertHeight, 
   int minimumBlackPercent, 
   int maximumBlackPercent
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Flags">
      <summary>Gets or sets flags that determine the behavior of the inverted text removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determines the behavior of the inverted text removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTInvertedTextCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumInvertWidth">
      <summary>Gets or sets the minimum width of an area that is considered to be inverted text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum width of an area that is considered to be inverted text. If  
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see> is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumInvertedWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumInvertWidth()
public void setMinimumInvertWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumInvertHeight">
      <summary>Gets or sets the minimum height of an area that is considered to be inverted text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum height of an area that is considered to be inverted text. 
            If <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.UseDpi</see> is set in the Flags property, 
            units are in thousandths of an inch, otherwise units are in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumInvertedHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumInvertHeight()
public void setMinimumInvertHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MinimumBlackPercent">
      <summary>Gets or sets the minimum percent of total pixels in an inverted text area that must be black. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The minimum percent of total pixels in an inverted text area that must be black. 
            Areas with a lower percent of black pixels are not considered.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int minimumBlackPercent;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinimumBlackPercent()
public void setMinimumBlackPercent(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.MaximumBlackPercent">
      <summary>Gets or sets the maximum percent of total pixels in an inverted text area that must be black. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum percent of total pixels in an inverted text area that must be black. 
            Areas with a higher percent of black pixels are not considered.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int maximumBlackPercent;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaximumBlackPercent()
public void setMaximumBlackPercent(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.Region">
      <summary>Gets the handle to a windows region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Handle to a windows region.</value>
      <remarks>
            When <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> returns, 
            this property is updated with a single LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> corresponding to all changes, only if <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see> has been set in the Flags property and <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see> has not been set. 
            To use this property, set the <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see> flag. 
            Dispose of this region when the region is no longer needed.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.InvertedTextCommand.#ctor(Leadtools.ImageProcessing.Core.InvertedTextCommandFlags,System.Int32,System.Int32,System.Int32,System.Int32)">InvertedTextCommand(InvertedTextCommandFlags, int,int,int,int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.InvertedTextCommand.ImageRegion">
      <summary>This property is updated with a shallow copy of the image that also has a region that contains the removed inverted text. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            A shallow copy of the image that also has a region that contains the removed inverted text.
            </value>
      <remarks>
            If <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see> has been set in the Flags property, then when 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" /> returns, this property is updated with a shallow copy of the image that 
            also has a region that contains the removed inverted text. So set the <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.SingleRegion</see>| 
            <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommandFlags">InvertedTextCommandFlags.LeadRegion</see> flags. 
            Dispose of the region when it is no longer needed.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents invertedTextCommand_S3 As InvertedTextCommand
   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      invertedTextCommand_S3 = New InvertedTextCommand
      invertedTextCommand_S3.Flags = InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.LeadRegion Or InvertedTextCommandFlags.SingleRegion
      invertedTextCommand_S3.MaximumBlackPercent = 95
      invertedTextCommand_S3.MinimumBlackPercent = 70
      invertedTextCommand_S3.MinimumInvertHeight = 500
      invertedTextCommand_S3.MinimumInvertWidth = 5000
      invertedTextCommand_S3.Run(leadImage)

   End Sub

   Private Sub InvertedTextCommand_InvertedText_S3(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs) Handles invertedTextCommand_S3.InvertedText
      MessageBox.Show("Size " + "( " + e.BoundingRectangle.Left.ToString() + ", " + e.BoundingRectangle.Top.ToString() + ") - " + "( " + e.BoundingRectangle.Right.ToString() + ", " + e.BoundingRectangle.Bottom.ToString() + ")" + _
         Chr(13) + " Black Count " + e.BlackCount.ToString() + _
         Chr(13) + " White Count " + e.WhiteCount.ToString())
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S3);
         command.Flags = InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.SingleRegion | InvertedTextCommandFlags.LeadRegion;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;
         command.Run(image);

      }

      private void InvertedTextEvent_S3(object sender, InvertedTextCommandEventArgs e)
      {
         MessageBox.Show("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new InvertedTextCommand();
         command.addEventListener("invertedtext", InvertedTextEvent_S3);
         command.flags = InvertedTextCommandFlags.useDpi | InvertedTextCommandFlags.singleRegion | InvertedTextCommandFlags.leadRegion;
         command.maximumBlackPercent = 95;
         command.minimumBlackPercent = 70;
         command.minimumInvertHeight = 500;
         command.minimumInvertWidth = 5000;
         command.run(image);
      }
   });
}

function InvertedTextEvent_S3(e) {
   console.error("Size " + "( " + e.boundingRectangle.x + ", " + e.boundingRectangle.y + ") - " + "( " + e.boundingRectangle.width + ", " + e.boundingRectangle.height + ")" +
      "\n Black Count " + e.blackCount.toString() +
      "\n White Count " + e.whiteCount.toString());
   e.status = Leadtools.ImageProcessing.Core.RemoveStatus.remove;
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S3);
         command.Flags = InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.SingleRegion | InvertedTextCommandFlags.LeadRegion;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;
         command.Run(image);

      }

      private void InvertedTextEvent_S3(object sender, InvertedTextCommandEventArgs e)
      {
         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.X + ", " + e.BoundingRectangle.Y + ") - " + "( " + e.BoundingRectangle.Width + ", " + e.BoundingRectangle.Height + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void ImageRegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         InvertedTextCommand command = new InvertedTextCommand();
         command.InvertedText += new EventHandler&lt;InvertedTextCommandEventArgs&gt;(InvertedTextEvent_S3);
         command.Flags = InvertedTextCommandFlags.UseDpi | InvertedTextCommandFlags.SingleRegion | InvertedTextCommandFlags.LeadRegion;
         command.MaximumBlackPercent = 95;
         command.MinimumBlackPercent = 70;
         command.MinimumInvertHeight = 500;
         command.MinimumInvertWidth  = 5000;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void InvertedTextEvent_S3(object sender, InvertedTextCommandEventArgs e)
      {
         Debug.WriteLine("Size "           + "( " + e.BoundingRectangle.Left + ", " + e.BoundingRectangle.Top + ") - " + "( " + e.BoundingRectangle.Right + ", " + e.BoundingRectangle.Bottom + ")" +
            "\n Black Count " + e.BlackCount.ToString() + 
            "\n White Count " + e.WhiteCount.ToString());
         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub ImageRegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As InvertedTextCommand = New InvertedTextCommand()
         AddHandler command.InvertedText, AddressOf InvertedTextEvent_S3
         command.Flags = InvertedTextCommandFlags.UseDpi Or InvertedTextCommandFlags.SingleRegion Or InvertedTextCommandFlags.LeadRegion
         command.MaximumBlackPercent = 95
         command.MinimumBlackPercent = 70
         command.MinimumInvertHeight = 500
         command.MinimumInvertWidth = 5000
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub InvertedTextEvent_S3(ByVal sender As Object, ByVal e As InvertedTextCommandEventArgs)
         Debug.WriteLine("Size " &amp; "( " &amp; e.BoundingRectangle.Left &amp; ", " &amp; e.BoundingRectangle.Top &amp; ") - " &amp; "( " &amp; e.BoundingRectangle.Right &amp; ", " _
                         &amp; e.BoundingRectangle.Bottom &amp; ")" &amp; Constants.vbLf &amp; " Black Count " &amp; e.BlackCount.ToString() &amp; Constants.vbLf &amp; " White Count " _
                         &amp; e.WhiteCount.ToString())
         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* imageRegion;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImageRegion()</pre>
      </java>
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.InvertedTextCommand.InvertedText">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, unsafe_unretained) id&lt;LTInvertedTextCommandDelegate&gt; delegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addInvertedTextCommandListener(InvertedTextCommandListener listener)
public void removeInvertedTextCommandListener(InvertedTextCommandListener listener)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags">
      <summary>Flags that indicate the data to be shown and the plotting scale.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that represent the data to be shown</td><td>Magnitude, Phase</td></tr><tr><td>Flags that represent the plotting scale. These are ignored when Phase is set</td><td>Normal, Logarithm</td></tr></table></remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.None">
      <summary>No change. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Magnitude">
      <summary>Plot harmonics magnitude data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Phase">
      <summary>Plot harmonics phase data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Normal">
      <summary>Plot harmonics magnitudes using the normal linear scale. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags.Log">
      <summary>Plot harmonics magnitudes using logarithmic scale. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ComplexHelper">
      <exclude />
      <winrt />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ComplexHelper.Create(System.Double,System.Double)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ComplexHelper.Empty">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand">
      <summary>This command is used to display the results of a Fast Fourier Transform or a Discrete Fourier analysis as an image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command converts the Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> object computed by <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> or <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> commands into an image. The resulting image may be displayed such that it shows either the frequency harmonics amplitude data or phase data. The (0,0) frequency is located in the image center, positive X harmonics in the right half and positive Y harmonics located in the lower half of the image.</description>
          </item>
          <item>
            <description>This command does not work on regions. If the image has a region the command ignores it and processes the entire image.</description>
          </item>
          <item>
            <description>The Run method image should be allocated prior to calling this command. The size of the image must be the same size as the image that was used to generate the information in the Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> object.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images. If the image is 12 and 16-bit grayscale and 48 and 64-bit color, the command will not threw an exception.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub FourierTransformDisplayCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      Dim rcRange As LeadRect = New LeadRect(0, 0, leadImage.Width - 1, leadImage.Height - 1)
      Dim DFTcommand As DiscreteFourierTransformCommand = New DiscreteFourierTransformCommand
      Dim command As FourierTransformDisplayCommand = New FourierTransformDisplayCommand

      DFTcommand.FourierTransformInformation = FTArray
      DFTcommand.Range = rcRange
      DFTcommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform _
      Or DiscreteFourierTransformCommandFlags.Gray _
      Or DiscreteFourierTransformCommandFlags.Range _
      Or DiscreteFourierTransformCommandFlags.InsideX _
      Or DiscreteFourierTransformCommandFlags.OutsideY
      ' apply DFT
      DFTcommand.Run(leadImage)

      command.Flags = FourierTransformDisplayCommandFlags.Log Or FourierTransformDisplayCommandFlags.Magnitude
      command.FourierTransformInformation = FTArray
      'plot frequency magnitude
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FourierTransformDisplayCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = new LeadRect(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand DFTcommand = new DiscreteFourierTransformCommand();
         FourierTransformDisplayCommand  command = new FourierTransformDisplayCommand();

         DFTcommand.FourierTransformInformation = FTArray;
         DFTcommand.Range = rcRange;
         DFTcommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY; 
         // apply DFT
         DFTcommand.Run(image);

         command.Flags = FourierTransformDisplayCommandFlags.Log | FourierTransformDisplayCommandFlags.Magnitude;
         command.FourierTransformInformation = FTArray;
         //plot frequency magnitude.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FourierTransformDisplayCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var FTArray = new FourierTransformInformation(image);
         var rcRange = Leadtools.LeadRectHelper.create(0, 0, image.width - 1, image.height - 1);
         var DFTcommand = new DiscreteFourierTransformCommand();
         var command = new FourierTransformDisplayCommand();
         
         DFTcommand.fourierTransformInformation = FTArray;
         DFTcommand.range = rcRange;
         DFTcommand.flags = DiscreteFourierTransformCommandFlags.discreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.gray    | 
            DiscreteFourierTransformCommandFlags.range   | 
            DiscreteFourierTransformCommandFlags.insideX | 
            DiscreteFourierTransformCommandFlags.insideY; 
         // apply DFT
         DFTcommand.run(image);
         
         command.flags = FourierTransformDisplayCommandFlags.log | FourierTransformDisplayCommandFlags.magnitude;
         command.fourierTransformInformation = FTArray;
         //plot frequency magnitude.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FourierTransformDisplayCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = LeadRectHelper.Create(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand DFTcommand = new DiscreteFourierTransformCommand();
         FourierTransformDisplayCommand  command = new FourierTransformDisplayCommand();

         DFTcommand.FourierTransformInformation = FTArray;
         DFTcommand.Range = rcRange;
         DFTcommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY; 
         // apply DFT
         DFTcommand.Run(image);

         command.Flags = FourierTransformDisplayCommandFlags.Log | FourierTransformDisplayCommandFlags.Magnitude;
         command.FourierTransformInformation = FTArray;
         //plot frequency magnitude.
         command.Run(image);

      }</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.ImageProcessing.Core.FourierTransformDisplayCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="fourierTransformInformation">
        <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> 
            object is a two-dimensional array that will hold the frequency components of the image. Its dimensions must be the same as the image dimensions.</param>
      <param name="flags">Flags that indicate the data to be shown and the plotting scale. You can use a bit-wise OR (|) to specify one flag from each group.</param>
      <example>
        <code lang="VB">   Public Sub FourierTransformDisplayConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim ftArray As FourierTransformInformation
      ftArray = New FourierTransformInformation(leadImage)
      Dim rcRange As LeadRect
      rcRange = New LeadRect(0, 0, leadImage.Width - 1, leadImage.Height - 1)
      Dim dftCommand As DiscreteFourierTransformCommand
      dftCommand = New DiscreteFourierTransformCommand
      dftCommand.FourierTransformInformation = ftArray
      dftCommand.Range = rcRange
      dftCommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform Or DiscreteFourierTransformCommandFlags.Gray Or DiscreteFourierTransformCommandFlags.Range Or DiscreteFourierTransformCommandFlags.InsideX Or DiscreteFourierTransformCommandFlags.InsideY
      ' apply DFT
      dftCommand.Run(leadImage)

      Dim command As FourierTransformDisplayCommand
      command = New FourierTransformDisplayCommand(ftArray, FourierTransformDisplayCommandFlags.Log Or FourierTransformDisplayCommandFlags.Magnitude)
      'plot frequency magnitude.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FourierTransformDisplayConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         LeadRect rcRange = new LeadRect(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand dftCommand = new DiscreteFourierTransformCommand();

         dftCommand.FourierTransformInformation = ftArray;
         dftCommand.Range = rcRange;
         dftCommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY; 
         // apply DFT
         dftCommand.Run(image);

         FourierTransformDisplayCommand command = new FourierTransformDisplayCommand(ftArray, FourierTransformDisplayCommandFlags.Log | FourierTransformDisplayCommandFlags.Magnitude);
         //plot frequency magnitude.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FourierTransformDisplayConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var ftArray = new FourierTransformInformation(image);
         var rcRange = Leadtools.LeadRectHelper.create(0, 0, image.width - 1, image.height - 1);
         var dftCommand = new DiscreteFourierTransformCommand();
                    
         dftCommand.fourierTransformInformation = ftArray;
         dftCommand.range = rcRange;
         dftCommand.flags = DiscreteFourierTransformCommandFlags.discreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.gray    | 
            DiscreteFourierTransformCommandFlags.range   | 
            DiscreteFourierTransformCommandFlags.insideX | 
            DiscreteFourierTransformCommandFlags.insideY; 
         // apply DFT
         dftCommand.run(image);
         
         var command = new FourierTransformDisplayCommand(ftArray, FourierTransformDisplayCommandFlags.log | FourierTransformDisplayCommandFlags.magnitude);
         //plot frequency magnitude.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FourierTransformDisplayConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         LeadRect rcRange = LeadRectHelper.Create(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand dftCommand = new DiscreteFourierTransformCommand();

         dftCommand.FourierTransformInformation = ftArray;
         dftCommand.Range = rcRange;
         dftCommand.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY; 
         // apply DFT
         dftCommand.Run(image);

         FourierTransformDisplayCommand command = new FourierTransformDisplayCommand(ftArray, FourierTransformDisplayCommandFlags.Log | FourierTransformDisplayCommandFlags.Magnitude);
         //plot frequency magnitude.
         command.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.Flags">
      <summary>Gets or sets flags that indicate the data to be shown and the plotting scale. You can use a bit-wise OR (|) to specify one flag from each group. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Flags that indicate the data to be shown and the plotting scale. You can use a bit-wise OR (|) to specify one flag from each group.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation">
      <summary>
        <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> structure that contains information about the transform. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> object 
            is a two-dimensional array that will hold the frequency components of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand.FourierTransformInformation" /> object is a two-dimensional array 
            that will hold the frequency components of the image. Its dimensions must be the same as the image dimensions.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DotMatrixType">
      <summary>Represents the flag that determines whether a document image is dot matrix image or not. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>enum LTDotMatrixType</pre>
      </objectivec>
      <java>
        <pre>public enum DotMatrixType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotMatrixType.DotMatrix">
      <summary>(0x00000000)Dot matrix. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotMatrixType_DotMatrix</pre>
      </objectivec>
      <java>
        <pre>DOT_MATRIX</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DotMatrixType.None">
      <summary>(0x00000001)None. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDotMatrixType_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DitheringType">
      <ibrahimBashar> Review 5 - 6 - 2012</ibrahimBashar>
      <summary>Represents the type of dithering in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>enum LTDitheringType</pre>
      </objectivec>
      <java>
        <pre>public enum DitheringType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DitheringType.TextDither">
      <summary>(0x00000001)Text Dither. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDitheringType_TextDither</pre>
      </objectivec>
      <java>
        <pre>TEXT_DITHER</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DitheringType.Undithered">
      <summary>(0x00000000)No Dither <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDitheringType_Undithered</pre>
      </objectivec>
      <java>
        <pre>UNDITHERED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DitheringType.WhiteDither">
      <summary>(0x00000002)White Dither <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTDitheringType_WhiteDither</pre>
      </objectivec>
      <java>
        <pre>WHITE_DITHER</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags">
      <summary>Indicates which color space is selected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTModalityLookupTableCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum ModalityLookupTableCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.None">
      <summary>No Flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTModalityLookupTableCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.SignedLookupTable">
      <summary>If set, the LookupTable entries are signed 16-bit values. If not set, the 
             LookupTable entries are unsigned 16-bit values.(This flag is used by the ApplyModalityLookupTableCommand 
             but not used in the ApplyLinearModalityLookupTableCommand). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTModalityLookupTableCommandFlags_SignedLookupTable</pre>
      </objectivec>
      <java>
        <pre>SIGNED_LOOKUP_TABLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.UpdateMinMax">
      <summary>Update <see cref="P:Leadtools.RasterImage.MinValue" /> with the new minimum 
             intensity value in the bitmap and <see cref="P:Leadtools.RasterImage.MaxValue" /> with the new maximum
             intensity value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTModalityLookupTableCommandFlags_UpdateMinMax</pre>
      </objectivec>
      <java>
        <pre>UPDATE_MIN_MAX</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.UseFullRange">
      <summary>For future use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTModalityLookupTableCommandFlags_UseFullRange</pre>
      </objectivec>
      <java>
        <pre>USE_FULL_RANGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ModalityLookupTableCommandFlags.AllowRangeExpansion">
      <summary>Adjust the high bit and/or low bit (if 
            possible) inside the image handle in order to be able to hold the 
            range of pixel values after applying the modality LookupTable.
            (This flag is used by ApplyLinearModalityLookupTableCommand but not used in 
            ApplyModalityLookupTableCommand). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTModalityLookupTableCommandFlags_AllowRangeExpansion</pre>
      </objectivec>
      <java>
        <pre>ALLOW_RANGE_EXPANSION</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.RemoveStatus">
      <summary>Indicates the action to take during the removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTRemoveStatus</pre>
      </objectivec>
      <java>
        <pre>public enum RemoveStatus</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.Remove">
      <summary>(0x00000001)Remove dots, hole punches, borders, etc. and continue. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTRemoveStatus_Remove</pre>
      </objectivec>
      <java>
        <pre>REMOVE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.NoRemove">
      <summary>(0x00000002)Do not remove any dots, hole punches, borders, etc. and continue. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTRemoveStatus_NoRemove</pre>
      </objectivec>
      <java>
        <pre>NO_REMOVE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.RemoveStatus.Cancel">
      <summary>(0xFFFFFF9C)Abort the removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTRemoveStatus_Cancel</pre>
      </objectivec>
      <java>
        <pre>CANCEL</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.RegistrationMarkCommandType">
      <summary>Value that specifies the type of registration mark for which to look. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            Currently, only one registration mark is defined (T-shape). More shapes will be added in the future.
            </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTRegistrationMarkCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum RegistrationMarkCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.RegistrationMarkCommandType.TShape">
      <summary>(0x00000000)T-shape registration mark. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTRegistrationMarkCommandType_TShape</pre>
      </objectivec>
      <java>
        <pre>T_SHAPE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags">
      <summary>This enumeration contains all Types needed to indicate which color space is selected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTVoiLookupTableCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum VoiLookupTableCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.None">
      <summary>No Flags <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTVoiLookupTableCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.UpdateMinMax">
      <summary>If set, the method will recalculate <see cref="P:Leadtools.RasterImage.MinValue" /> based on the 
             minimum intensity inside the image and recalculate <see cref="P:Leadtools.RasterImage.MaxValue" /> 
             based on the maximum intensity inside the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTVoiLookupTableCommandFlags_UpdateMinMax</pre>
      </objectivec>
      <java>
        <pre>UPDATE_MIN_MAX</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags.ReverseOrder">
      <summary>If set, the method will fill the image display LookupTable in reverse order 
             (light to dark instead of dark to light). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTVoiLookupTableCommandFlags_ReverseOrder</pre>
      </objectivec>
      <java>
        <pre>REVERSE_ORDER</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.TissueEqualizeCommandFlags">
      <summary>This enumeration contains the options for performing Tissue Equalization on an image <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTTissueEqualizeCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum TissueEqualizeCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.TissueEqualizeCommandFlags.UseIntensifyOption">
      <summary>Perform an intensification of the data across the image
            enhancing the quality and the visibility of the objects in  the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTTissueEqualizeCommandFlags_UseIntensifyOption</pre>
      </objectivec>
      <java>
        <pre>USE_INTENSIFY_OPTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.TissueEqualizeCommandFlags.UseSimplifyOption">
      <summary>Perform a simplification of the the data out of range in 
            the image resulting in better visibility for the image as a whole. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTTissueEqualizeCommandFlags_UseSimplifyOption</pre>
      </objectivec>
      <java>
        <pre>USE_SIMPLIFY_OPTION</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags">
      <summary>Options for manipulating the behavior of image type detection. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <remarks>
            It is used through <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> command.
            </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTImageColorTypeCommandFlags</pre>
      </objectivec>
      <java>
        <pre>ImageColorTypeCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags.FavorBlackAndWhite">
      <summary>(0x00000001)Favor black and white result. Meaning that it will more likely to return black and white as a result. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorTypeCommandFlags_FavorBlackAndWhite</pre>
      </objectivec>
      <java>
        <pre>FAVOR_BLACK_AND_WHITE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags.FavorColor">
      <summary>(0x00000001)Favor colored result. Meaning that it will more likely to return colored as a result. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorTypeCommandFlags_FavorColor</pre>
      </objectivec>
      <java>
        <pre>FAVOR_COLOR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags.FavorGrayScale">
      <summary>(0x00000002)Favor grayscale result. Meaning that it will more likely to return gray scale as a result. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorTypeCommandFlags_FavorGrayScale</pre>
      </objectivec>
      <java>
        <pre>FAVOR_GRAY_SCALE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags.None">
      <summary>(0x00000000)Nothing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorTypeCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ImageColorType">
      <summary>This enumeration contains the various types that can be returned as a result to the image color type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <remarks>
            It is used through <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> command.
            </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTImageColorType</pre>
      </objectivec>
      <java>
        <pre>public enum ImageColorType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorType.BlackAndWhite">
      <summary>(0x00000001)The image is black and white. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorType_BlackAndWhite</pre>
      </objectivec>
      <java>
        <pre>BLACK_AND_WHITE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorType.Color">
      <summary>(0x00000003)The image is color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorType_Color</pre>
      </objectivec>
      <java>
        <pre>COLOR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorType.GrayScale">
      <summary>(0x00000002)The image is grayscale. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorType_GrayScale</pre>
      </objectivec>
      <java>
        <pre>GRAYSCALE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ImageColorType.None">
      <summary>(0x00000000)No data is provided. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <objectivec>
        <pre>LTImageColorType_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BarcodeTypes">
      <summary>Indicates the type of detected barcode in an image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
            This command can detect various types of barcodes, including: Linear, QR, and Data matrix.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarcodeTypes.DataMatrixBarcode">
      <summary>Data matrix barcode. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarcodeTypes.LinearBarcode">
      <summary>(0x00000001)linear barcode <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarcodeTypes.QRBarcode">
      <summary>(0x00000002)QR barcode <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarcodeTypes.UnKown">
      <summary>(0x00000000)unknown barcode <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessOptions">
      <summary>Indicates the binarization method used for converting the image to black and white. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
            Using the default flag detects the best binarization methods for the detected barcode.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessOptions.UseAutoDocumentBinarization">
      <summary>use the document image binarization. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessOptions.UseDefault">
      <summary>uses the best method for the detected barcode. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType">
      <summary>Flag that indicates how to process bits outside the low bit to high bit range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTConvertUnsignedToSignedCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum ConvertUnsignedToSignedCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType.ProcessRangeOnly">
      <summary>(0x00000001)Shift data by adding half the range to each pixel without changing bits
            outside the lowbit to highbit range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertUnsignedToSignedCommandType_ProcessRangeOnly</pre>
      </objectivec>
      <java>
        <pre>PROCESS_RANGE_ONLY</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType.ProcessOutSideRange">
      <summary>(0x00000002)Shift data by adding half the range to each pixel and set to zero all
             bits outside the lowbit to highbit range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTConvertUnsignedToSignedCommandType_ProcessOutSideRange</pre>
      </objectivec>
      <java>
        <pre>PROCESS_OUTSIDE_RANGE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand">
      <summary>Converts an unsigned image to signed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This class updates the minimum and maximum values of the image
            with new values that consider the image's new signed values.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale images. Support for 12 and 16-bit grayscale images is available only in 
            the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub ConvertUnsignedToSignedCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ConvertUnsignedToSignedCommand = New ConvertUnsignedToSignedCommand
      command.Type = ConvertUnsignedToSignedCommandType.ProcessRangeOnly
      'convert image to signed.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ConvertUnsignedToSignedCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand();
         command.Type   = ConvertUnsignedToSignedCommandType.ProcessRangeOnly;
         //convert image to signed.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ConvertUnsignedToSignedCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ConvertUnsignedToSignedCommand();
         command.type   = ConvertUnsignedToSignedCommandType.processRangeOnly;
         //convert image to signed.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ConvertUnsignedToSignedCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand();
         command.Type   = ConvertUnsignedToSignedCommandType.ProcessRangeOnly;
         //convert image to signed.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ConvertUnsignedToSignedCommandExample(RasterImage image)
      {
         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand();
         command.Type   = ConvertUnsignedToSignedCommandType.ProcessRangeOnly;
         //convert image to signed.
         command.Run(image);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ConvertUnsignedToSignedCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As ConvertUnsignedToSignedCommand = New ConvertUnsignedToSignedCommand()
         command.Type = ConvertUnsignedToSignedCommandType.ProcessRangeOnly
         'convert image to signed.
         command.Run(image)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>.
            <objectivec><pre>@interface LTConvertUnsignedToSignedCommand : LTRasterCommand</pre></objectivec><java><pre>public class ConvertUnsignedToSignedCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.#ctor">
      <summary>Initializes a new ConvertUnsignedToSignedCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ConvertUnsignedToSignedCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.#ctor(Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommandType)">
      <summary>Initializes a new ConvertUnsignedToSignedCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="type">Flag that indicates how to process bits outside
            the low bit to high bit range.</param>
      <example>
        <code lang="VB">   Public Sub ConvertUnsignedToSignedConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As ConvertUnsignedToSignedCommand = New ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.ProcessRangeOnly)
      'convert image to signed.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ConvertUnsignedToSignedConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.ProcessRangeOnly);
         //convert image to signed.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ConvertUnsignedToSignedConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.processRangeOnly);
         //convert image to signed.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ConvertUnsignedToSignedConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.ProcessRangeOnly);
         //convert image to signed.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ConvertUnsignedToSignedConstructorExample(RasterImage image)
      {
         // Prepare the command
         ConvertUnsignedToSignedCommand command = new ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.ProcessRangeOnly);
         //convert image to signed.
         command.Run(image);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ConvertUnsignedToSignedConstructorExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As ConvertUnsignedToSignedCommand = New ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType.ProcessRangeOnly)
         'convert image to signed.
         command.Run(image)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithType:(LTConvertUnsignedToSignedCommandType)type;</pre>
      </objectivec>
      <java>
        <pre>public ConvertUnsignedToSignedCommand(ConvertUnsignedToSignedCommandType type)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand.Type">
      <summary>Gets or sets values that indicate how to process bits outside the low bit to 
            high bit range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Values that indicate how to process bits outside the low 
            bit to high bit range.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTConvertUnsignedToSignedCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public ConvertUnsignedToSignedCommandType getType()
public void setType(ConvertUnsignedToSignedCommandType value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand">
      <summary>Detects the type of the barcode in the image, and binarizes (make it black and white) the image in preparation for the recognition process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <noremarks />
      <example>
        <code lang="VB">
Leadtools.ImageProcessing.Core.BarcodeExample 
      Public Sub BarcodeExampleCommandExample()
       ' Load an image
       Dim Codecs As RasterCodecs = New RasterCodecs()
       Codecs.ThrowExceptionsOnInvalidImages = True

       Dim image As RasterImage = Codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "\MIXED.tif"))

       Dim command As BarCodeReadPreprocessCommand = New BarCodeReadPreprocessCommand()
       command.Options = BarcodeBinarizationOptions.UseAutoDocumentBinarization
       command.Run(image)

       MessageBox.Show("Barcode type is:" &amp; command.BarcodeType &amp; "\n" &amp; "Barcode location is: (" &amp; command.BarcodeLocation.Left.ToString() &amp; ", " &amp; command.BarcodeLocation.Top.ToString() &amp; ", " &amp; command.BarcodeLocation.Right.ToString() &amp; ", " &amp; command.BarcodeLocation.Bottom.ToString() &amp; ", ")
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">
Leadtools.ImageProcessing.Core.BarcodeExample 
     public void BarcodeExampleCommandExample()
     {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"MIXED.tif"), 24, CodecsLoadByteOrder.BgrOrGrayOrRomm, 1, 1);

         BarCodeReadPreprocessCommand command = new BarCodeReadPreprocessCommand();
         command.Options = BarcodeBinarizationOptions.UseAutoDocumentBinarization;
         command.Run(image);


         MessageBox.Show("Barcode type is:" + command.BarcodeType + "\n" + "Barcode location is: (" + command.BarcodeLocation.Left.ToString() + ", " + command.BarcodeLocation.Top.ToString() + ", " + command.BarcodeLocation.Right.ToString() + ", " + command.BarcodeLocation.Bottom .ToString()+ ", ");
     }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
      </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.ToString">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.BarcodeType">
      <summary>Gets the value that represents the type of the barcode. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
            A <see cref="T:Leadtools.ImageProcessing.Core.BarcodeTypes" /> enumeration value that represents the type of the barcode detected.
            </value>
      <remarks>
            This command can detect various types of barcode, including: Linear barcode, QR, and Data matrix.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.BarcodeLocation">
      <summary>Gets the value that represents the location of the barcode in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.LeadRect" /> object that represents the location of the barcode in the image.
            </value>
      <remarks>
            If the image doesn't contain a barcode, then the returned rectangle will contain the image dimensions.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand.Options">
      <summary>Gets or set the binarization method used to convert the image to black and white. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessOptions" /> object that represents the binarization method used to convert the image to black and white.
            </value>
      <remarks>
            Using the default flag detects the best binarization methods to use for the detected barcode.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.BarCodeReadPreprocessCommand" /></example>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoSegmentCommand">
      <summary>Performs automated segmentation of a rectangular area in the image specified by the user. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <para>
            The result is applied to the image as a region. This function was designed specifically for CT/MRI images, to segment regions of cancer clusters.
            </para>
        <list type="bullet">
          <item>
            <description>Use <see cref="M:Leadtools.RasterImage.MakeRegionEmpty" /> to delete the resulting region.</description>
          </item>
          <item>
            <description>The rectangle must not exceed the borders of the image or the function will return an ERROR_INVALID_PARAMETER error and will not execute.
            This function is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub AutoSegmentCommandExamples()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE3.dcm"))

      ' Prepare the command
      Dim command As AutoSegmentCommand = New AutoSegmentCommand
      'Apply 
      command.SegementationRectangle = New LeadRect(194, 161, 111, 153)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void AutoSegmentCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE3.dcm"));

            // Prepare the command
            AutoSegmentCommand command = new AutoSegmentCommand();
            command.SegementationRectangle = new LeadRect(194, 161, 111, 153);
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoSegmentCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE3.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new AutoSegmentCommand();
         command.segementationRectangle = Leadtools.LeadRectHelper.create(194, 161, 111, 153);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task AutoSegmentCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\IMAGE3.dcm";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            AutoSegmentCommand command = new AutoSegmentCommand();
            command.SegementationRectangle = LeadRectHelper.Create(194, 161, 111, 153);
            command.Run(image);

        }</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeIntensityCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.StretchIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeSaturationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramEqualizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.HistogramContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.GaussianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoSegmentCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoSegmentCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoSegmentCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoSegmentCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoSegmentCommand.#ctor(Leadtools.LeadRect)">
      <summary>Initializes a new AutoSegmentCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="rect">
            The Segmentation rectangle surrounding the object to be segmented
            </param>
      <example>
        <code lang="VB">   Public Sub AutoSegmentConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE3.dcm"))


      Dim command As AutoSegmentCommand = New AutoSegmentCommand(New LeadRect(194, 161, 111, 153))
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void AutoSegmentConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE3.dcm"));

            // Prepare the command
            // Apply 
            AutoSegmentCommand command = new AutoSegmentCommand(new LeadRect(194, 161, 111, 153));
            command.Run(image);

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function AutoSegmentConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE3.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new AutoSegmentCommand(Leadtools.LeadRectHelper.create(194, 161, 111, 153));
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">        
        public async Task AutoSegmentConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;
            // Load the image
            string srcFileName = @"Assets\IMAGE3.dcm";
            StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
            RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

            // Prepare the command
            // Apply 
            AutoSegmentCommand command = new AutoSegmentCommand(LeadRectHelper.Create(194, 161, 111, 153));
            command.Run(image);

        }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoSegmentCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoSegmentCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.AutoSegmentCommand.SegementationRectangle">
      <summary>Gets or sets the Segmentation rectangle. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>A rectangle that surrounds the object to be segmented.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoSegmentCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand">
      <summary>This class automatically detects and remove strait lines from the document images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <remarks>
            The line has to be a straight in order to be detected and removed by the algorithm, if you want to detect a non straight lines, please refer to <see cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand" />.
            </remarks>
      <example>
      </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand" /></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.AutoLineRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand">
      <summary>Sets up the paint or paint and image processing methods' window leveling
             options for a specific image through a lookup-table (LookupTable).
             This class is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This class sets up the paint or paint and image 
             processing methods' window leveling options for a specific image through
             a lookup-table (LookupTable).  In the DICOM world, this is referred to as 
             "applying a non-linear VOI LookupTable". </description>
          </item>
          <item>
            <description>This class will remap the LookupTable used to display and 
             process an image by applying a user-defined lookup table.  In the DICOM 
             world this is referred to as applying a "non-linear VOI LookupTable". The DICOM 
             standard states: </description>
          </item>
          <item>
            <description>"A VOI LookupTable defines the transformation of the modality
             pixel values into pixel values that are meaningful for print, display, 
             etc. This transformation is applied after any Modality LookupTable". Please see 
             "VOI LookupTable Module Attributes" in the DICOM standard for more details.</description>
          </item>
          <item>
            <description>This class does not change the image data; it only 
             updates the entries inside the image display LookupTable.</description>
          </item>
          <item>
            <description>The value is remapped according to the LookupTable (values smaller 
             than FirstStoredPixelValueMapped (property of the DicomLookupTableDescriptor class)
             are mapped to the first LookupTable entry, while values greater than FirstStoredPixelValueMapped 
             (property of the DicomLookupTableDescriptor class) + LookupTable-&gt;Length are 
             mapped to the last LookupTable entry).</description>
          </item>
          <item>
            <description>It is recommended to always set the <see cref="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags" /> flag.</description>
          </item>
          <item>
            <description>In the DICOM world you will need to set the <see cref="T:Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags" />
             flag if the photometric interpretation of the image is "MONOCHROME1", 
             where the minimum grayscale value is intended to be displayed as white 
             after any VOI gray scale transformations have been performed.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
             For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
             <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
             command will fail if the image data for the RasterImage object is stored internally
              using a Silverlight WriteableBitmap object.  For more information,
             refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub ApplyVoiLookupTableCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim i As Integer
      Dim pLookupTable() As Short
      ReDim pLookupTable(65536)
      Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor

      For i = 0 To 65536

         If (i &lt; 30) Then
            pLookupTable(i) = 0

         Else
            If (i &gt; 630) Then
               pLookupTable(i) = 630
            Else
               pLookupTable(i) = CType(i, Int16)
            End If

         End If

      Next

      ' fill the LookupTableDescriptor object
      LookupTableDescriptor.FirstStoredPixelValueMapped = 0
      LookupTableDescriptor.EntryBits = 16

      Dim command As ApplyVoiLookupTableCommand = New ApplyVoiLookupTableCommand
      command.Flags = VoiLookupTableCommandFlags.None
      command.LookupTable = pLookupTable
      command.LookupTableDescriptor = LookupTableDescriptor
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30) 
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630) 
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand();
         command.Flags                      = VoiLookupTableCommandFlags.None;
         command.LookupTable                = pLookupTable;
         command.LookupTableDescriptor      = LookupTableDescriptor;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyVoiLookupTableCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var i; 
         var pLookupTable = new Array();; 
         var LookupTableDescriptor = new DicomLookupTableDescriptor();
         
         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30) 
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630) 
                  pLookupTable[i] = 630;
               else
                  pLookupTable[i] = parseInt(i);
         }
         
         // fill the LookupTableDescriptor object
         LookupTableDescriptor.firstStoredPixelValueMapped = 0;
         LookupTableDescriptor.entryBits = 16;
         
         var command = new ApplyVoiLookupTableCommand();
         command.flags = VoiLookupTableCommandFlags.none;
         command.lookupTable = pLookupTable;
         command.lookupTableDescriptor = LookupTableDescriptor;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int                i; 
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30) 
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630) 
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand();
         command.Flags                      = VoiLookupTableCommandFlags.None;
         command.LookupTable                = pLookupTable;
         command.LookupTableDescriptor      = LookupTableDescriptor;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyVoiLookupTableCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int i;
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();
         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30) 
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630) 
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand();
         command.Flags                      = VoiLookupTableCommandFlags.None;
         command.LookupTable                = pLookupTable;
         command.LookupTableDescriptor      = LookupTableDescriptor;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyVoiLookupTableCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim i As Integer
         Dim pLookupTable As Short() = New Short(&amp;H10000 - 1){}
         Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor()
         i = 0
         Do While i &lt; &amp;H10000
            If i &lt; 30 Then
               pLookupTable(i) = 0
            Else
               If i &gt; 630 Then
               pLookupTable(i) = 630
            Else
               pLookupTable(i) = CShort(i)
            End If
            End If
            i += 1
         Loop

         ' fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0
         LookupTableDescriptor.EntryBits = 16

         Dim command As ApplyVoiLookupTableCommand = New ApplyVoiLookupTableCommand()
         command.Flags = VoiLookupTableCommandFlags.None
         command.LookupTable = pLookupTable
         command.LookupTableDescriptor = LookupTableDescriptor
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.   
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyModalityLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearModalityLookupTableCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
             <seealso cref="T:Leadtools.ImageProcessing.Color.GammaCorrectExtendedCommand"></seealso>.
             <objectivec><pre>@interface LTApplyVoiLookupTableCommand : LTRasterCommand</pre></objectivec><java><pre>public class ApplyVoiLookupTableCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.#ctor">
      <summary>Initializes a new ApplyVoiLookupTableCommand with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ApplyVoiLookupTableCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.#ctor(Leadtools.ImageProcessing.Core.DicomLookupTableDescriptor,System.Int16[],Leadtools.ImageProcessing.Core.VoiLookupTableCommandFlags)">
      <summary>Initializes a new ApplyVoiLookupTableCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="lookupTableDescriptor">Structure describing the LookupTable. The following members 
             are used:
             <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>FirstStoredPixelValueMapped</td><td>Indicates the first index whose remapped value is stored in 
                  the LookupTable. All image display LookupTable entries which are less than this 
                  value will be remapped to LookupTable[0].</td></tr></table></param>
      <param name="lookupTable">Array of short values which contains the lookup table.
             Its length determines the number of entries. All the pixels that are 
             greater than FirstStoredPixelValueMapped + (LookupTable-&gt;Length)
             will be set to the last entry in the LookupTable (LookupTable[LookupTable-&gt;Length - 1]).</param>
      <param name="flags">Flags that determine the behavior of this 
             method. These flags can be OR-ed together.</param>
      <example>
        <code lang="VB">   Public Sub ApplyVoiLookupTableConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim i As Integer
      Dim pLookupTable() As Short
      ReDim pLookupTable(65536)
      Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor

      For i = 0 To 65536
         If (i &lt; 30) Then
            pLookupTable(i) = 0
         Else
            If (i &gt; 630) Then
               pLookupTable(i) = 630
            Else
               pLookupTable(i) = CType(i, Int16)
            End If
         End If
      Next

      ' fill the LookupTableDescriptor object
      LookupTableDescriptor.FirstStoredPixelValueMapped = 0
      LookupTableDescriptor.EntryBits = 16

      Dim command As ApplyVoiLookupTableCommand = New ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ApplyVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         int i;
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30)
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630)
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // Fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ApplyVoiLookupTableConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Prepare the command
         var i; 
         var pLookupTable = new Array();; 
         var LookupTableDescriptor = new DicomLookupTableDescriptor();
         
         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30) 
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630) 
                  pLookupTable[i] = 630;
               else
                  pLookupTable[i] = parseInt(i);
         }
         
         // fill the LookupTableDescriptor object
         LookupTableDescriptor.firstStoredPixelValueMapped = 0;
         LookupTableDescriptor.entryBits = 16;
         
         var command = new ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ApplyVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int i;
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();

         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30)
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630)
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // Fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ApplyVoiLookupTableConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int i;
         short[] pLookupTable = new short[0x10000];
         DicomLookupTableDescriptor LookupTableDescriptor = new DicomLookupTableDescriptor();
         for(i = 0; i &lt; 0x10000; i++)
         {
            if(i &lt; 30)
            {
               pLookupTable[i] = 0;
            }
            else
               if(i &gt; 630)
               pLookupTable[i] = 630;
            else
               pLookupTable[i] = (short)i;
         }

         // Fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0;
         LookupTableDescriptor.EntryBits = 16;

         ApplyVoiLookupTableCommand command = new ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None);
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ApplyVoiLookupTableConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim i As Integer
         Dim pLookupTable As Short() = New Short(&amp;H10000 - 1){}
         Dim LookupTableDescriptor As DicomLookupTableDescriptor = New DicomLookupTableDescriptor()
         i = 0
         Do While i &lt; &amp;H10000
            If i &lt; 30 Then
               pLookupTable(i) = 0
            Else
               If i &gt; 630 Then
               pLookupTable(i) = 630
            Else
               pLookupTable(i) = CShort(i)
            End If
            End If
            i += 1
         Loop

         ' Fill the LookupTableDescriptor object
         LookupTableDescriptor.FirstStoredPixelValueMapped = 0
         LookupTableDescriptor.EntryBits = 16

         Dim command As ApplyVoiLookupTableCommand = New ApplyVoiLookupTableCommand(LookupTableDescriptor, pLookupTable, VoiLookupTableCommandFlags.None)
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithLookupTableDescriptor:(LTDicomLookupTableDescriptor*)lookupTableDescriptor 
                        lookupTable:(const unsigned short*)lookupTable 
                  lookupTableLength:(unsigned int)lookupTableLength 
                              flags:(LTVoiLookupTableCommandFlags)flags;             </pre>
      </objectivec>
      <java>
        <pre>
public ApplyVoiLookupTableCommand(
   DicomLookupTableDescriptor lookupTableDescriptor, 
   int[] lookupTable, 
   int flags
)             </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.LookupTableDescriptor">
      <summary>Structure describing the LookupTable. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Structure describing the LookupTable. The following members 
            are used:
            <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>FirstStoredPixelValueMapped</td><td>Indicates the first index whose remapped value is stored in 
                 the LookupTable. All image display LookupTable entries which are less than this 
                 value will be remapped to LookupTable[0].</td></tr></table></value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTDicomLookupTableDescriptor* lookupTableDescriptor;</pre>
      </objectivec>
      <java>
        <pre>
public DicomLookupTableDescriptor getLookupTableDescriptor()
public void setLookupTableDescriptor(DicomLookupTableDescriptor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.LookupTable">
      <summary>Array of short values which contains the lookup table. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Array of short values which contains the lookup table.
            Its length determines the number of entries. All the pixels that are 
            greater than FirstStoredPixelValueMapped + (LookupTable-&gt;Length)
            will be set to the last entry in the LookupTable (LookupTable[LookupTable-&gt;Length - 1]).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) const unsigned short* lookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public int[] getLookupTable()
public void setLookupTable(int[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.lookupTableLength_objectivec">
      <summary>Get or set the length of lookupTable <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the length of the array in lookupTable property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int lookupTableLength;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand.Flags">
      <summary>Flags that determine the behavior of the command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that determine the behavior of this method. These flags 
            can be OR-ed together.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTVoiLookupTableCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.Junk.IBuffer">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IBuffer.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IStorageFile">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IStorageFile.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IInputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IInputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IOutputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IOutputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.InMemoryRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.InMemoryRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.WriteOnlyArray`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.WriteOnlyArray`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IVector`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IVector`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.WindowLevelCommand">
      <summary>Converts a 12 or 16-bit grayscale image to an 8-bit grayscale or a 24-bit RGB image.<br />
            This class is available in <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> toolkits only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command supports 12 and 16-bit grayscale. Support for 12 and 16-bit grayscale images is available only 
            in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.RasterByteOrder" />.Romm and <see cref="T:Leadtools.RasterByteOrder" />.Gray are not 
            supported by this command.</description>
          </item>
        </list>
            Only TIFF and DICOM file formats are capable of saving images that have been window-leveled.
            Images can be window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /> and specifying 
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the <b>flags</b>
            parameter, by using the <b>WindowLevelCommand</b> or by loading an image from a file format that supports Window Leveling. If a window-leveled 
            image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.<br />
            See <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelExtCommand" /> for a version of this class using 16-bit lookup tables.<br />
            LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub WindowLevelCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      'Change the image to 16-bit grayscale
      Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
      Dim command As WindowLevelCommand = New WindowLevelCommand
      graycommand.Run(leadImage)

      Dim minValue As Integer = leadImage.MinValue
      Dim maxValue As Integer = leadImage.MaxValue
      Dim minBit As Integer = leadImage.LowBit
      Dim maxBit As Integer = leadImage.HighBit

      Dim Size As Integer = (1 &lt;&lt; (maxBit - minBit + 1))
      Dim LookupTable() As RasterColor
      ReDim LookupTable(Size - 1)

      ' fill the first half of the LookupTable with RED.
      Dim x As Integer
      For x = 0 To Size \ 2 - 1
         LookupTable(x) = New RasterColor(255, 0, 0)
      Next

      ' fill the rest with gray values.
      For x = Size \ 2 To Size - 1
         Dim y As Byte = Convert.ToByte((x - minValue) * 255 / (maxValue - minValue))
         LookupTable(x) = New RasterColor(y, y, y)
      Next

      command.HighBit = maxBit
      command.LowBit = minBit

      command.LookupTable = LookupTable
      command.Order = RasterByteOrder.Bgr
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void WindowLevelCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         int x;
         byte y;
         int Size;
         RasterColor [] LookupTable;

         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelCommand command = new WindowLevelCommand();

         graycommand.Run(image);
         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for(x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new Leadtools.RasterColor(255, 0, 0);

         // fill the rest with gray values.
         for(x = Size / 2; x &lt; Size; x++)
         {
            y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new Leadtools.RasterColor(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit  = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function WindowLevelCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var x;
         var y;
         var Size;
         var LookupTable = new Array();

         //Change the image to 16-bit grayscale
         var graycommand = new Leadtools.ImageProcessing.GrayscaleCommand(16);
         var MinMaxBits = new MinMaxBitsCommand();
         var MinMaxValues = new MinMaxValuesCommand();
         var command = new WindowLevelCommand();

         graycommand.run(image);
         MinMaxBits.run(image);
         MinMaxValues.run(image);
         
         Size = (1 &lt;&lt;(MinMaxBits.maximumBit - MinMaxBits.minimumBit + 1));
         
         // fill the first half of the LookupTable with RED.
         for(x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColorHelper.create(255, 0, 0);
         
         // fill the rest with gray values.
         for(x = Size / 2; x &lt; Size; x++)
         {
            y = (x - MinMaxValues.minimumValue) * 255 / (MinMaxValues.maximumValue - MinMaxValues.minimumValue);
            LookupTable[x] = Leadtools.RasterColorHelper.create(y, y, y);
         }
         
         command.highBit = MinMaxBits.maximumBit;
         command.lowBit  = MinMaxBits.minimumBit;
         command.lookupTable = LookupTable;
         command.order = Leadtools.RasterByteOrder.bgr;
         
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task WindowLevelCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         int x;
         byte y;
         int Size;
         RasterColor [] LookupTable;

         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelCommand command = new WindowLevelCommand();

         graycommand.Run(image);
         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for(x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColorHelper.Create(255, 0, 0);

         // fill the rest with gray values.
         for(x = Size / 2; x &lt; Size; x++)
         {
            y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = Leadtools.RasterColorHelper.Create(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit  = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void WindowLevelCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         int x;
         byte y;
         int Size;
         RasterColor[] LookupTable;
         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         WindowLevelCommand command = new WindowLevelCommand();

         graycommand.Run(image);
         MinMaxBits.Run(image);
         MinMaxValues.Run(image);

         Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         LookupTable = new Leadtools.RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for (x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new Leadtools.RasterColor(255, 0, 0);

         // fill the rest with gray values.
         for (x = Size / 2; x &lt; Size; x++)
         {
            y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new Leadtools.RasterColor(y, y, y);
         }

         command.HighBit = MinMaxBits.MaximumBit;
         command.LowBit = MinMaxBits.MinimumBit;
         command.LookupTable = LookupTable;
         command.Order = Leadtools.RasterByteOrder.Bgr;

         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub WindowLevelCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim x As Integer
         Dim y As Byte
         Dim Size As Integer
         Dim LookupTable As RasterColor()
         'Change the image to 16-bit grayscale
         Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
         Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand()
         Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand()
         Dim command As WindowLevelCommand = New WindowLevelCommand()

         graycommand.Run(image)
         MinMaxBits.Run(image)
         MinMaxValues.Run(image)

         Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
         LookupTable = New RasterColor(Size - 1) {}

         ' fill the first half of the LookupTable with RED.
         x = 0
         Do While x &lt; Size / 2
            LookupTable(x) = New RasterColor(255, 0, 0)
            x += 1
         Loop

         ' fill the rest with gray values.
         x = Size / 2
         Do While x &lt; Size
            y = CByte((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue))
            LookupTable(x) = New RasterColor(y, y, y)
            x += 1
         Loop

         command.HighBit = MinMaxBits.MaximumBit
         command.LowBit = MinMaxBits.MinimumBit
         command.LookupTable = LookupTable
         command.Order = RasterByteOrder.Bgr

         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyVoiLookupTableCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChannelMixerCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DeinterlaceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.DesaturateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EdgeDetectStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.LightControlCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SmoothEdgesCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.LocalHistogramEqualizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AddWeightedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MultiplyCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SkeletonCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorReplaceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdaptiveContrastCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ApplyMathematicalLogicCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorIntensityBalanceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ContrastBrightnessIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DigitalSubtractCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EdgeDetectEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MultiscaleEnhancementCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand"></seealso>.
            <objectivec><pre>@interface LTWindowLevelCommand : LTRasterCommand</pre></objectivec><java><pre>public class WindowLevelCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public WindowLevelCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelCommand.#ctor(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterByteOrder)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="lowBit">Value indicating the low bit used for leveling. 0 &lt;= lowBit &lt;= highBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="highBit">Value indicating the high bit used for leveling.  0 &lt;= lowBit &lt;= highBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="lookupTable">Optional 8-bit lookup table that can be used to implement a user defined conversion.  For every intensity value between 0 and 2 raised to the power of (highBit - lowBit + 1) - 1 there should be a corresponding entry in the lookup table that contains an RGB quad. If lookupTable is null, the conversion is a normal shift (right or left) and the output image is 8-bit grayscale. If lookupTable is not null, the output image is a 24-bit image.</param>
      <param name="order">Value indicating the color order if the output image will be 24-bit. If LookupTable is null, this parameter is ignored.</param>
      <example>
        <code lang="VB">   Public Sub WindowLevelConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      'Change the image to 16-bit grayscale
      Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
      graycommand.Run(leadImage)

      Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand
      MinMaxBits.Run(leadImage)

      Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand
      MinMaxValues.Run(leadImage)

      Dim Size As Integer = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
      Dim LookupTable() As RasterColor
      ReDim LookupTable(Size - 1)
      ' fill the first half of the LookupTable with RED.
      Dim x As Integer
      For x = 0 To (Size \ 2 - 1)
         LookupTable(x) = New RasterColor(255, 0, 0)
      Next
      ' fill the rest with gray values.
      For x = Size \ 2 To Size - 1
         Dim y As Byte = CType((x) * 255 / (Size), Byte)
         LookupTable(x) = New RasterColor(y, y, y)
      Next

      Dim command As WindowLevelCommand = New WindowLevelCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void WindowLevelConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         graycommand.Run(image);

         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);

         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor [] LookupTable = new RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for(int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new RasterColor(255, 0, 0);

         // fill the rest with gray values.
         for(int x = Size / 2; x &lt; Size; x++)
         {
            byte y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new RasterColor(y, y, y);
         }

         WindowLevelCommand command = new WindowLevelCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function WindowLevelConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         //Change the image to 16-bit grayscale
         var graycommand = new GrayscaleCommand(16);
         graycommand.run(image);
         
         var MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.run(image);
         
         var MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.run(image);
         
         var Size = (1 &lt;&lt;(MinMaxBits.maximumBit - MinMaxBits.minimumBit + 1));
         var LookupTable = new Array();
         
         // fill the first half of the LookupTable with RED.
         for(var x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = Leadtools.RasterColorHelper.create(255, 0, 0);
         
         // fill the rest with gray values.
         for(var x = Size / 2; x &lt; Size; x++)
         {
            var y = (x - MinMaxValues.minimumValue) * 255 / (MinMaxValues.maximumValue - MinMaxValues.minimumValue);
            LookupTable[x] = Leadtools.RasterColorHelper.create(y, y, y);
         }
         
         var command = new WindowLevelCommand(MinMaxBits.minimumBit, MinMaxBits.maximumBit, LookupTable, RasterByteOrder.bgr);
         
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task WindowLevelConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         graycommand.Run(image);

         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);

         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt;(MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor [] LookupTable = new RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for(int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = RasterColorHelper.Create(255, 0, 0);

         // fill the rest with gray values.
         for(int x = Size / 2; x &lt; Size; x++)
         {
            byte y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = RasterColorHelper.Create(y, y, y);
         }

         WindowLevelCommand command = new WindowLevelCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void WindowLevelConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         //Change the image to 16-bit grayscale
         GrayscaleCommand graycommand = new GrayscaleCommand(16);
         graycommand.Run(image);
         MinMaxBitsCommand MinMaxBits = new MinMaxBitsCommand();
         MinMaxBits.Run(image);

         MinMaxValuesCommand MinMaxValues = new MinMaxValuesCommand();
         MinMaxValues.Run(image);

         int Size = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1));
         RasterColor[] LookupTable = new RasterColor[Size];

         // fill the first half of the LookupTable with RED.
         for (int x = 0; x &lt; Size / 2; x++)
            LookupTable[x] = new RasterColor(255, 0, 0);

         // fill the rest with gray values.
         for (int x = Size / 2; x &lt; Size; x++)
         {
            byte y = (byte)((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue));
            LookupTable[x] = new RasterColor(y, y, y);
         }

         WindowLevelCommand command = new WindowLevelCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr);

         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub WindowLevelConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         'Change the image to 16-bit grayscale
         Dim graycommand As GrayscaleCommand = New GrayscaleCommand(16)
         graycommand.Run(image)
         Dim MinMaxBits As MinMaxBitsCommand = New MinMaxBitsCommand()
         MinMaxBits.Run(image)

         Dim MinMaxValues As MinMaxValuesCommand = New MinMaxValuesCommand()
         MinMaxValues.Run(image)

         Dim Size As Integer = (1 &lt;&lt; (MinMaxBits.MaximumBit - MinMaxBits.MinimumBit + 1))
         Dim LookupTable As RasterColor() = New RasterColor(Size - 1){}

         ' fill the first half of the LookupTable with RED.
         Dim x As Integer = 0
         Do While x &lt; Size / 2
            LookupTable(x) = New RasterColor(255, 0, 0)
            x += 1
         Loop

         ' fill the rest with gray values.
         x = Size / 2
         Do While x &lt; Size
            Dim y As Byte = CByte((x - MinMaxValues.MinimumValue) * 255 / (MinMaxValues.MaximumValue - MinMaxValues.MinimumValue))
            LookupTable(x) = New RasterColor(y, y, y)
            x += 1
         Loop

         Dim command As WindowLevelCommand = New WindowLevelCommand(MinMaxBits.MinimumBit, MinMaxBits.MaximumBit, LookupTable, RasterByteOrder.Bgr)

         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithLookupTable:(NSArray*)lookupTable 
                   lowBit:(int)lowBit 
                  highBit:(int)highBit 
                    order:(LTRasterByteOrder)order;            </pre>
      </objectivec>
      <java>
        <pre>
public WindowLevelCommand(
   int lowBit, 
   int highBit, 
   RasterColor[] lookupTable, 
   RasterByteOrder order
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.WindowLevelCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelCommand.LookupTable">
      <summary>Gets or sets an optional lookup table that can be used to implement a user defined conversion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Optional lookup table that can be used to implement a user defined conversion.  For every intensity value between 0 and 2 raised to the power of (HighBit - LowBit + 1) - 1 there should be a corresponding entry in the lookup table that contains an RGB quad. If LookupTable is null, the conversion is a normal shift (right or left) and the output image is 8-bit grayscale. If LookupTable is not null, the output image is a 24-bit image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) NSMutableArray* lookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor[] getLookupTable()
public void setLookupTable(RasterColor[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelCommand.LowBit">
      <summary>Gets or sets a value indicating the low bit used for leveling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value indicating the low bit used for leveling. 0 &lt;= LowBit &lt;= HighBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int lowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getLowBit()
public void setLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelCommand.HighBit">
      <summary>Gets or sets a value indicating the high bit used for leveling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value indicating the high bit used for leveling. 0 &lt;= LowBit &lt;= HighBit &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int highBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getHighBit()
public void setHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.WindowLevelCommand.Order">
      <summary>Gets or sets a value indicating the color order if the output image will be 24-bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value indicating the color order if the output image will be 24-bit. If the LookupTable property is null, this property is ignored.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getOrder()
public void setOrder(RasterByteOrder value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags">
      <summary>Flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, the clipping type, the used or 
            computed frequencies range, the operation on the specified X harmonics range , and the operation on the specified Y harmonics range.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that represent the transformation type</td><td>DiscreteFourierTransform, InverseDiscreteFourierTransform</td></tr><tr><td>Flags that represent the operation channel type</td><td>Blue, Green, Red, Gray</td></tr><tr><td>Flags that represent the frequency data type used for constructing the image: this flag is used only if InverseDiscreteFourierTransform is 
                 set and will be ignored if DiscreteFourierTransform is set</td><td>Magnitude, Phase, Both</td></tr><tr><td>Flags that represent the clipping type. This flag is used only if InverseDiscreteFourierTransform is set and will be ignored if FFT_FFT is set</td><td>Clip, Scale</td></tr><tr><td>Flags that represent which harmonics are used</td><td>All, Range</td></tr><tr><td>Flags that represent the operations on the X Harmonics range</td><td>InsideX, OutsideX</td></tr><tr><td>Flags that represent the operations on the Y Harmonics range</td><td>InsideY, OutsideY</td></tr></table></remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.None">
      <summary>No change. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.DiscreteFourierTransform">
      <summary>Convert the image into frequency domain and store the results in the Data property of the FourierTransformInformation object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InverseDiscreteFourierTransform">
      <summary>Construct an image using the frequency components from the Data property of the FourierTransformInformation object. This option will change the values of the Data property. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Blue">
      <summary>Use the blue channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Green">
      <summary>Use the green channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Red">
      <summary>Use the red channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Gray">
      <summary>Use the master channel. If this flag is combined with InverseDiscreteFourierTransform, the reconstructed image will be gray. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Magnitude">
      <summary>Construct the image from the frequency magnitude data only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Phase">
      <summary>Construct the image from frequency phase data only. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Both">
      <summary>Construct the image from both magnitude and phase data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Clip">
      <summary>Clip the constructed image values  so they are between 0 and 255. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Scale">
      <summary>Scale the constructed image values so they are between 0 and 255. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.All">
      <summary>Use or compute all harmonics. If this flag is  used the range rectangle and the range flags will be ignored. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.Range">
      <summary>Use or compute the harmonics specified in the range rectangle. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InsideX">
      <summary>Use or compute only the X harmonics inside the X range and ignore those outside the range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.OutsideX">
      <summary>Use or compute only the X  harmonics outside the X range and ignore those inside the range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.InsideY">
      <summary>Use or compute only the Y harmonics inside the Y range and ignore those outside the range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags.OutsideY">
      <summary>Use or compute only the Y harmonics outside the Y range and ignore those inside the range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand">
      <summary>Computes the Discrete Fourier transform of an image or the Inverse Discrete Fourier transform as specified by the flags. This command is available 
            in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command converts the image from the time domain to the frequency domain and vice versa using the Discrete Fourier Transform 
            algorithm. Use the <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" /> to use a Fast Fourier Transform algorithm on an image. Please note however, that this 
            command does not impose the size restrictions (the width and height having to be powers of 2) that the Fast Fourier Transform method, 
            <see cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand" />, imposes upon images.</description>
          </item>
          <item>
            <description>Before using this command, you need to construct an instance from <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" />.</description>
          </item>
          <item>
            <description>The image can be transformed back into the original image minus the noise using the 
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags">InverseDiscreteFourierTransform</see></description>
          </item>
          <item>
            <description>This command does not work on regions. If the image has a region the command ignores it and processes the entire image.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images. If the image 
            is 12 and 16-bit grayscale and 48 and 64-bit color, the method will not threw an exception.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>This command does not support signed images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub DiscreteFourierTransformCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      Dim rcRange As LeadRect = New LeadRect(0, 0, leadImage.Width - 1, leadImage.Height - 1)
      Dim command As DiscreteFourierTransformCommand = New DiscreteFourierTransformCommand

      command.FourierTransformInformation = FTArray
      command.Range = rcRange
      command.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform Or _
         DiscreteFourierTransformCommandFlags.Gray Or _
         DiscreteFourierTransformCommandFlags.Range Or _
         DiscreteFourierTransformCommandFlags.InsideX Or _
         DiscreteFourierTransformCommandFlags.InsideY
      'Apply DFT.
      command.Run(leadImage)

      Dim disCommand As FourierTransformDisplayCommand = New FourierTransformDisplayCommand
      disCommand.Flags = FourierTransformDisplayCommandFlags.Log Or FourierTransformDisplayCommandFlags.Magnitude
      disCommand.FourierTransformInformation = command.FourierTransformInformation
      'plot frequency magnitude
      disCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DiscreteFourierTransformCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = new LeadRect(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand command = new DiscreteFourierTransformCommand();

         command.FourierTransformInformation = FTArray;
         command.Range = rcRange;
         command.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY;
         //Apply DFT.

         FourierTransformDisplayCommand disCommand = new FourierTransformDisplayCommand();
         disCommand.Flags = FourierTransformDisplayCommandFlags.Log|  FourierTransformDisplayCommandFlags.Magnitude;
         disCommand.FourierTransformInformation = command.FourierTransformInformation;
         // plot frequency magnitude
         disCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DiscreteFourierTransformCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var FTArray = new FourierTransformInformation(image);
         var rcRange = Leadtools.LeadRectHelper.create(0, 0, image.width - 1, image.height - 1);
         var command = new DiscreteFourierTransformCommand();
         
         command.fourierTransformInformation = FTArray;
         command.range = rcRange;
         command.flags = DiscreteFourierTransformCommandFlags.discreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.gray    | 
            DiscreteFourierTransformCommandFlags.range   | 
            DiscreteFourierTransformCommandFlags.insideX | 
            DiscreteFourierTransformCommandFlags.insideY;
         //Apply DFT.
         
         var disCommand = new FourierTransformDisplayCommand();
         disCommand.flags = FourierTransformDisplayCommandFlags.log | FourierTransformDisplayCommandFlags.magnitude;
         disCommand.fourierTransformInformation = command.fourierTransformInformation;
         // plot frequency magnitude
         disCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task DiscreteFourierTransformCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = LeadRectHelper.Create(0, 0, image.Width - 1, image.Height - 1);
         DiscreteFourierTransformCommand command = new DiscreteFourierTransformCommand();

         command.FourierTransformInformation = FTArray;
         command.Range = rcRange;
         command.Flags = DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | 
            DiscreteFourierTransformCommandFlags.Gray    | 
            DiscreteFourierTransformCommandFlags.Range   | 
            DiscreteFourierTransformCommandFlags.InsideX | 
            DiscreteFourierTransformCommandFlags.InsideY;
         //Apply DFT.

         FourierTransformDisplayCommand disCommand = new FourierTransformDisplayCommand();
         disCommand.Flags = FourierTransformDisplayCommandFlags.Log|  FourierTransformDisplayCommandFlags.Magnitude;
         disCommand.FourierTransformInformation = command.FourierTransformInformation;
         // plot frequency magnitude
         disCommand.Run(image);

      }</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.#ctor(Leadtools.ImageProcessing.Core.FourierTransformInformation,Leadtools.LeadRect,Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="fourierTransformInformation">
        <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> structure. The Data property of 
            the <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> object is a two-dimensional array that  holds the frequency components of  the image. 
            Its size must be the same as the image. This array is filled by the command when 
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.DiscreteFourierTransform has been set, and it must be sent to the command to 
            construct the image from it when <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform has been set.</param>
      <param name="range">Specifies the frequency range to be computed when 
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform flag is set. 
            It specifies the frequency range that will be used in the image construction when 
            <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform is set. 
            The left value refers to the minimum X harmonic, the right refers to the maximum X harmonic,
            the top refers to the minimum Y harmonic and the bottom refers to the maximum Y harmonic.
            The maximum X harmonic equals (Width -1) and the maximum Y harmonic equals (Height -1). 
            The minimum X harmonic equals 0 and the minimum Y harmonic equals 0.</param>
      <param name="flags">Flags that indicate the transformation type, operation channel, 
            frequency data type used to reconstruct the image, the clipping type, the used or 
            computed frequencies range, the operation on the specified X harmonics range, and the
            operation on the specified Y harmonics range. You can use a bitwise OR (|) to specify one flag from each group.</param>
      <example>
        <code lang="VB">   Public Sub DiscreteFourierTransformConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim FTArray As FourierTransformInformation
      FTArray = New FourierTransformInformation(leadImage)
      Dim rcRange As LeadRect
      rcRange = New LeadRect(0, 0, CType((leadImage.Width / 4), Integer), CType((leadImage.Height / 2), Integer))

      Dim command As DiscreteFourierTransformCommand
      command = New DiscreteFourierTransformCommand(FTArray, rcRange, DiscreteFourierTransformCommandFlags.DiscreteFourierTransform Or DiscreteFourierTransformCommandFlags.Gray Or DiscreteFourierTransformCommandFlags.Range Or DiscreteFourierTransformCommandFlags.InsideX Or DiscreteFourierTransformCommandFlags.OutsideY)
      ' Apply DFT.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void DiscreteFourierTransformConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = new LeadRect(0, 0, image.Width / 4, image.Height / 2);

         DiscreteFourierTransformCommand command = new DiscreteFourierTransformCommand(FTArray, rcRange , DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | DiscreteFourierTransformCommandFlags.Gray | DiscreteFourierTransformCommandFlags.Range | DiscreteFourierTransformCommandFlags.InsideX | DiscreteFourierTransformCommandFlags.OutsideY);
         // Apply DFT.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function DiscreteFourierTransformConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image){
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var FTArray = new FourierTransformInformation(image);
         var rcRange = Leadtools.LeadRectHelper.create(0, 0, image.width / 4, image.height / 2);
                 
         var command = new DiscreteFourierTransformCommand(FTArray, rcRange , DiscreteFourierTransformCommandFlags.discreteFourierTransform | DiscreteFourierTransformCommandFlags.gray | DiscreteFourierTransformCommandFlags.range | DiscreteFourierTransformCommandFlags.insideX | DiscreteFourierTransformCommandFlags.outsideY);
         // Apply DFT.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task DiscreteFourierTransformConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         LeadRect rcRange = LeadRectHelper.Create(0, 0, image.Width / 4, image.Height / 2);

         DiscreteFourierTransformCommand command = new DiscreteFourierTransformCommand(FTArray, rcRange , DiscreteFourierTransformCommandFlags.DiscreteFourierTransform | DiscreteFourierTransformCommandFlags.Gray | DiscreteFourierTransformCommandFlags.Range | DiscreteFourierTransformCommandFlags.InsideX | DiscreteFourierTransformCommandFlags.OutsideY);
         // Apply DFT.
         command.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.Flags">
      <summary>Gets or set the flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, 
            the clipping type, the used or computed frequencies range, the operation on the specified X harmonics range, and the operation on the specified Y harmonics range. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Flags that indicate the transformation type, operation channel, frequency data type used to reconstruct the image, the 
            clipping type, the used or computed frequencies range, the operation on the specified X harmonics range, and the operation on the 
            specified Y harmonics range. You can use a bitwise OR (|) to specify one flag from each group.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.Range">
      <summary>Gets or sets the frequency range to be computed when the <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform flag is set. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Specifies the frequency range to be computed when the <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform flag is set. 
            It specifies the frequency range that will be used in the image construction when <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform is set. The left value refers to the minimum X harmonic, the right refers to the maximum X harmonic, the top refers to the minimum Y harmonic and the bottom refers to the maximum Y harmonic. The maximum X harmonic equals (Width -1) and the maximum Y harmonic equals (Height -1). The minimum X harmonic equals 0 and the minimum Y harmonic equals 0.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation">
      <summary>Gets or set the <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> object that contains information about the FourierTransformCommand. 
            The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> object is a two-dimensional array that holds the frequency components of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>
        <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> object. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand.FourierTransformInformation" /> 
            object is a two-dimensional array that holds the frequency components of the image. Its size must be the same as the image. This array is 
            filled by the command when the <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.DiscreteFourierTransform flag has been set, and it 
            must be sent to the command to construct the image from it when the  <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommandFlags" />.InverseDiscreteFourierTransform flag has been set.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.TransformationParameters">
      <summary>
        <para> Structure that contains the rotation angle, XY scaling, and XY translation of the transformed image with comparison to the reference image. </para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
      </summary>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTTransformationParameters : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class TransformationParameters</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.XTranslation">
      <summary>Gets or sets the image's x-translation, in hundredths of pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value> The image x-translation, in hundredths of pixels.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int xTranslation;</pre>
      </objectivec>
      <java>
        <pre>
public int getXTranslation()
public void setXTranslation(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.YTranslation">
      <summary>Gets or sets the image's y-translation, in hundredths of pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value> The image y-translation, in hundredths of pixels.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int yTranslation;</pre>
      </objectivec>
      <java>
        <pre>
public int getYTranslation()
public void setYTranslation(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.Angle">
      <summary>Gets or sets the image rotation angle, in hundredths of degrees. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value> Value that represents the image rotation angle, in hundredths of degrees.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.XScale">
      <summary>Gets or sets the image x-scaling (resizing), in percent. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value> Value that represents the image x-scaling (resizing), in percent.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int xScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getXScale()
public void setXScale(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.TransformationParameters.YScale">
      <summary>Gets or sets the image y-scaling (resizing), in percent. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value> Value that represents the image y-scaling (resizing), in percent.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int yScale;</pre>
      </objectivec>
      <java>
        <pre>
public int getYScale()
public void setYScale(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.CountLookupTableColorsType">
      <summary>Flag that indicates whether the LookupTable contains signed or 
            unsigned data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTCountLookupTableColorsType</pre>
      </objectivec>
      <java>
        <pre>public enum CountLookupTableColorsType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.CountLookupTableColorsType.Unsigned">
      <summary>(0x00000001)The LookupTable contains signed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTCountLookupTableColorsType_Unsigned</pre>
      </objectivec>
      <java>
        <pre>UNSIGNED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.CountLookupTableColorsType.Signed">
      <summary>(0x00000002)The LookupTable contains unsigned data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTCountLookupTableColorsType_Signed</pre>
      </objectivec>
      <java>
        <pre>SIGNED</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult">
      <summary>Structure that contains LookupTable information used by the CoreUtilities class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors</see></example>
      <noremarks />
      <objectivec>
        <pre>@interface LTCountLookupTableColorsResult : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CountLookupTableColorsResult</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult.NumberOfEntries">
      <summary>A variable to be updated with the total number of entries between the start color and the end color. The start color and end color are determined internally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A variable to be updated with total number of entries between the start color and the end color.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int numberOfEntries;</pre>
      </objectivec>
      <java>
        <pre>
public int getNumberOfEntries()
public void setNumberOfEntries(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CountLookupTableColorsResult.FirstIndex">
      <summary>A variable to be updated with the index of the last occurrence of the starting color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A variable to be updated with the index of the last occurrence of the starting color.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">CoreUtilities.CountLookupTableColors</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int firstIndex;</pre>
      </objectivec>
      <java>
        <pre>
public int getFirstIndex()
public void setFirstIndex(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.CoreUtilities">
      <summary>Core utility class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub GetTransformationParametersExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim rmData(2) As SearchRegistrationMarksCommandData
      ' Mark1
      rmData(0) = New SearchRegistrationMarksCommandData
      rmData(0).Rectangle = New LeadRect(680, 20, 941 - 680, 218 - 20)
      Dim pt0(0) As LeadPoint
      rmData(0).MarkDetectedPoints = pt0
      rmData(0).Width = 31
      rmData(0).Height = 29
      rmData(0).Type = RegistrationMarkCommandType.TShape
      rmData(0).MinimumScale = 90
      rmData(0).MaximumScale = 110
      rmData(0).SearchMarkCount = 1

      ' Mark2
      rmData(1) = New SearchRegistrationMarksCommandData
      rmData(1).Rectangle = New LeadRect(665, 790, 899 - 665, 961 - 790)
      Dim pt1(0) As LeadPoint
      rmData(1).MarkDetectedPoints = pt1
      rmData(1).Width = 31
      rmData(1).Height = 29
      rmData(1).Type = RegistrationMarkCommandType.TShape
      rmData(1).MinimumScale = 90
      rmData(1).MaximumScale = 110
      rmData(1).SearchMarkCount = 1

      ' Mark3
      rmData(2) = New SearchRegistrationMarksCommandData
      rmData(2).Rectangle = New LeadRect(7, 1073, 298 - 7, 1246 - 1073)
      Dim pt2(0) As LeadPoint
      rmData(2).MarkDetectedPoints = pt2
      rmData(2).Width = 31
      rmData(2).Height = 29
      rmData(2).Type = RegistrationMarkCommandType.TShape
      rmData(2).MinimumScale = 90
      rmData(2).MaximumScale = 110
      rmData(2).SearchMarkCount = 1
      Dim command1 As New SearchRegistrationMarksCommand(rmData)
      command1.Run(leadImage)

      If ((rmData(2).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(1).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(0).MarkDetectedCount &lt;&gt; 1)) Then
         Return
      End If

      Dim original() As LeadPoint = _
      { _
         New LeadPoint(81400, 11300), _
         New LeadPoint(78600, 87400), _
         New LeadPoint(14300, 115400) _
      }

      Dim detected() As LeadPoint = _
      { _
         rmData(0).MarkDetectedPoints(0), _
         rmData(1).MarkDetectedPoints(0), _
         rmData(2).MarkDetectedPoints(0) _
      }

      ' Find center of mass for detected registration marks in the transformed image
      Dim transformed() As LeadPoint = CoreUtilities.GetRegistrationMarksCenterMass(leadImage, detected)
      ' Find transformation parameters
      Dim parameters As TransformationParameters = CoreUtilities.GetTransformationParameters(leadImage, original, transformed)
      ' Apply transformatin parameters to correct the image
      Dim applyCommand As New ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal)

      applyCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void GetTransformationParametersExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

         //Mark1
         rmData[0] = new SearchRegistrationMarksCommandData();
         rmData[0].Rectangle = new LeadRect(680, 20, 941 - 680, 218 - 20);
         rmData[0].MarkDetectedPoints = new LeadPoint[1];
         rmData[0].Width = 31;
         rmData[0].Height = 29;
         rmData[0].Type = RegistrationMarkCommandType.TShape;
         rmData[0].MinimumScale = 90;
         rmData[0].MaximumScale = 110;
         rmData[0].SearchMarkCount = 1;

         //Mark2
         rmData[1] = new SearchRegistrationMarksCommandData();
         rmData[1].Rectangle = new LeadRect(665, 790, 899 - 665, 961 - 790);
         rmData[1].MarkDetectedPoints = new LeadPoint[1];
         rmData[1].Width = 31;
         rmData[1].Height = 29;
         rmData[1].Type = RegistrationMarkCommandType.TShape;
         rmData[1].MinimumScale = 90;
         rmData[1].MaximumScale = 110;
         rmData[1].SearchMarkCount = 1;

         //Mark3
         rmData[2] = new SearchRegistrationMarksCommandData();
         rmData[2].Rectangle = new LeadRect(7, 1073, 298 - 7, 1246 - 1073);
         rmData[2].MarkDetectedPoints = new LeadPoint[1];
         rmData[2].Width = 31;
         rmData[2].Height = 29;
         rmData[2].Type = RegistrationMarkCommandType.TShape;
         rmData[2].MinimumScale = 90;
         rmData[2].MaximumScale = 110;
         rmData[2].SearchMarkCount = 1;
         SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
         command1.Run(image);
         if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
            return;

         LeadPoint[] original =
         {
            new LeadPoint(81400, 11300),
            new LeadPoint(78600, 87400),
            new LeadPoint(14300, 115400)
         };

         LeadPoint[] detected =
         {
            rmData[0].MarkDetectedPoints[0],
            rmData[1].MarkDetectedPoints[0],
            rmData[2].MarkDetectedPoints[0]
         };

         //Find center of mass for detected registration marks in the transformed image
         LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
         //Find transformation parameters
         TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
         //Apply transformation parameters to correct the image
         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
         applyCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
//   
//   public async Task GetTransformationParametersExample()
//   {
//      // Load an image
//      RasterCodecs codecs = new RasterCodecs();
//      codecs.ThrowExceptionsOnInvalidImages = true;

//      // Load the image
//      string srcFileName = @"Assets\Image1.cmp";
//      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
//      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

//      // Prepare the command
//      SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

//      //Mark1
//      rmData[0] = new SearchRegistrationMarksCommandData();
//      rmData[0].Rectangle = LeadRectHelper.Create(680, 20, 941 - 680, 218 - 20);
//      rmData[0].MarkDetectedPoints = new LeadPoint[1];
//      rmData[0].Width = 31;
//      rmData[0].Height = 29;
//      rmData[0].Type = RegistrationMarkCommandType.TShape;
//      rmData[0].MinimumScale = 90;
//      rmData[0].MaximumScale = 110;
//      rmData[0].SearchMarkCount = 1;

//      //Mark2
//      rmData[1] = new SearchRegistrationMarksCommandData();
//      rmData[1].Rectangle = LeadRectHelper.Create(665, 790, 899 - 665, 961 - 790);
//      rmData[1].MarkDetectedPoints = new LeadPoint[1];
//      rmData[1].Width = 31;
//      rmData[1].Height = 29;
//      rmData[1].Type = RegistrationMarkCommandType.TShape;
//      rmData[1].MinimumScale = 90;
//      rmData[1].MaximumScale = 110;
//      rmData[1].SearchMarkCount = 1;

//      //Mark3
//      rmData[2] = new SearchRegistrationMarksCommandData();
//      rmData[2].Rectangle = LeadRectHelper.Create(7, 1073, 298 - 7, 1246 - 1073);
//      rmData[2].MarkDetectedPoints = new LeadPoint[1];
//      rmData[2].Width = 31;
//      rmData[2].Height = 29;
//      rmData[2].Type = RegistrationMarkCommandType.TShape;
//      rmData[2].MinimumScale = 90;
//      rmData[2].MaximumScale = 110;
//      rmData[2].SearchMarkCount = 1;
//      SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
//      command1.Run(image);
//      if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
//         return;

//      LeadPoint[] original =
//      {
//         LeadPointHelper.Create(81400, 11300),
//         LeadPointHelper.Create(78600, 87400),
//         LeadPointHelper.Create(14300, 115400)
//      };

//      LeadPoint[] detected =
//      {
//         rmData[0].MarkDetectedPoints[0],
//         rmData[1].MarkDetectedPoints[0],
//         rmData[2].MarkDetectedPoints[0]
//      };

//      //Find center of mass for detected registration marks in the transformed image
//      LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
//      //Find transformation parameters
//      TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
//      //Apply transformation parameters to correct the image
//      ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
//      applyCommand.Run(image);

//   }
//    </code>
        <code lang="CSWinRT">      
      public async Task GetTransformationParametersExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

         //Mark1
         rmData[0] = new SearchRegistrationMarksCommandData();
         rmData[0].Rectangle = LeadRectHelper.Create(680, 20, 941 - 680, 218 - 20);
         rmData[0].MarkDetectedPoints = new LeadPoint[1];
         rmData[0].Width = 31;
         rmData[0].Height = 29;
         rmData[0].Type = RegistrationMarkCommandType.TShape;
         rmData[0].MinimumScale = 90;
         rmData[0].MaximumScale = 110;
         rmData[0].SearchMarkCount = 1;

         //Mark2
         rmData[1] = new SearchRegistrationMarksCommandData();
         rmData[1].Rectangle = LeadRectHelper.Create(665, 790, 899 - 665, 961 - 790);
         rmData[1].MarkDetectedPoints = new LeadPoint[1];
         rmData[1].Width = 31;
         rmData[1].Height = 29;
         rmData[1].Type = RegistrationMarkCommandType.TShape;
         rmData[1].MinimumScale = 90;
         rmData[1].MaximumScale = 110;
         rmData[1].SearchMarkCount = 1;

         //Mark3
         rmData[2] = new SearchRegistrationMarksCommandData();
         rmData[2].Rectangle = LeadRectHelper.Create(7, 1073, 298 - 7, 1246 - 1073);
         rmData[2].MarkDetectedPoints = new LeadPoint[1];
         rmData[2].Width = 31;
         rmData[2].Height = 29;
         rmData[2].Type = RegistrationMarkCommandType.TShape;
         rmData[2].MinimumScale = 90;
         rmData[2].MaximumScale = 110;
         rmData[2].SearchMarkCount = 1;
         SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
         command1.Run(image);
         if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
            return;

         LeadPoint[] original =
         {
            LeadPointHelper.Create(81400, 11300),
            LeadPointHelper.Create(78600, 87400),
            LeadPointHelper.Create(14300, 115400)
         };

         LeadPoint[] detected =
         {
            rmData[0].MarkDetectedPoints[0],
            rmData[1].MarkDetectedPoints[0],
            rmData[2].MarkDetectedPoints[0]
         };

         //Find center of mass for detected registration marks in the transformed image
         LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
         //Find transformation parameters
         TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
         //Apply transformation parameters to correct the image
         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
         applyCommand.Run(image);

      }</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTCoreUtilities : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CoreUtilities</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])">
      <summary>Computes the rotation angle, XY scaling, and XY translation of the transformed image with comparison to the reference image. These are the transformations that would have to be performed to the reference image to have it match the current image. This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the transformed image.</param>
      <param name="referencePoints">Pointer to an array of reference points. These points represent the center of mass points for the registration marks in the reference image. You have to provide this information.</param>
      <param name="transformedPoints">Pointer to an array of transformed points. These points are the center of mass points in the image. You have to provide this information.</param>
      <returns>
        <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />
      </returns>
      <remarks>
        <list type="bullet">
          <item>
            <description>This method detects transformation parameters of the transformed image by comparing it with the reference image. The number of reference and detected points must be three.</description>
          </item>
          <item>
            <description>Use <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])" /> to fill the referencePoints array with the points representing the center of masses for each of the reference marks from the reference image.</description>
          </item>
          <item>
            <description>Fill the transformedPoints array by performing the following steps:<br /><br /><list type="bullet"><item><description>Use <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> to find the new positions for the reference marks.</description></item><item><description>Using <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])" /> to fill the transformedPoints array with points representing the center of masses for each of the transformed reference marks.</description></item></list></description>
          </item>
          <item>
            <description>The properties of <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" /> which are: XTranslation, YTranslation, Angle, XScale and YScale are internally divided by 100. For example, an Angle of 500 would mean to rotate the image 5 degrees clockwise.</description>
          </item>
          <item>
            <description>The results of this method must be sent without any modification to the ApplyTransformationParameters method in order to correct the image.</description>
          </item>
          <item>
            <description>If you want to correct the image yourself, you have to perform the inverse operations in this order:<br /><br /><list type="bullet"><item><description>Shift the image by (-<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />.XTranslation / 100, -<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />.YTranslation / 100) using <see cref="T:Leadtools.ImageProcessing.Effects.CombineCommand" /></description></item><item><description>Rotate without resizing by - (<see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />.Angle)</description></item><item><description>Resize using scaling factors of (100 / <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />.XScale, 100 / <see cref="T:Leadtools.ImageProcessing.Core.TransformationParameters" />.YScale) using <see cref="T:Leadtools.ImageProcessing.SizeCommand" /> or <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</description></item></list></description>
          </item>
          <item>
            <description>If you simply want to automatically straighten the image, use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])"></seealso>.
            <example><code lang="VB">   Public Sub GetTransformationParametersExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim rmData(2) As SearchRegistrationMarksCommandData
      ' Mark1
      rmData(0) = New SearchRegistrationMarksCommandData
      rmData(0).Rectangle = New LeadRect(680, 20, 941 - 680, 218 - 20)
      Dim pt0(0) As LeadPoint
      rmData(0).MarkDetectedPoints = pt0
      rmData(0).Width = 31
      rmData(0).Height = 29
      rmData(0).Type = RegistrationMarkCommandType.TShape
      rmData(0).MinimumScale = 90
      rmData(0).MaximumScale = 110
      rmData(0).SearchMarkCount = 1

      ' Mark2
      rmData(1) = New SearchRegistrationMarksCommandData
      rmData(1).Rectangle = New LeadRect(665, 790, 899 - 665, 961 - 790)
      Dim pt1(0) As LeadPoint
      rmData(1).MarkDetectedPoints = pt1
      rmData(1).Width = 31
      rmData(1).Height = 29
      rmData(1).Type = RegistrationMarkCommandType.TShape
      rmData(1).MinimumScale = 90
      rmData(1).MaximumScale = 110
      rmData(1).SearchMarkCount = 1

      ' Mark3
      rmData(2) = New SearchRegistrationMarksCommandData
      rmData(2).Rectangle = New LeadRect(7, 1073, 298 - 7, 1246 - 1073)
      Dim pt2(0) As LeadPoint
      rmData(2).MarkDetectedPoints = pt2
      rmData(2).Width = 31
      rmData(2).Height = 29
      rmData(2).Type = RegistrationMarkCommandType.TShape
      rmData(2).MinimumScale = 90
      rmData(2).MaximumScale = 110
      rmData(2).SearchMarkCount = 1
      Dim command1 As New SearchRegistrationMarksCommand(rmData)
      command1.Run(leadImage)

      If ((rmData(2).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(1).MarkDetectedCount &lt;&gt; 1) OrElse (rmData(0).MarkDetectedCount &lt;&gt; 1)) Then
         Return
      End If

      Dim original() As LeadPoint = _
      { _
         New LeadPoint(81400, 11300), _
         New LeadPoint(78600, 87400), _
         New LeadPoint(14300, 115400) _
      }

      Dim detected() As LeadPoint = _
      { _
         rmData(0).MarkDetectedPoints(0), _
         rmData(1).MarkDetectedPoints(0), _
         rmData(2).MarkDetectedPoints(0) _
      }

      ' Find center of mass for detected registration marks in the transformed image
      Dim transformed() As LeadPoint = CoreUtilities.GetRegistrationMarksCenterMass(leadImage, detected)
      ' Find transformation parameters
      Dim parameters As TransformationParameters = CoreUtilities.GetTransformationParameters(leadImage, original, transformed)
      ' Apply transformatin parameters to correct the image
      Dim applyCommand As New ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal)

      applyCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code><code lang="CS">      public void GetTransformationParametersExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

         //Mark1
         rmData[0] = new SearchRegistrationMarksCommandData();
         rmData[0].Rectangle = new LeadRect(680, 20, 941 - 680, 218 - 20);
         rmData[0].MarkDetectedPoints = new LeadPoint[1];
         rmData[0].Width = 31;
         rmData[0].Height = 29;
         rmData[0].Type = RegistrationMarkCommandType.TShape;
         rmData[0].MinimumScale = 90;
         rmData[0].MaximumScale = 110;
         rmData[0].SearchMarkCount = 1;

         //Mark2
         rmData[1] = new SearchRegistrationMarksCommandData();
         rmData[1].Rectangle = new LeadRect(665, 790, 899 - 665, 961 - 790);
         rmData[1].MarkDetectedPoints = new LeadPoint[1];
         rmData[1].Width = 31;
         rmData[1].Height = 29;
         rmData[1].Type = RegistrationMarkCommandType.TShape;
         rmData[1].MinimumScale = 90;
         rmData[1].MaximumScale = 110;
         rmData[1].SearchMarkCount = 1;

         //Mark3
         rmData[2] = new SearchRegistrationMarksCommandData();
         rmData[2].Rectangle = new LeadRect(7, 1073, 298 - 7, 1246 - 1073);
         rmData[2].MarkDetectedPoints = new LeadPoint[1];
         rmData[2].Width = 31;
         rmData[2].Height = 29;
         rmData[2].Type = RegistrationMarkCommandType.TShape;
         rmData[2].MinimumScale = 90;
         rmData[2].MaximumScale = 110;
         rmData[2].SearchMarkCount = 1;
         SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
         command1.Run(image);
         if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
            return;

         LeadPoint[] original =
         {
            new LeadPoint(81400, 11300),
            new LeadPoint(78600, 87400),
            new LeadPoint(14300, 115400)
         };

         LeadPoint[] detected =
         {
            rmData[0].MarkDetectedPoints[0],
            rmData[1].MarkDetectedPoints[0],
            rmData[2].MarkDetectedPoints[0]
         };

         //Find center of mass for detected registration marks in the transformed image
         LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
         //Find transformation parameters
         TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
         //Apply transformation parameters to correct the image
         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
         applyCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code><code lang="JavaScript">
//   
//   public async Task GetTransformationParametersExample()
//   {
//      // Load an image
//      RasterCodecs codecs = new RasterCodecs();
//      codecs.ThrowExceptionsOnInvalidImages = true;

//      // Load the image
//      string srcFileName = @"Assets\Image1.cmp";
//      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
//      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

//      // Prepare the command
//      SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

//      //Mark1
//      rmData[0] = new SearchRegistrationMarksCommandData();
//      rmData[0].Rectangle = LeadRectHelper.Create(680, 20, 941 - 680, 218 - 20);
//      rmData[0].MarkDetectedPoints = new LeadPoint[1];
//      rmData[0].Width = 31;
//      rmData[0].Height = 29;
//      rmData[0].Type = RegistrationMarkCommandType.TShape;
//      rmData[0].MinimumScale = 90;
//      rmData[0].MaximumScale = 110;
//      rmData[0].SearchMarkCount = 1;

//      //Mark2
//      rmData[1] = new SearchRegistrationMarksCommandData();
//      rmData[1].Rectangle = LeadRectHelper.Create(665, 790, 899 - 665, 961 - 790);
//      rmData[1].MarkDetectedPoints = new LeadPoint[1];
//      rmData[1].Width = 31;
//      rmData[1].Height = 29;
//      rmData[1].Type = RegistrationMarkCommandType.TShape;
//      rmData[1].MinimumScale = 90;
//      rmData[1].MaximumScale = 110;
//      rmData[1].SearchMarkCount = 1;

//      //Mark3
//      rmData[2] = new SearchRegistrationMarksCommandData();
//      rmData[2].Rectangle = LeadRectHelper.Create(7, 1073, 298 - 7, 1246 - 1073);
//      rmData[2].MarkDetectedPoints = new LeadPoint[1];
//      rmData[2].Width = 31;
//      rmData[2].Height = 29;
//      rmData[2].Type = RegistrationMarkCommandType.TShape;
//      rmData[2].MinimumScale = 90;
//      rmData[2].MaximumScale = 110;
//      rmData[2].SearchMarkCount = 1;
//      SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
//      command1.Run(image);
//      if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
//         return;

//      LeadPoint[] original =
//      {
//         LeadPointHelper.Create(81400, 11300),
//         LeadPointHelper.Create(78600, 87400),
//         LeadPointHelper.Create(14300, 115400)
//      };

//      LeadPoint[] detected =
//      {
//         rmData[0].MarkDetectedPoints[0],
//         rmData[1].MarkDetectedPoints[0],
//         rmData[2].MarkDetectedPoints[0]
//      };

//      //Find center of mass for detected registration marks in the transformed image
//      LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
//      //Find transformation parameters
//      TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
//      //Apply transformation parameters to correct the image
//      ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
//      applyCommand.Run(image);

//   }
//    </code><code lang="CSWinRT">      
      public async Task GetTransformationParametersExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SearchRegistrationMarksCommandData[] rmData = new SearchRegistrationMarksCommandData[3];

         //Mark1
         rmData[0] = new SearchRegistrationMarksCommandData();
         rmData[0].Rectangle = LeadRectHelper.Create(680, 20, 941 - 680, 218 - 20);
         rmData[0].MarkDetectedPoints = new LeadPoint[1];
         rmData[0].Width = 31;
         rmData[0].Height = 29;
         rmData[0].Type = RegistrationMarkCommandType.TShape;
         rmData[0].MinimumScale = 90;
         rmData[0].MaximumScale = 110;
         rmData[0].SearchMarkCount = 1;

         //Mark2
         rmData[1] = new SearchRegistrationMarksCommandData();
         rmData[1].Rectangle = LeadRectHelper.Create(665, 790, 899 - 665, 961 - 790);
         rmData[1].MarkDetectedPoints = new LeadPoint[1];
         rmData[1].Width = 31;
         rmData[1].Height = 29;
         rmData[1].Type = RegistrationMarkCommandType.TShape;
         rmData[1].MinimumScale = 90;
         rmData[1].MaximumScale = 110;
         rmData[1].SearchMarkCount = 1;

         //Mark3
         rmData[2] = new SearchRegistrationMarksCommandData();
         rmData[2].Rectangle = LeadRectHelper.Create(7, 1073, 298 - 7, 1246 - 1073);
         rmData[2].MarkDetectedPoints = new LeadPoint[1];
         rmData[2].Width = 31;
         rmData[2].Height = 29;
         rmData[2].Type = RegistrationMarkCommandType.TShape;
         rmData[2].MinimumScale = 90;
         rmData[2].MaximumScale = 110;
         rmData[2].SearchMarkCount = 1;
         SearchRegistrationMarksCommand command1 = new SearchRegistrationMarksCommand(rmData);
         command1.Run(image);
         if ((rmData[2].MarkDetectedCount != 1) || (rmData[1].MarkDetectedCount != 1) || (rmData[0].MarkDetectedCount != 1))
            return;

         LeadPoint[] original =
         {
            LeadPointHelper.Create(81400, 11300),
            LeadPointHelper.Create(78600, 87400),
            LeadPointHelper.Create(14300, 115400)
         };

         LeadPoint[] detected =
         {
            rmData[0].MarkDetectedPoints[0],
            rmData[1].MarkDetectedPoints[0],
            rmData[2].MarkDetectedPoints[0]
         };

         //Find center of mass for detected registration marks in the transformed image
         LeadPoint[] transformed = CoreUtilities.GetRegistrationMarksCenterMass(image, detected);
         //Find transformation parameters
         TransformationParameters parameters = CoreUtilities.GetTransformationParameters(image, original, transformed);
         //Apply transformation parameters to correct the image
         ApplyTransformationParametersCommand applyCommand = new ApplyTransformationParametersCommand(parameters.XTranslation, parameters.YTranslation, parameters.Angle, parameters.XScale, parameters.YScale, ApplyTransformationParametersCommandFlags.Normal);
         applyCommand.Run(image);

      }</code></example><objectivec><pre>
+ (LTTransformationParameters*)getTransformationParameters:(LTRasterImage*)image 
                                           referencePoints:(NSArray*)referencePoints 
                                         transformedPoints:(NSArray*)transformedPoints 
                                                     error:(NSError**)outError;            </pre></objectivec><java><pre>
public static TransformationParameters getTransformationParameters(
   RasterImage image, 
   LeadPoint[] referencePoints, 
   LeadPoint[] transformedPoints
)            </pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.IsRegistrationMark(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.RegistrationMarkCommandType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Determines if the object inside the image is a registration mark or not. This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the image to be searched for registration mark.</param>
      <param name="type">Value that specifies the type of registration mark for which to look. Currently, only one registration mark is defined (T-shape). 
            See the Comments for more information. More shapes will be added in the future.</param>
      <param name="minScale">Minimum scaling factor of mark to be detected. This is a percentage. It must not exceed maxScale, or an error will be returned. 
            This parameter accepts only positive values.</param>
      <param name="maxScale">Maximum scaling factor of mark to be detected. This is a percentage. It must not be lower than minScale, or an error will be 
            returned. This parameter accepts only positive values.</param>
      <param name="width">The width of the registration mark (in pixels). This parameter accepts only positive values.</param>
      <param name="height">The height of the registration mark (in pixels). This parameter accepts only positive values.</param>
      <returns>Boolean value indicating weather that specific object is registration mark or not.</returns>
      <remarks>
        <list type="bullet">
          <item>
            <description>This method verifies whether the object inside the image is a registration mark. The object must be white and the background 
            be black. Objects that are not white will not be detected. The image must have only one object inside it in order to work properly.</description>
          </item>
          <item>
            <description>Currently, there is only one type defined, a T-shaped figure as shown in the following figure. This type is a "T" rotated by 
            90 degrees counter clockwise. The P4 point must be on the center point of Line P1P2 (that is, the distance from P1 to P4 equals the distance from 
            P2 to P4). The line width should be greater than 2 pixels(preferably 3 pixels). There are no conditions on line lengths since you provide the 
            values for width, height, maxScale, and minScale.<br /><br /><img src="T_Shape_Fig.jpg" /></description>
          </item>
          <item>
            <description>Do not use this command to search for registration marks inside the image. Use <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> 
            instead.</description>
          </item>
          <item>
            <description>If you simply want to automatically straighten the image, use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 
            and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This method does not support signed data images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub IsRegistrationMarkExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim IsRegMark As Boolean
      IsRegMark = CoreUtilities.IsRegistrationMark(leadImage, RegistrationMarkCommandType.TShape, 90, 110, 31, 29)
      If (IsRegMark) Then
         MessageBox.Show("It's Registration Mark", "IsRegistrationMarkTest")
      Else
         MessageBox.Show("Not a Registration Mark", "IsRegistrationMarkTest")
      End If

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void IsRegistrationMarkExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         bool IsRegMark = CoreUtilities.IsRegistrationMark(image, RegistrationMarkCommandType.TShape, 90, 110, 31, 29);
         MessageBox.Show(IsRegMark ? "It's Registration Mark" : "Not a Registration Mark");

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
//   
//   public async Task IsRegistrationMarkExample()
//   {
//      // Load an image
//      RasterCodecs codecs = new RasterCodecs();
//      codecs.ThrowExceptionsOnInvalidImages = true;

//      // Load the image
//      string srcFileName = @"Assets\Image1.cmp";
//      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
//      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

//      // Prepare the command
//      bool IsRegMark = CoreUtilities.IsRegistrationMark(image, RegistrationMarkCommandType.TShape, 90, 110, 31, 29);
//      Debug.WriteLine(IsRegMark ? "It's Registration Mark" : "Not a Registration Mark");

//   }
//    </code>
        <code lang="CSWinRT">      
      public async Task IsRegistrationMarkExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         bool IsRegMark = CoreUtilities.IsRegistrationMark(image, RegistrationMarkCommandType.TShape, 90, 110, 31, 29);
         Debug.WriteLine(IsRegMark ? "It's Registration Mark" : "Not a Registration Mark");

      }</code>
      </example>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])"></seealso>..
            <objectivec><pre>
+ (BOOL)isRegistrationMark:(LTRasterImage*)image 
                      type:(LTRegistrationMarkCommandType)type 
                  minScale:(int)minScale maxScale:(int)maxScale width:(int)width height:(int)height error:(NSError**)outError;            </pre></objectivec><java><pre>
public static boolean isRegistrationMark(
   RasterImage image, 
   RegistrationMarkCommandType type, 
   int minScale, 
   int maxScale, 
   int width, 
   int height
)            </pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetRegistrationMarksCenterMass(Leadtools.RasterImage,Leadtools.LeadPoint[])">
      <summary>Finds the center of mass for each of the registration marks specified by markPoints. This method is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the transformed image.</param>
      <param name="markPoints">Array of <see cref="T:Leadtools.LeadPoint" /> structures containing mark locations.</param>
      <returns>Array of <see cref="T:Leadtools.LeadPoint" /> structures to be filled with points which represent the center of mass for each of the 
            supplied registration marks. The first center of mass point corresponds to the first registration mark in the markPoints array and so on_</returns>
      <remarks>
        <list type="bullet">
          <item>
            <description>This method is used to determine the center of mass for each supplied registration mark, to be used in 
            detecting image rotation, scaling and translation.</description>
          </item>
          <item>
            <description>The results (that is, the points representing each center of mass) returned by this method are multiplied 
            by 100 in order to obtain more precision (00.00). To get the actual results, divide by 100.</description>
          </item>
          <item>
            <description>This methods uses values that are divided internally by 100.</description>
          </item>
          <item>
            <description>This method can be used in the following manner:<br /><br /><list type="bullet"><item><description>Use <see cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand" /> to find the registration marks.</description></item><item><description>Pass data from MarkDetectedPoints to this method to determine the points representing the center of mass for 
            each registration mark.</description></item><item><description>Pass these points to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" /> to detect the image rotation, 
            scaling and translation.</description></item></list></description>
          </item>
          <item>
            <description>If you simply want to automatically straighten the image, use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale 
            and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This method does not support signed data images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</see>.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])" /> for sample code.
            </example>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.CombineCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.RotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.ResizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SearchRegistrationMarksCommand"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.GetTransformationParameters(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadPoint[])"></seealso>..
            <objectivec><pre>
+ (NSArray*)getRegistrationMarksCenterMass:(LTRasterImage*)image 
                                markPoints:(NSArray*)markPoints 
                                     error:(NSError**)outError;            </pre></objectivec><java><pre>
public static LeadPoint[] getRegistrationMarksCenterMass(
   RasterImage image, 
   LeadPoint[] markPoints
)            </pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">
      <summary>Gets the total number of entries between the start color and the end 
            color, and the index of the last occurrence of the start color. The 
            start and end colors are determined internally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="lookupTable">8-bit lookup table array to be filled by this method.</param>
      <param name="type">Flag that indicates whether the LookupTable contains signed or 
            unsigned data.</param>
      <remarks>
        <list type="bullet">
          <item>
            <description>Suppose you have a LookupTable with 4096 colors, the 
            first 200 colors are black and the last 30 are white, the rest of the
            colors between black and white are gray. This is what the method will
            provide :
            <br /><br />NumberOfEntries (property of CountLookupTableColorsResult) : 3868.
            <br /><br />FirstIndex (property of CountLookupTableColorsResult) :	199.
            </description>
          </item>
          <item>
            <description>In more detail this is:<br /><br />Total number of entries: 4096 (0 - 4095).<br /><br />First index of the end color: 4095 - 30 + 1 (+1 to add the first 
            index of the end color to the range).<br /><br />Number of occurrences of the starting color: 200 (0 - 199).<br /><br />The last index of the start color: 199.<br /><br />Total number of entries: (4095 - 30 + 1) - 199 + 1.<br /></description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale images. Support for 12 and 16-bit grayscale images is available 
            only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This method uses 8-bit lookup tables. See <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColorsExt(Leadtools.RasterColor16[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)" /> for a method that uses 16-bit lookup tables.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub CountLookupTableColorsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As CountLookupTableColorsResult = CoreUtilities.CountLookupTableColors(leadImage.GetLookupTable, CountLookupTableColorsType.Signed)
      MessageBox.Show("First Index = " + command.FirstIndex.ToString + Chr(13) + "Number Of Entries = " + command.NumberOfEntries.ToString)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CountLookupTableColorsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColors(image.GetLookupTable(), CountLookupTableColorsType.Signed);
         MessageBox.Show("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
//   
//   public async Task CountLookupTableColorsExample()
//   {
//      // Load an image
//      RasterCodecs codecs = new RasterCodecs();
//      codecs.ThrowExceptionsOnInvalidImages = true;

//      // Load the image
//      string srcFileName = @"Assets\Image1.cmp";
//      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
//      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

//      // Prepare the command
//      CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColors(image.GetLookupTable(), CountLookupTableColorsType.Signed);
//      Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
//         "Number Of Entries = " + command.NumberOfEntries);

//   }
//    </code>
        <code lang="CSWinRT">      
      public async Task CountLookupTableColorsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColors(image.GetLookupTable(), CountLookupTableColorsType.Signed);
         Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);

      }</code>
        <code lang="SilverlightCSharp">      public void CountLookupTableColorsExample(RasterImage image)
      {
         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColors(image.GetLookupTable(), CountLookupTableColorsType.Signed);
         Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CountLookupTableColorsExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As CountLookupTableColorsResult = CoreUtilities.CountLookupTableColors(image.GetLookupTable(), CountLookupTableColorsType.Signed)
         Debug.WriteLine("First Index = " &amp; command.FirstIndex + Constants.vbLf &amp; "Number Of Entries = " &amp; command.NumberOfEntries)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColorsExt(Leadtools.RasterColor16[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">
      </seealso>
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Effects.EffectsUtilities.GetUserLookupTable(System.Int32[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
            <objectivec><pre>+ (LTCountLookupTableColorsResult*)countLookupTableColors:(NSArray*)lookupTable 
type:(LTCountLookupTableColorsType)type 
rror:(NSError**)outError;            </pre></objectivec><java><pre>
public static CountLookupTableColorsResult countLookupTableColors(
   RasterColor[] lookupTable, 
   CountLookupTableColorsType type
)             </pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColorsExt(Leadtools.RasterColor16[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)">
      <summary>Gets the total number of entries between the start color and the end 
            color, and the index of the last occurrence of the start color. The 
            start and end colors are determined internally. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <isnew>2/28/2009</isnew>
      <param name="lookupTable">16-bit-bit lookup table array to be filled by this method.</param>
      <param name="type">Flag that indicates whether the LookupTable contains signed or 
            unsigned data.</param>
      <remarks>
        <list type="bullet">
          <item>
            <description>Suppose you have a LookupTable with 4096 colors, the 
            first 200 colors are black and the last 30 are white, the rest of the
            colors between black and white are gray. This is what the method will
            provide :
            <br /><br />NumberOfEntries (property of CountLookupTableColorsResult) : 3868.
            <br /><br />FirstIndex (property of CountLookupTableColorsResult) :	199.
            </description>
          </item>
          <item>
            <description>In more detail this is:<br /><br />Total number of entries: 4096 (0 - 4095).<br /><br />First index of the end color: 4095 - 30 + 1 (+1 to add the first 
            index of the end color to the range).<br /><br />Number of occurrences of the starting color: 200 (0 - 199).<br /><br />The last index of the start color: 199.<br /><br />Total number of entries: (4095 - 30 + 1) - 199 + 1.<br /></description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale images. Support for 12 and 16-bit grayscale images is 
            available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This method uses 16-bit lookup tables. See <see cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)" /> for a method that 
            uses 8-bit lookup tables.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub CountLookupTableColorsExtExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As CountLookupTableColorsResult = CoreUtilities.CountLookupTableColorsExt(leadImage.GetLookupTable16, CountLookupTableColorsType.Signed)
      MessageBox.Show("First Index = " + command.FirstIndex.ToString + Chr(13) + "Number Of Entries = " + command.NumberOfEntries.ToString)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CountLookupTableColorsExtExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Image2.dcm"));

         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColorsExt(image.GetLookupTable16(), CountLookupTableColorsType.Signed);
         MessageBox.Show("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
//   
//   public async Task CountLookupTableColorsExtExample()
//   {
//      // Load an image
//      RasterCodecs codecs = new RasterCodecs();
//      codecs.ThrowExceptionsOnInvalidImages = true;

//      // Load the image
//      string srcFileName = @"Assets\Image2.dcm";
//      StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
//      RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

//      // Prepare the command
//      CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColorsExt(image.GetLookupTable16(), CountLookupTableColorsType.Signed);
//      Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
//         "Number Of Entries = " + command.NumberOfEntries);

//   }
//    </code>
        <code lang="CSWinRT">      
      public async Task CountLookupTableColorsExtExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColorsExt(image.GetLookupTable16(), CountLookupTableColorsType.Signed);
         Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);

      }</code>
        <code lang="SilverlightCSharp">      public void CountLookupTableColorsExtExample(RasterImage image)
      {
         // Prepare the command
         CountLookupTableColorsResult command = CoreUtilities.CountLookupTableColorsExt(image.GetLookupTable16(), CountLookupTableColorsType.Signed);
         Debug.WriteLine("First Index = " + command.FirstIndex + "\n" +
            "Number Of Entries = " + command.NumberOfEntries);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CountLookupTableColorsExtExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As CountLookupTableColorsResult = CoreUtilities.CountLookupTableColorsExt(image.GetLookupTable16(), CountLookupTableColorsType.Signed)
         Debug.WriteLine("First Index = " &amp; command.FirstIndex + Constants.vbLf &amp; "Number Of Entries = " &amp; command.NumberOfEntries)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="M:Leadtools.ImageProcessing.Core.CoreUtilities.CountLookupTableColors(Leadtools.RasterColor[],Leadtools.ImageProcessing.Core.CountLookupTableColorsType)" />
      <seealso cref="T:PO.Topics.DetectingRegistrationMarks">Detecting Registration Marks</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Effects.EffectsUtilities.GetUserLookupTable(System.Int32[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
            <objectivec><pre>
+ (LTCountLookupTableColorsResult*)countLookupTableColorsExt:(NSArray*)lookupTable 
                                                        type:(LTCountLookupTableColorsType)type 
                                                       error:(NSError**)outError;            </pre></objectivec><java><pre>
public static CountLookupTableColorsResult countLookupTableColorsExt(
   RasterColor16[] lookupTable, 
   CountLookupTableColorsType type
)            </pre></java></member>
    <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType">
      <summary>Enumerated values that represent the shrink size ratio used to minimize the image internally in order to increase the speed with little loss of accuracy. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTSubtractBackgroundCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum SubtractBackgroundCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.DependOnRollingBallSize">
      <summary>(0x00000000)The shrink size depends on the ball size. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandType_DependOnRollingBallSize</pre>
      </objectivec>
      <java>
        <pre>DEPEND_ON_ROLLING_BALL_SIZE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.NoShrinking">
      <summary>(0x00000001)No Resize (Highest accuracy). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandType_NoShrinking</pre>
      </objectivec>
      <java>
        <pre>NO_SHRINKING</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToTwo">
      <summary>(0x00000002)Resize to half width and height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandType_OneToTwo</pre>
      </objectivec>
      <java>
        <pre>ONE_TO_TWO</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToFour">
      <summary>(0x00000003)Resize to quarter width and height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandType_OneToFour</pre>
      </objectivec>
      <java>
        <pre>ONE_TO_FOUR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType.OneToEight">
      <summary>(0x00000004)Resize to eighth width and height (very fast). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandType_OneToEight</pre>
      </objectivec>
      <java>
        <pre>ONE_TO_EIGHT</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags">
      <summary>Flags that indicate whether the background is darker than the foreground, and whether to show the objects without the background. You must select one from each group.
            <para>This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
             You can use a bitwise OR (|) to specify one flag from each group.
             <table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that represent whether the background is darker than the foreground</td><td>BackgroundIsDarker, BackgroundIsBrighter</td></tr><tr><td>Flags that represent whether to show the objects without a background</td><td>SubtractedImage, TheBackground</td></tr></table></remarks>
      <noexample />
      <objectivec>
        <pre>enum LTSubtractBackgroundCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum SubtractBackgroundCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.BackgroundIsDarker">
      <summary>The background in the current image is darker than the foreground. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandFlags_BackgroundIsDarker</pre>
      </objectivec>
      <java>
        <pre>BACKGROUND_IS_DARKER</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.BackgroundIsBrighter">
      <summary>The background in the current image is brighter than the foreground. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandFlags_BackgroundIsBrighter</pre>
      </objectivec>
      <java>
        <pre>BACKGROUND_IS_BRIGHTER</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.SubtractedImage">
      <summary>The output image shows the result of the subtraction between the background and the original image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandFlags_SubtractedImage</pre>
      </objectivec>
      <java>
        <pre>SUBTRACTED_IMAGE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags.TheBackground">
      <summary>The output image shows only the background. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSubtractBackgroundCommandFlags_TheBackground</pre>
      </objectivec>
      <java>
        <pre>THE_BACKGROUND</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand">
      <summary>Removes the background from the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command is useful, especially with medical images and grayscale images in correcting non-uniform brightness.</description>
          </item>
          <item>
            <description>The rolling ball algorithm works as follows:<br /><list type="number"><item><description>Consider the image to be a 3-D surface and the z-axis to be the intensity of the image [The component V from the HSV color space].</description></item><item><description>Roll a 3-D ball beneath the surface so all the points of the ball are under the surface with one or more points of the ball tangent to the surface.</description></item><item><description>The tangent points to the rolling ball are considered to be the background.</description></item><item><description>Subtract the background from the original image.</description></item></list></description>
          </item>
          <item>
            <description>The Rolling Ball Radius should be at least as large as the radius of the largest object in the image that is not part of the background to ensure the separation of the background from any objects.</description>
          </item>
          <item>
            <description>A small radius allows the detection of small objects, whereas a larger radius will detect both small and large objects.</description>
          </item>
          <item>
            <description>When subtracting the background, sometimes the result is dim. In such a case you can enhance the brightness after subtracting the background by using the brightness factor value, which functions similar to <see cref="T:Leadtools.ImageProcessing.Color.MultiplyCommand" />. Passing 100 for the brightness factor leaves the brightness unchanged.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub SubtractBackgroundCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As SubtractBackgroundCommand = New SubtractBackgroundCommand
      command.RollingBall = 50
      command.BrightnessFactor = 100
      command.ShrinkingSize = SubtractBackgroundCommandType.DependOnRollingBallSize
      command.Flags = SubtractBackgroundCommandFlags.BackgroundIsDarker
      'Apply Subtract Background effect on the image.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SubtractBackgroundCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand();
         command.RollingBall      = 50;
         command.BrightnessFactor = 100;
         command.ShrinkingSize    = SubtractBackgroundCommandType.DependOnRollingBallSize;
         command.Flags            = SubtractBackgroundCommandFlags.BackgroundIsDarker;
         //Apply Subtract Background effect on the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SubtractBackgroundCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SubtractBackgroundCommand();
         command.rollingBall      = 50;
         command.brightnessFactor = 100;
         command.shrinkingSize    = SubtractBackgroundCommandType.dependOnRollingBallSize;
         command.flags            = SubtractBackgroundCommandFlags.backgroundIsDarker;
         //Apply Subtract Background effect on the image.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task SubtractBackgroundCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand();
         command.RollingBall      = 50;
         command.BrightnessFactor = 100;
         command.ShrinkingSize    = SubtractBackgroundCommandType.DependOnRollingBallSize;
         command.Flags            = SubtractBackgroundCommandFlags.BackgroundIsDarker;
         //Apply Subtract Background effect on the image.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void SubtractBackgroundCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand();
         command.RollingBall = 50;
         command.BrightnessFactor = 100;
         command.ShrinkingSize = SubtractBackgroundCommandType.DependOnRollingBallSize;
         command.Flags = SubtractBackgroundCommandFlags.BackgroundIsDarker;
         //Apply Subtract Background effect on the image.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub SubtractBackgroundCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As SubtractBackgroundCommand = New SubtractBackgroundCommand()
         command.RollingBall = 50
         command.BrightnessFactor = 100
         command.ShrinkingSize = SubtractBackgroundCommandType.DependOnRollingBallSize
         command.Flags = SubtractBackgroundCommandFlags.BackgroundIsDarker
         'Apply Subtract Background effect on the image.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorReplaceCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <objectivec><pre>@interface LTSubtractBackgroundCommand : LTRasterCommand</pre></objectivec><java><pre>public class SubtractBackgroundCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public SubtractBackgroundCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.#ctor(System.Int32,Leadtools.ImageProcessing.Core.SubtractBackgroundCommandType,System.Int32,Leadtools.ImageProcessing.Core.SubtractBackgroundCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="rollingBall">The radius (in pixels) of the ball that will roll over the entire image to determine the background. Recommended value is 50. 
            This parameter accepts only positive values.</param>
      <param name="shrinkingSize">Shrink size ratio used to minimize the image internally in order to increase the speed with little loss of accuracy.</param>
      <param name="brightnessFactor">Brightness factor for increasing or decreasing the brightness of the image. Valid values range from 0 - 400. 
            If you pass 100 the brightness remains unchanged. Lower values darken the image while higher values lighten the image.</param>
      <param name="flags">Flags that indicate whether the background is darker than the foreground, and whether to show the objects without the background. 
            You must select one from each group.</param>
      <example>
        <code lang="VB">   Public Sub SubtractBackgroundConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As SubtractBackgroundCommand = New SubtractBackgroundCommand(50, SubtractBackgroundCommandType.DependOnRollingBallSize, 100, SubtractBackgroundCommandFlags.BackgroundIsDarker)
      ' Apply Subtract Background effect on the image.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SubtractBackgroundConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand(50, SubtractBackgroundCommandType.DependOnRollingBallSize, 100, SubtractBackgroundCommandFlags.BackgroundIsDarker);
         // Apply Subtract Background effect on the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SubtractBackgroundConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SubtractBackgroundCommand(50, SubtractBackgroundCommandType.dependOnRollingBallSize, 100, SubtractBackgroundCommandFlags.backgroundIsDarker);
         // Apply Subtract Background effect on the image.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task SubtractBackgroundConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand(50, SubtractBackgroundCommandType.DependOnRollingBallSize, 100, SubtractBackgroundCommandFlags.BackgroundIsDarker);
         // Apply Subtract Background effect on the image.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void SubtractBackgroundConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         SubtractBackgroundCommand command = new SubtractBackgroundCommand(50, SubtractBackgroundCommandType.DependOnRollingBallSize, 100, SubtractBackgroundCommandFlags.BackgroundIsDarker);
         // Apply Subtract Background effect on the image.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub SubtractBackgroundConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As SubtractBackgroundCommand = New SubtractBackgroundCommand(50, SubtractBackgroundCommandType.DependOnRollingBallSize, 100, _
                                                                                  SubtractBackgroundCommandFlags.BackgroundIsDarker)
         ' Apply Subtract Background effect on the image.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithRollingBall:(unsigned int)rollingBall 
            shrinkingSize:(LTSubtractBackgroundCommandType)shrinkingSize 
         brightnessFactor:(unsigned int)brightnessFactor 
                    flags:(LTSubtractBackgroundCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public SubtractBackgroundCommand(
   int rollingBall, 
   SubtractBackgroundCommandType shrinkingSize, 
   int brightnessFactor, 
   int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.RollingBall">
      <summary>Gets or sets the radius (in pixels) of the ball that will roll over the entire image to determine the background. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The radius (in pixels) of the ball that will roll over the entire image to determine the background. Recommended value is 50. 
            This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int rollingBall;</pre>
      </objectivec>
      <java>
        <pre>
public int getRollingBall()
public void setRollingBall(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.ShrinkingSize">
      <summary>Gets or sets the shrink size ratio used to minimize the image internally in order to increase the speed with little loss of accuracy. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Shrink size ratio used to minimize the image internally in order to increase the speed with little loss of accuracy.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTSubtractBackgroundCommandType shrinkingSize;</pre>
      </objectivec>
      <java>
        <pre>
public SubtractBackgroundCommandType getShrinkingSize()
public void setShrinkingSize(SubtractBackgroundCommandType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.BrightnessFactor">
      <summary>Gets or sets the brightness factor for increasing or decreasing the brightness of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Brightness factor for increasing or decreasing the brightness of the image. Valid values range from 0 - 400. If you pass 100 the brightness remains unchanged. 
            Lower values darken the image while higher values lighten the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int brightnessFactor;</pre>
      </objectivec>
      <java>
        <pre>
public int getBrightnessFactor()
public void setBrightnessFactor(int value) {            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand.Flags">
      <summary>Gets or sets flags that indicate whether the background is darker than the foreground, and whether to show the objects without the background. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Flags that indicate whether the background is darker than the foreground, and whether to show the objects without the background. You must select one from each group.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTSubtractBackgroundCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MedianCommand">
      <summary>Changes the color of each pixel in an image to the median color of 
            pixels in its neighborhood. This is similar to the <see cref="T:Leadtools.ImageProcessing.Effects.AverageCommand" />
            command, but it is used for noise reduction, rather than a blur effect. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>You control the effect by specifying the size of the 
            neighborhood that is used for calculating the median value. For 8x8, 
            8 in the Dimension property or pass the value 8 for the dimension parameter of the Constructor.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is 
            available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>If the image has a region, this command works only on 
            the region. If the image does not have a region, this command works on the
            entire image.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub MedianCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As MedianCommand = New MedianCommand
      'Apply a median filter with a neighborhood of 9x9 pixels.
      command.Dimension = 9

      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MedianCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         MedianCommand command  = new MedianCommand();
         //Apply a median filter with a neighborhood of 9x9 pixels.
         command.Dimension      = 9;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MedianCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command  = new MedianCommand();
         //Apply a median filter with a neighborhood of 9x9 pixels.
         command.dimension = 9;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MedianCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MedianCommand command  = new MedianCommand();
         //Apply a median filter with a neighborhood of 9x9 pixels.
         command.Dimension      = 9;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MedianCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         MedianCommand command  = new MedianCommand();
         //Apply a median filter with a neighborhood of 9x9 pixels.
         command.Dimension      = 9;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MedianCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As MedianCommand = New MedianCommand()
         'Apply a median filter with a neighborhood of 9x9 pixels.
         command.Dimension = 9
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SharpenCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MosaicCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.EmbossCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.OilifyCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SolarizeCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DeskewCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.GlowCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HalfTonePatternCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.MaskConvolutionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
            <objectivec><pre>@interface LTMedianCommand : LTRasterCommand</pre></objectivec><java><pre>public class MedianCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.#ctor">
      <summary>Initializes a new MedianCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MedianCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.#ctor(System.Int32)">
      <summary>Initializes a new MedianCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="dimension">Dimensions of the neighborhood used for filtering
            (dimension x dimension), in pixels. Only positive values are accepted.</param>
      <example>
        <code lang="VB">   Public Sub MedianConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Apply a median filter with a neighborhood of 9x9 pixels.
      Dim command As MedianCommand = New MedianCommand(9)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MedianConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Apply a median filter with a neighborhood of 9x9 pixels.
         MedianCommand command = new MedianCommand(9);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MedianConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Apply a median filter with a neighborhood of 9x9 pixels.
         var command = new MedianCommand(9);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MedianConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Apply a median filter with a neighborhood of 9x9 pixels.
         MedianCommand command = new MedianCommand(9);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MedianConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Apply a median filter with a neighborhood of 9x9 pixels.
         MedianCommand command = new MedianCommand(9);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MedianConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Apply a median filter with a neighborhood of 9x9 pixels.
         Dim command As MedianCommand = New MedianCommand(9)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithDimension:(unsigned int)dimension;</pre>
      </objectivec>
      <java>
        <pre>public MedianCommand(int dimension)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MedianCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MedianCommand.Dimension">
      <summary>Gets or sets the dimensions of the neighborhood used for filtering (Dimension x 
            Dimension), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Dimensions of the neighborhood used for filtering (Dimension x
            Dimension), in pixels. Only positive values are accepted.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MedianCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int dimension;</pre>
      </objectivec>
      <java>
        <pre>
public int getDimension()
public void setDimension(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand">
      <summary>Gets the minimum and maximum intensity values present in a 12 or 16-bit 
            grayscale or a 48 or 64-bit color image. This class is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The minimum and maximum values can be used to create 
            a lookup table, for use in the WindowLevelCommand class.</description>
          </item>
          <item>
            <description>For signed images, the minimum intensity and the 
            maximum intensity values can be negative.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale images. 
            Support for 12 and 16-bit grayscale images is available only in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub MinMaxValuesCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As MinMaxValuesCommand = New MinMaxValuesCommand
      Dim MinimumValue As Integer   'the minimum value.
      Dim MaximumValue As Integer   'the maximum value.

      MinimumValue = 0
      MaximumValue = 0

      'Get min/max values.

      command.Run(leadImage)
      MinimumValue = command.MinimumValue
      MaximumValue = command.MaximumValue
      MessageBox.Show("The Minuimum Value is : " + MinimumValue.ToString() + ", The Maximum Value is : " + MaximumValue.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MinMaxValuesCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         MinMaxValuesCommand command  = new MinMaxValuesCommand();
         int MinimumValue = 0; //the minimum value.
         int MaximumValue = 0; //the maximum value.
         //Get min/max values.
         command.Run(image);
         MinimumValue = command.MinimumValue;
         MaximumValue = command.MaximumValue;
         MessageBox.Show("The Minuimum Value is : " + MinimumValue.ToString() + ", The Maximum Value is : " + MaximumValue.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MinMaxValuesCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command  = new MinMaxValuesCommand();
         var MinimumValue = 0; //the minimum value.
         var MaximumValue = 0; //the maximum value.
         //Get min/max values.
         command.run(image);
         MinimumValue = command.minimumValue;
         MaximumValue = command.maximumValue;
         console.error("The Minuimum Value is : " + MinimumValue.toString() + ", The Maximum Value is : " + MaximumValue.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MinMaxValuesCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MinMaxValuesCommand command  = new MinMaxValuesCommand();
         int MinimumValue = 0; //the minimum value.
         int MaximumValue = 0; //the maximum value.
         //Get min/max values.
         command.Run(image);
         MinimumValue = command.MinimumValue;
         MaximumValue = command.MaximumValue;
         Debug.WriteLine("The Minuimum Value is : " + MinimumValue.ToString() + ", The Maximum Value is : " + MaximumValue.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void MinMaxValuesCommandExample(RasterImage image)
      {
         // Prepare the command
         MinMaxValuesCommand command  = new MinMaxValuesCommand();
         int MinimumValue = 0; //the minimum value.
         int MaximumValue = 0; //the maximum value.
         //Get min/max values.
         command.Run(image);
         MinimumValue = command.MinimumValue;
         MaximumValue = command.MaximumValue;
         Debug.WriteLine("The Minuimum Value is : " + MinimumValue.ToString() + ", The Maximum Value is : " + MaximumValue.ToString());
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MinMaxValuesCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As MinMaxValuesCommand = New MinMaxValuesCommand()
         Dim MinimumValue As Integer = 0 'the minimum value.
         Dim MaximumValue As Integer = 0 'the maximum value.
         'Get min/max values.
         command.Run(image)
         MinimumValue = command.MinimumValue
         MaximumValue = command.MaximumValue
         Debug.WriteLine("The Minuimum Value is : " &amp; MinimumValue.ToString() &amp; ", The Maximum Value is : " &amp; MaximumValue.ToString())
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">Color Halftone and Halftone Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <objectivec><pre>@interface LTMinMaxValuesCommand : LTRasterCommand</pre></objectivec><java><pre>public class MinMaxValuesCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.#ctor">
      <summary>Initializes a new MinMaxValuesCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MinMaxValuesCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.MinimumValue">
      <summary>This property is updated with the minimum intensity value 
            present in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the minimum intensity 
            value present in the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int minimumValue;</pre>
      </objectivec>
      <java>
        <pre>public int getMinimumValue()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinMaxValuesCommand.MaximumValue">
      <summary>This property is updated with the maximum intensity value present 
            in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the maximum intensity value 
            present in the image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int maximumValue;</pre>
      </objectivec>
      <java>
        <pre>public int getMaximumValue()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HalfToneCommandType">
      <summary>Enumeration that indicates the type of halftoning to perform. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTHalfToneCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum HalfToneCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Print">
      <summary>(0x00000000)Halftone for printing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Print</pre>
      </objectivec>
      <java>
        <pre>PRINT</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.View">
      <summary>(0x00000001)Halftone for display. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_View</pre>
      </objectivec>
      <java>
        <pre>VIEW</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Rectangular">
      <summary>(0x00000002)Rectangular halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Rectangular</pre>
      </objectivec>
      <java>
        <pre>RECTANGULAR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Circular">
      <summary>(0x00000003)Circular halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Circular</pre>
      </objectivec>
      <java>
        <pre>CIRCULAR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Elliptical">
      <summary>(0x00000004)Elliptical halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Elliptical</pre>
      </objectivec>
      <java>
        <pre>ELLIPTICAL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Random">
      <summary>(0x00000005)Random halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Random</pre>
      </objectivec>
      <java>
        <pre>RANDOM</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.Linear">
      <summary>(0x00000006)Linear halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_Linear</pre>
      </objectivec>
      <java>
        <pre>LINEAR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.HalfToneCommandType.UserDefined">
      <summary>(0x00000007)User defined halftone. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTHalfToneCommandType_UserDefined</pre>
      </objectivec>
      <java>
        <pre>USER_DEFINED</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.HalfToneCommand">
      <summary>Converts a 1-, 4-, 8-, 16-, 24-, or 32-bit image to a halftoned image, with a specified pattern rotation. A halftoned image is a 1-bit image that has been dithered for black and white printing or display. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>For the <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined option, the number of images in the list must be at least equal to (Dimension * Dimension + 1). Images with higher indexes correspond to higher intensity values.</description>
          </item>
          <item>
            <description>This command can process the whole image or a region of the image.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images.</description>
          </item>
          <item>
            <description>This command does not support signed data images.</description>
          </item>
          <item>
            <description>This command supports 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub HalfToneCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Try
         Dim command As HalfToneCommand = New HalfToneCommand
         command.Angle = 0
         command.Dimension = 2
         command.Type = HalfToneCommandType.View
         'Halftone the image.
         command.Run(leadImage)
      Catch ex As Exception
         MessageBox.Show(ex.Message, "HalfToneTest", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
      End Try

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HalfToneCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         HalfToneCommand command = new HalfToneCommand();
         command.Angle = 0;
         command.Dimension = 2;
         command.Type = HalfToneCommandType.View;
         //Halftone the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HalfToneCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HalfToneCommand();
         command.angle = 0;
         command.dimension = 2;
         command.type = HalfToneCommandType.view;
         //Halftone the image.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task HalfToneCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HalfToneCommand command = new HalfToneCommand();
         command.Angle = 0;
         command.Dimension = 2;
         command.Type = HalfToneCommandType.View;
         //Halftone the image.
         command.Run(image);

      }</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">Color Halftone and Halftone Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.GrayscaleCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleExtendedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AutoColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorLevelCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToDuotoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.GrayScaleToMultitoneCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SelectiveColorCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SkeletonCommand"></seealso>.
            <objectivec><pre>@interface LTHalftoneCommand : LTRasterCommand</pre></objectivec><java><pre>public class HalfToneCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public HalfToneCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.#ctor(Leadtools.ImageProcessing.Core.HalfToneCommandType,System.Int32,System.Int32,Leadtools.RasterImage)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="type">Value that indicates the type of halftoning to perform.</param>
      <param name="angle">The angle of rotation, expressed in hundredths of degrees. A value of 0 produces a horizontal halftone pattern. This parameter specifies the number of degrees to change the pattern. Positive values rotate the pattern clockwise; negative values rotate the pattern counterclockwise. This value is ignored if the selected halftone pattern is <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Rectangle, <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Circle or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Random or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined.</param>
      <param name="dimension">Value that indicates the size of the grain. This value is ignored if the selected halftone pattern is <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.View or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Print. If the pattern is not <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.View or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Print, dimension should be &gt;= 1. If this parameter is &lt; 1 this command will return ERROR_INV_PARAMETER.</param>
      <param name="userDefinedImage">List of images that will be used in half toning if the <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined option is selected.</param>
      <example>
        <code lang="VB">   Public Sub HalfToneConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Try
         Dim images() As RasterImage
         ReDim images(1)
         images(0) = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Ulay3.bmp"), 24, CodecsLoadByteOrder.Bgr, 1, 1)
         images(1) = images(0)
         images(0).AddPage(images(1))
         Dim command As HalfToneCommand = New HalfToneCommand(HalfToneCommandType.UserDefined, 0, 1, images(0))
         'Halftone the image.
         command.Run(leadImage)
      Catch ex As Exception
         MessageBox.Show(ex.Message, "HalfToneTest", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
      End Try

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void HalfToneConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage[] images = new RasterImage[2];
         images[0] = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Ulay3.bmp"), 24, CodecsLoadByteOrder.Bgr, 1, 1);
         images[1] = images[0];
         images[0].AddPage(images[1]);
         HalfToneCommand command = new HalfToneCommand(HalfToneCommandType.UserDefined, 0, 1, images[0]);
         // Halftone the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function HalfToneConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var sourceImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      sourceImage = image;
      srcFileName = "Assets\\Ulay1.bmp";
      return Tools.AppInstallFolder().getFileAsync(srcFileName);
   }).then(function (loadFile) { 
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile),24, Leadtools.Codecs.CodecsLoadByteOrder.bgr, 1, 1);
   }).then(function (image) {
      var images = new Array();
      images[0] = image;
      images[1] = images[0];
      images[0].addPage(images[1]);
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HalfToneCommand(HalfToneCommandType.userDefined, 0, 1, images[0]);
         // Halftone the image.
         command.run(sourceImage);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task HalfToneConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         RasterImage[] images = new RasterImage[2];

         srcFileName = @"Assets\Ulay1.bmp";
         loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         images[0] = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile),24, CodecsLoadByteOrder.Bgr, 1, 1);
         images[1] = images[0];
         images[0].AddPage(images[1]);
         HalfToneCommand command = new HalfToneCommand(HalfToneCommandType.UserDefined, 0, 1, images[0]);
         // Halftone the image.
         command.Run(image);

      }</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithType:(LTHalfToneCommandType)type 
             angle:(int)angle 
         dimension:(unsigned int)dimension 
  userDefinedImage:(LTRasterImage*)userDefinedImage;            </pre>
      </objectivec>
      <java>
        <pre>
public HalfToneCommand(
   HalfToneCommandType type, 
   int angle, 
   int dimension, 
   RasterImage userDefinedImage
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.HalfToneCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.UserDefinedImage">
      <summary>Gets or sets the list of images that will be used in half toning if the <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined option is selected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>List of images that will be used in half toning if the <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined option is selected.</value>
      <example>
        <code lang="VB">   Public Sub UserDefinedImagePropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Try
         Dim command As HalfToneCommand = New HalfToneCommand
         command.Angle = 0
         command.Dimension = 1
         command.Type = HalfToneCommandType.UserDefined
         Dim images() As RasterImage
         ReDim images(1)
         images(0) = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Ulay3.bmp"), 24, CodecsLoadByteOrder.Bgr, 1, 1)
         images(1) = images(0)
         images(0).AddPage(images(1))
         'Halftone the image.
         command.Run(leadImage)
      Catch ex As Exception
         MessageBox.Show(ex.Message, "HalfToneTest", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
      End Try

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void UserDefinedImagePropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         HalfToneCommand command = new HalfToneCommand();
         command.Angle = 0;
         command.Dimension = 1;
         command.Type = HalfToneCommandType.UserDefined;
         RasterImage [] images = new RasterImage[2];
         images[0] = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Ulay3.bmp"), 24, CodecsLoadByteOrder.Bgr, 1, 1);
         images[1] = images[0];
         images[0].AddPage(images[1]);
         command.UserDefinedImage = images[0];
         // Halftone the image.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function UserDefinedImagePropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var sourceImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      sourceImage = image;
      srcFileName = "Assets\\Ulay1.bmp";
      return Tools.AppInstallFolder().getFileAsync(srcFileName);
   }).then(function (loadFile) { 
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile),24, Leadtools.Codecs.CodecsLoadByteOrder.bgr, 1, 1);
   }).then(function (image) {
      var images = new Array();
      images[0] = image;
      images[1] = images[0];
      images[0].addPage(images[1]);
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new HalfToneCommand();
         command.angle = 0;
         command.dimension = 1;
         command.type = HalfToneCommandType.userDefined;
         command.userDefinedImage = images[0];
         // Halftone the image.
         command.run(sourceImage);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task UserDefinedImagePropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         HalfToneCommand command = new HalfToneCommand();
         command.Angle = 0;
         command.Dimension = 1;
         command.Type = HalfToneCommandType.UserDefined;
         RasterImage [] images = new RasterImage[2];
         srcFileName = @"Assets\Ulay1.bmp";
         loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         images[0] = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile), 24, CodecsLoadByteOrder.Bgr, 1, 1);
         images[1] = images[0];
         images[0].AddPage(images[1]);
         command.UserDefinedImage = images[0];
         // Halftone the image.
         command.Run(image);

      }</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* userDefinedImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getUserDefinedImage()
public void setUserDefinedImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Type">
      <summary>Gets or sets a value that indicates the type of halftoning to perform. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the type of halftoning to perform.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTHalfToneCommandType type;</pre>
      </objectivec>
      <java>
        <pre>
public HalfToneCommandType getType()
public void setType(HalfToneCommandType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Angle">
      <summary>Gets or sets the angle of rotation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The angle of rotation, expressed in hundredths of degrees. A value of 0 produces a horizontal halftone pattern.
            This property specifies the number of degrees to change the pattern. Positive values rotate the pattern clockwise;
            negative values rotate the pattern counterclockwise. This value is ignored if the selected halftone pattern is
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Rectangle, 
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Circular, 
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Random or 
            <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.UserDefined.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.HalfToneCommand.Dimension">
      <summary>Gets or sets a value that indicates the size of the grain. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the size of the grain. This value is ignored if the selected halftone pattern is <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.View or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Print. If the pattern is not <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.View or <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommandType" />.Print, Dimension should be &gt;= 1. If this property is &lt; 1 this command will return ERROR_INV_PARAMETER.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.HalfToneCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int dimesion;</pre>
      </objectivec>
      <java>
        <pre>
public int getDimension()
public void setDimension(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand">
      <summary>This command investigate the image and return it's type whether colored, grayscale or black and white. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <remarks>
        <para>The returned type is returned through <see cref="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.ColorType" /> property.</para>
        <para>The confidence percentage can be checked using the <see cref="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Confidence" /> property.</para>
      </remarks>
      <example>
        <code lang="VB">        Public Sub ImageColorTypeCommandExample()

        ' Load an image
        Dim codecs As RasterCodecs = New RasterCodecs()
        codecs.ThrowExceptionsOnInvalidImages = True

        Dim image As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

        ' Prepare the command
        Dim command As ImageColorTypeCommand = New ImageColorTypeCommand()
        'Apply 
        command.Run(image)

        MessageBox.Show("Color Type = " + command.ColorType.ToString() + "\n" + "Confidence = " + command.Confidence.ToString())

    End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">       public void ImageColorTypeCommandExample()
       {
          // Load an image
          RasterCodecs codecs = new RasterCodecs();
          codecs.ThrowExceptionsOnInvalidImages = true;

          RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

          // Prepare the command
          ImageColorTypeCommand command = new ImageColorTypeCommand();
          //Apply 
          command.Run(image);

          MessageBox.Show("Color Type = " + command.ColorType.ToString() + "\n" + "Confidence = " + command.Confidence.ToString());

       }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
      </example>
      <objectivec>
        <pre>@interface LTImageColorTypeCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ImageColorTypeCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ImageColorTypeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.#ctor(Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <param name="flag">flag that controls the behavior of the command algorithm by making it favor one type over the other.</param>
      <remarks>
            To get the confidence percentage, refer to <see cref="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Confidence" /> property.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> example.
            </example>
      <objectivec>
        <pre>- (id)initWithFlag:(LTImageColorTypeCommandFlags)flag;</pre>
      </objectivec>
      <java>
        <pre>public ImageColorTypeCommand(ImageColorTypeCommandFlags flag)</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.ColorType">
      <summary>Gets the type of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.ImageColorType" /> enumeration value that represents the type of the image.
            </value>
      <remarks>
        <para>To make the algorithm favor one type over the other, refer to <see cref="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Flag" /> property.</para>
        <para>To get the confidence percentage, refer to <see cref="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Confidence" /> property.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> example.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTImageColorType colorType;</pre>
      </objectivec>
      <java>
        <pre>public ImageColorType getColorType()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Confidence">
      <summary>Gets the result accuracy percentage. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <value>
            The accuracy of the result.
            </value>
      <remarks>
            If the value is 100, that means the result is 100 percent accurate.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommand" /> example.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int confidence;</pre>
      </objectivec>
      <java>
        <pre>public int getConfidence()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ImageColorTypeCommand.Flag">
      <summary>Gets or sets the flag that controls the behavior of the command algorithm by making it favor one type over the other. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <isnew>5/26/2011</isnew>
      <value>
        <see cref="T:Leadtools.ImageProcessing.Core.ImageColorTypeCommandFlags" /> enumeration value that represents the flag that controls the behavior of the command algorithm by making it favor one type over the other.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) LTImageColorTypeCommandFlags flag;</pre>
      </objectivec>
      <java>
        <pre>
public ImageColorTypeCommandFlags getFlag()
public void setFlag(ImageColorTypeCommandFlags value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">
      <summary>Represents the algorithm type used in resizing the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTResizeInterpolateCommandType</pre>
      </objectivec>
      <java>
        <pre>public enum ResizeInterpolateCommandType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Normal">
      <summary>(0x00000000)This is the fastest one. Not recommended at all, because aliasing is present everywhere. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Normal</pre>
      </objectivec>
      <java>
        <pre>NORMAL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Resample">
      <summary>(0x00000002)Use linear interpolation and averaging to produce a higher-quality image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Resample</pre>
      </objectivec>
      <java>
        <pre>RESAMPLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bicubic">
      <summary>(0x00000004)Bicubic interpolation and averaging produces a high quality image. This is slower than 
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Bicubic</pre>
      </objectivec>
      <java>
        <pre>BICUBIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Triangle">
      <summary>(0x00000005)Triangular-peaked weighting average produces a high quality image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Triangle</pre>
      </objectivec>
      <java>
        <pre>TRIANGLE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Hermite">
      <summary>(0x00000006)Hermite interpolation produces a good quality image better than 
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bresenham</see> 
            but less than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>. 
            It uses the cubic spline from Hermite interpolation. This is Slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Hermite</pre>
      </objectivec>
      <java>
        <pre>HERMITE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bell">
      <summary>(0x00000007)Bell interpolation to produces a high quality .This filter blurs the image and at the same time it resizes If you want a 
            performance similar to bicubic filtering, but your source image is noisy, then try this one. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Bell</pre>
      </objectivec>
      <java>
        <pre>BELL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.QuadraticBSpline">
      <summary>(0x00000008)Quadratic B-Spline interpolation produces a smooth quality image but less than 
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.CubicBSpline</see>. 
            This is Faster than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see> but 
            less than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.CubicBSpline</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_QuadraticBSpline</pre>
      </objectivec>
      <java>
        <pre>QUADRATIC_B_SPLINE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.CubicBSpline">
      <summary>(0x00000009)Cubic B-Spline interpolation produces a very smooth quality image(most blurry). 
            One step further from <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>. 
            A bit slower and more blurred image, but less noisy and less sharp though). 
            This is faster than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_CubicBSpline</pre>
      </objectivec>
      <java>
        <pre>CUBIC_B_SPLINE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.BoxFilter">
      <summary>(0x0000000A)Equivalent to Nearest Neighbor on upsampling, averages pixels on downsampling, gives best result for images with single pixels lines. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_BoxFilter</pre>
      </objectivec>
      <java>
        <pre>BOX_FILTER</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Lanczos">
      <summary>(0x0000000B)Lanczos interpolation that uses Sinc (sinx/x) to produce a high quality image. Provides the best quality but it's rather slow. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Lanczos</pre>
      </objectivec>
      <java>
        <pre>LANCZOS</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Michell">
      <summary>(0x0000000C)Michel interpolation produces a smooth quality image but less than 
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>. 
            A bit slower and more blurred image, but less noisy and less sharp though). This is 
            faster than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.QuadraticBSpline</see>. This is 
            slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bell</see>. A bit slower and more blurred image, but less noisy and less sharp though). 
            This is slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Michell</pre>
      </objectivec>
      <java>
        <pre>MICHELL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Cosine">
      <summary>(0x0000000D)Uses the Cosine function in the interpolation to produce a good quality image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Cosine</pre>
      </objectivec>
      <java>
        <pre>COSINE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Catrom">
      <summary>(0x0000000E)CatmullRom interpolation produces a high quality image. Slower than  <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>, 
            but faster than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Lanczos</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Catrom</pre>
      </objectivec>
      <java>
        <pre>CATROM</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Quadratic">
      <summary>(0x0000000F)Quadratic interpolation produces a high quality image, but less than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>. Slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Quadratic</pre>
      </objectivec>
      <java>
        <pre>QUADRATIC</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.CubicConvolution">
      <summary>(0x00000010)Interpolation to produce high quality image (enhances the image edges). Slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bicubic</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_CubicConvolution</pre>
      </objectivec>
      <java>
        <pre>CUBIC_CONVOLUTION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bilinear">
      <summary>(0x00000011)Bilinear interpolation and averaging produces a high-quality image. It is fast but 
            slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see> and
            <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bresenham</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Bilinear</pre>
      </objectivec>
      <java>
        <pre>BILINEAR</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType.Bresenham">
      <summary>(0x00000012)Bresenham interpolation and averaging produces a good quality image(better than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see>). This is 
            slower than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Normal</see> but faster 
            than <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType">ResizeInterpolateCommandType.Bilinear</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTResizeInterpolateCommandType_Bresenham</pre>
      </objectivec>
      <java>
        <pre>BRESENHAM</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand">
      <summary>Applies different kinds of algorithms on images to resize them into the desired size. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>
            This command keeps the same bitmap handle and resizes the bitmap that it references.
            </description>
          </item>
          <item>
            <description>
            This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits.
            </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public Sub ResizeCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim command As ResizeInterpolateCommand = New ResizeInterpolateCommand()

      ' Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
      command.Width = 50
      command.Height = 50
      command.ResizeType = ResizeInterpolateCommandType.Bilinear
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ResizeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         ResizeInterpolateCommand command = new ResizeInterpolateCommand();

         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         command.Width = 50;
         command.Height = 50;
         command.ResizeType = ResizeInterpolateCommandType.Bilinear;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ResizeCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ResizeInterpolateCommand();
         
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         command.width = 50;
         command.height = 50;
         command.resizeType = ResizeInterpolateCommandType.bilinear;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ResizeCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ResizeInterpolateCommand command = new ResizeInterpolateCommand();

         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         command.Width = 50;
         command.Height = 50;
         command.ResizeType = ResizeInterpolateCommandType.Bilinear;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ResizeCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ResizeInterpolateCommand command = new ResizeInterpolateCommand();
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         command.Width = 50;
         command.Height = 50;
         command.ResizeType = ResizeInterpolateCommandType.Bilinear;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ResizeCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ResizeInterpolateCommand = New ResizeInterpolateCommand()
         ' Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         command.Width = 50
         command.Height = 50
         command.ResizeType = ResizeInterpolateCommandType.Bilinear
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTResizeInterpolateCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ResizeInterpolateCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> class with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> for example code.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ResizeInterpolateCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.#ctor(System.Int32,System.Int32,Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType)">
      <summary>Initializes a new instance of <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> class with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="width">Value that represents the desired image's width in pixels.</param>
      <param name="height">Value that represents the desired image's height in pixels.</param>
      <param name="resizeType">Value that represents the algorithm type used in resizing the image. For possible values refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType" />.</param>
      <example>
        <code lang="VB">   Public Sub ResizeConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
      Dim command As ResizeInterpolateCommand = New ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.Bilinear)
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ResizeConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         ResizeInterpolateCommand command = new ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.Bilinear);
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ResizeConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         var command = new ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.bilinear);
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ResizeConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         ResizeInterpolateCommand command = new ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.Bilinear);
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void ResizeConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         ResizeInterpolateCommand command = new ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.Bilinear);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ResizeConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Resize the bitmap into 50 pixels x 50 pixels using the Bilinear algorithm.
         Dim command As ResizeInterpolateCommand = New ResizeInterpolateCommand(50, 50, ResizeInterpolateCommandType.Bilinear)
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithWidth:(int)width 
             height:(int)height 
               type:(LTResizeInterpolateCommandType)resizeType;            </pre>
      </objectivec>
      <java>
        <pre>
public ResizeInterpolateCommand(
   int width, 
   int height, 
   ResizeInterpolateCommandType resizeType
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this method.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.Width">
      <summary>Gets or sets the desired width for the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the desired image's width in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.Height">
      <summary>Gets or sets the desired height for the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the desired image's height in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand.ResizeType">
      <summary>Gets or sets the resize algorithm type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the algorithm type used in resizing the image. For possible values refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommandType" />.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ResizeInterpolateCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTResizeInterpolateCommandType resizeType;</pre>
      </objectivec>
      <java>
        <pre>
public ResizeInterpolateCommandType getResizeType()
public void setResizeType(ResizeInterpolateCommandType value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs">
      <summary>Handles each rake found by <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents rakeRemoveCommand_S4 As RakeRemoveCommand
   Public Sub RakeRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      rakeRemoveCommand_S4 = New RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, False)
      rakeRemoveCommand_S4.Run(leadImage)

   End Sub

   Private Sub RakeRemoveCommand_RakeRemove_S4(ByVal sender As Object, ByVal e As RakeRemoveCommandEventArgs) Handles rakeRemoveCommand_S4.RakeRemove
      Dim ee As RakeRemoveCommandEventArgs = New RakeRemoveCommandEventArgs(e.Region, e.Length)
      e.Status = RemoveStatus.Remove

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void RakeRemoveCommandEventArgsExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            RakeRemoveCommand command = new RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, false);
            command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S4);
            command.Run(image);

        }

        private void RakeRemoveEvent_S4(object sender, RakeRemoveCommandEventArgs e)
        {
            RakeRemoveCommandEventArgs ee = new RakeRemoveCommandEventArgs( e.Region,  e.Length);
            e.Status = RemoveStatus.Remove;

        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task RakeRemoveCommandEventArgsExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        RakeRemoveCommand command = new RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, false);
   //        command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S4);
   //        command.Run(image);

   //    }

   //    private void RakeRemoveEvent_S4(object sender, RakeRemoveCommandEventArgs e)
   //    {
   //        RakeRemoveCommandEventArgs ee = new RakeRemoveCommandEventArgs( e.Region,  e.Length);
   //        e.Status = RemoveStatus.Remove;
            
   //    }
   //     </code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs.#ctor(Leadtools.RasterRegion,System.Int32)">
      <summary>Initializes a new RakeRemoveCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="region">LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the rake to be removed. It is the programmer's responsibility to dispose of this region when it is no longer needed.</param>
      <param name="length">Length (in pixels) of the rake base line.</param>
      <example>
        <code lang="VB">   Public WithEvents lineRemoveCommand_S4 As LineRemoveCommand
   Public Sub LineRemoveCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      lineRemoveCommand_S4 = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
      lineRemoveCommand_S4.Run(leadImage)

   End Sub

   Private Sub LineRemoveCommand_LineRemove_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs) Handles lineRemoveCommand_S4.LineRemove
      Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length)
      e.Status = RemoveStatus.Remove
      If Not (e.Region Is Nothing) Then
         e.Image.SetRegion(Nothing, e.Region, RasterRegionCombineMode.AndNotRegion)
      End If
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function LineRemoveCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\clean.tif";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new LineRemoveCommand(LineRemoveCommandFlags.useGap | LineRemoveCommandFlags.callBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.horizontal);
         command.addEventListener("lineremove", LineRemoveEvent_S4);
         command.run(image);
      }
   });
}

function LineRemoveEvent_S4(e)
{
   with (Leadtools.ImageProcessing.Core) {
      var ee = new LineRemoveCommandEventArgs(e.image, e.region, e.startRow, e.startColumn, e.length);
      e.status = RemoveStatus.remove;
      if (e.region != null)
         e.Image.setRegion(null, e.region, Leadtools.RasterRegionCombineMode.andNotRegion);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task LineRemoveCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);

      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
         LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, e.Region, e.StartRow, e.StartColumn, e.Length);
         e.Status= RemoveStatus.Remove;
         if(e.Region != null)
            e.Image.SetRegion(null, e.Region, RasterRegionCombineMode.AndNotRegion);
      }</code>
        <code lang="SilverlightCSharp">      public void LineRemoveCommandEventArgsExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         LineRemoveCommand command = new LineRemoveCommand(LineRemoveCommandFlags.UseGap | LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal);
         command.LineRemove += new EventHandler&lt;LineRemoveCommandEventArgs&gt;(LineRemoveEvent_S4);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void LineRemoveEvent_S4(object sender, LineRemoveCommandEventArgs e)
      {
          LineRemoveCommandEventArgs ee = new LineRemoveCommandEventArgs(e.Image, null, e.StartRow, e.StartColumn, e.Length);
          e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub LineRemoveCommandEventArgsExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As LineRemoveCommand = New LineRemoveCommand(LineRemoveCommandFlags.UseGap Or _
                                                                  LineRemoveCommandFlags.CallBackRegion, 200, 5, 7, 10, 2, 2, LineRemoveCommandType.Horizontal)
         AddHandler command.LineRemove, AddressOf LineRemoveEvent_S4
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub LineRemoveEvent_S4(ByVal sender As Object, ByVal e As LineRemoveCommandEventArgs)
          Dim ee As LineRemoveCommandEventArgs = New LineRemoveCommandEventArgs(e.Image, Nothing, e.StartRow, e.StartColumn, e.Length)
          e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs.Region">
      <summary>Gets a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the rake to be removed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> representing the rake to be removed. The region will need to be disposed of when it is no longer needed.</value>
      <example>
            Refer to the <see cref="M:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs.#ctor(Leadtools.RasterRegion,System.Int32)">RakeRemoveCommandEventArgs(R Region, int)</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs.Length">
      <summary>Gets the length of the base line of the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>The Length of the base line of the rake, in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs.Status">
      <summary>Gets or sets a value that represents the status of the rake removal process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Value that represents the status of the rake removal process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand">
      <summary>Removes isolated Data Rakes in 1-bit black and white images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <keywords>Document cleanup|Removing|Cleanup|1-bit images</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description> Removes data entry rakes from scanned text documents. 
            If the lines pass through text, the <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" /> properties and Constructor parameters can be configured 
            to remove or preserve the text. The behavior of this command can be further modified by using an Event Handler that handles the <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommandEventArgs" />. </description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents rakeRemoveCommand_S1 As RakeRemoveCommand
   Public Sub RakeRemoveCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      rakeRemoveCommand_S1 = New RakeRemoveCommand

      rakeRemoveCommand_S1.MinLength = 50
      rakeRemoveCommand_S1.MinWallHeight = 10
      rakeRemoveCommand_S1.MaxWidth = 3
      rakeRemoveCommand_S1.MaxWallPercent = 25
      rakeRemoveCommand_S1.MaxSideteethLength = 60
      rakeRemoveCommand_S1.MaxMidteethLength = 50
      rakeRemoveCommand_S1.Gaps = 1
      rakeRemoveCommand_S1.Variance = 1
      rakeRemoveCommand_S1.TeethSpacing = 5
      rakeRemoveCommand_S1.AutoFilter = False
      rakeRemoveCommand_S1.Run(leadImage)


   End Sub

   Private Sub RakeRemoveCommand_RakeRemove_S1(ByVal sender As Object, ByVal e As RakeRemoveCommandEventArgs) Handles rakeRemoveCommand_S1.RakeRemove
      MessageBox.Show("Rake length is " + "( " + e.Length.ToString() + " )")
      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void RakeRemoveCommandExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            RakeRemoveCommand command = new RakeRemoveCommand();
            command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S1);
            command.MinLength = 50;
            command.MinWallHeight = 10;
            command.MaxWidth = 3;
            command.MaxWallPercent = 25;
            command.MaxSideteethLength = 60;
            command.MaxMidteethLength = 50;
            command.Gaps = 1;
            command.Variance = 1;
            command.TeethSpacing = 5;
            command.AutoFilter = false;

            command.Run(image);

        }

        private void RakeRemoveEvent_S1(object sender, RakeRemoveCommandEventArgs e)
        {
            MessageBox.Show("Rake length is " + "( " + e.Length.ToString() + " )" );
            e.Status = RemoveStatus.Remove;
        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task RakeRemoveCommandExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        RakeRemoveCommand command = new RakeRemoveCommand();
   //        command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S1);
   //        command.MinLength = 50;
   //        command.MinWallHeight = 10;
   //        command.MaxWidth = 3;
   //        command.MaxWallPercent = 25;
   //        command.MaxSideteethLength = 60;
   //        command.MaxMidteethLength = 50;
   //        command.Gaps = 1;
   //        command.Variance = 1;
   //        command.TeethSpacing = 5;
   //        command.AutoFilter = false;
            
   //        command.Run(image);
            
   //    }

   //    private void RakeRemoveEvent_S1(object sender, RakeRemoveCommandEventArgs e)
   //    {
   //        Debug.WriteLine("Rake length is " + "( " + e.Length.ToString() + " )" );
   //        e.Status = RemoveStatus.Remove;
   //    }
   //     </code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SmoothCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommand.#ctor">
      <summary>Initializes a new RakeRemoveCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new RakeRemoveCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <param name="minLength">
            Minimum Length of the base line of the rake.
            </param>
      <param name="maxWidth">
            Maximum width at any given area of the base line of the rake.
            </param>
      <param name="minWallHeight">
            Minimum height of the wall that intercepts the rake.
            </param>
      <param name="maxWallPercent">
            Maximum percentage of that walls that intercept the rake.
            </param>
      <param name="maxSideteethLength">
            Maximum length of the side vertical structures of the rake.
            </param>
      <param name="maxMidteethLength">
            Maximum length of the middle vertical  structures of the rake.
            </param>
      <param name="teethSpacing">
            Approximate space between vertical middle structures belonging to the rake in pixels. Higher values yield faster results, 
            lower values yield more accurate results.
            </param>
      <param name="gaps">
            Maximum length of a break or a hole in the base line of the rake.
            </param>
      <param name="variance">
            &gt;Amount of width change that is tolerated between adjacent line slices the constitute the base line of the rake.
            </param>
      <param name="autoFilter">
            A value that indicates whether to filter the image from rakes using auto filter or not.
            </param>
      <example>
        <code lang="VB">   Public WithEvents rakeRemoveCommand_S2 As RakeRemoveCommand
   Public Sub RakeRemoveConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      rakeRemoveCommand_S2 = New RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, False)
      rakeRemoveCommand_S2.Run(leadImage)

   End Sub

   Private Sub RakeRemoveCommand_RakeRemove_S2(ByVal sender As Object, ByVal e As RakeRemoveCommandEventArgs) Handles rakeRemoveCommand_S2.RakeRemove
      MessageBox.Show("Rake length is " + "( " + e.Length.ToString() + " )")

      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">        public void RakeRemoveConstructorExample()
        {
            // Load an image
            RasterCodecs codecs = new RasterCodecs();
            codecs.ThrowExceptionsOnInvalidImages = true;

            RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

            // Prepare the command
            RakeRemoveCommand command = new RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, false);
            command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S2);
            command.Run(image);

        }

        private void RakeRemoveEvent_S2(object sender, RakeRemoveCommandEventArgs e)
        {
            MessageBox.Show("Rake length is " + "( " + e.Length.ToString() + " )");
            e.Status = RemoveStatus.Remove;
        }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
   //    
   //    public async Task RakeRemoveConstructorExample()
   //    {
   //        // Load an image
   //        RasterCodecs codecs = new RasterCodecs();
   //        codecs.ThrowExceptionsOnInvalidImages = true;

   //        // Load the image
   //        string srcFileName = @"Assets\Image1.cmp";
   //        StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
   //        RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

   //        // Prepare the command
   //        RakeRemoveCommand command = new RakeRemoveCommand(50, 3, 10, 25, 60, 50, 5, 1, 1, false);
   //        command.RakeRemove += new EventHandler&lt;RakeRemoveCommandEventArgs&gt;(RakeRemoveEvent_S2);
   //        command.Run(image);

   //    }

   //    private void RakeRemoveEvent_S2(object sender, RakeRemoveCommandEventArgs e)
   //    {
   //        Debug.WriteLine("Rake length is " + "( " + e.Length.ToString() + " )");
   //        e.Status = RemoveStatus.Remove;
   //    }
   //     </code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.RakeRemoveCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.RakeRemoveCommand.RakeRemove">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.AutoFilter">
      <summary>Gets or sets a value that indicates whether the rake removal is done by automatic filtering. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>true if rake removal is performed by automatic filtering, otherwise it is false. </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.Gaps">
      <summary>Gets or sets the maximum length of a break or a hole in a base line of a rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Maximum length of a break or a hole in a line. This can be used to remove dotted rakes, dashed rakes,
             or rakes that have breaks due to scanning. </value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MaxMidteethLength">
      <summary>Gets or sets the maximum length of the middle vertical structures of the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Maximum length of the middle vertical structures of the rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MaxSideteethLength">
      <summary>Gets or sets the maximum length of the side vertical structures of the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Maximum length of the side vertical structures of the rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MaxWallPercent">
      <summary>Gets or sets the maximum percentage of  the wall that intercepts the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Maximum percentage of the wall that intercepts the rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MaxWidth">
      <summary>Gets or sets the maximum width of the base line of the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Maximum width of the base line of the rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MinLength">
      <summary>Gets or sets the minimum length  of the base line of the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Minimum length of the base line of the rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.MinWallHeight">
      <summary>Gets or sets the minimum height of the wall that intercepts the rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Amount of space between the middle vertical structures belonging to the  rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.TeethSpacing">
      <summary>Gets or sets the space between the middle vertical structures belonging to the  rake. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Amount of space between the middle vertical structures belonging to the  rake.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.RakeRemoveCommand.Variance">
      <summary>Gets or sets the amount of width change that is tolerated between adjacent line slices. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <value>Amount of width change that is tolerated between adjacent line slice.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.RakeRemoveCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand">
      <summary>Converts grayscale signed image to an unsigned one by shifting all the negative value of the image data, so the minimum negative value will be zero. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This command is similar to <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand" />. 
            This command automatically determines the value to be shift in order to convert the image to unsigned image.
            <br></br>This command is used usually before the command <see cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand" />.
            <br></br>This command updates the <see cref="P:Leadtools.RasterImage.Signed" /> property of the <see cref="T:Leadtools.RasterImage" />.
            <br></br>This command also updates the <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" /> properties of the <see cref="T:Leadtools.RasterImage" />.
            <br></br>This command does not support 8-bit images.
            <br></br>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only 
            in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.
            <br></br>This command supports signed data images.
            <br></br>This command does not support 32-bit grayscale images.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub MinimumToZeroCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      ' Convert the image to unsigned image by shifting the negative values to become positive.
      Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand
      MinToZCommand.Run(leadImage)

      ' Apply multiscale enhancement
      Dim MultiScaleCommand As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement)

      ' Convert the image back to signed by shifting the same amount in the negative side.
      Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand
      command.MinimumInput = -32767
      command.MaximumInput = 32766
      command.MinimumOutput = 0
      command.MaximumOutput = 65535
      command.ShiftAmount = MinToZCommand.ShiftAmount
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MinimumToZeroCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MinimumToZeroCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Convert the image to unsigned image by shifting the negative values to become positive.
         var MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.run(image); 
         
         // Apply multiscale enhancement
         var MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.gaussian, MultiscaleEnhancementCommandFlags.edgeEnhancement);
         
         // Convert the image back to signed by shifting the same amount in the negative side.
         var command = new ZeroToNegativeCommand();
         command.minimumInput  = -32767;
         command.maximumInput  = 32766;
         command.minimumOutput = 0;
         command.maximumOutput = 65535;
         command.shiftAmount   = MinToZCommand.shiftAmount;
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MinimumToZeroCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 

         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void MinimumToZeroCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         // Convert the image to unsigned image by shifting the negative values to become positive.
         MinimumToZeroCommand MinToZCommand = new MinimumToZeroCommand();
         MinToZCommand.Run(image); 
         // Apply multiscale enhancement
         MultiscaleEnhancementCommand MultiScaleCommand = new MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, MultiscaleEnhancementCommandType.Gaussian, MultiscaleEnhancementCommandFlags.EdgeEnhancement);

         // Convert the image back to signed by shifting the same amount in the negative side.
         ZeroToNegativeCommand command = new ZeroToNegativeCommand();
         command.MinimumInput  = -32767;
         command.MaximumInput  = 32766;
         command.MinimumOutput = 0;
         command.MaximumOutput = 65535;
         command.ShiftAmount   = MinToZCommand.ShiftAmount;
         command.Run(image);

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MinimumToZeroCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         ' Convert the image to unsigned image by shifting the negative values to become positive.
         Dim MinToZCommand As MinimumToZeroCommand = New MinimumToZeroCommand()
         MinToZCommand.Run(image)
         ' Apply multiscale enhancement
         Dim MultiScaleCommand As MultiscaleEnhancementCommand = New MultiscaleEnhancementCommand(2000, 4, -1, 0, 0, _
                                                                                                  MultiscaleEnhancementCommandType.Gaussian, _
                                                                                                  MultiscaleEnhancementCommandFlags.EdgeEnhancement)

         ' Convert the image back to signed by shifting the same amount in the negative side.
         Dim command As ZeroToNegativeCommand = New ZeroToNegativeCommand()
         command.MinimumInput = -32767
         command.MaximumInput = 32766
         command.MinimumOutput = 0
         command.MaximumOutput = 65535
         command.ShiftAmount = MinToZCommand.ShiftAmount
         command.Run(image)

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.DicomGray, image.BitsPerPixel)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand">
      </seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ConvertUnsignedToSignedCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ZeroToNegativeCommand"></seealso>.
            <objectivec><pre>@interface LTMinimumToZeroCommand : LTRasterCommand</pre></objectivec><java><pre>public class MinimumToZeroCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MinimumToZeroCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinimumToZeroCommand.ShiftAmount">
      <summary>Gets the value that the <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> class object uses to shift the negative values so that the minimum negative value will be zero. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that the <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> class object uses to shift the negative values so that the minimum negative value will be zero.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinimumToZeroCommand" /> example.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int shiftAmount;</pre>
      </objectivec>
      <java>
        <pre>public int getShiftAmount()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags">
      <summary>Reserved for future use. Use 0 for now. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTGetLinearVoiLookupTableCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum GetLinearVoiLookupTableCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags.None">
      <summary>No Flags selected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTGetLinearVoiLookupTableCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand">
      <summary>Gets the window center and the window width, if the LookupTable stored inside the 
            image is linear. If the LookupTable stored inside the image is not linear, the 
            command will fail. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>Pay attention to lookup tables for signed images. 
            The upper half should contain negative values and the lower half should contain 
            positive values.</description>
          </item>
          <item>
            <description>This class supports 12 and 16-bit grayscale images. Support for 12 and 16-bit grayscale images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
        <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para>
      </remarks>
      <example>
        <code lang="VB">   Public Sub GetLinearVoiLookupTableCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As GetLinearVoiLookupTableCommand = New GetLinearVoiLookupTableCommand
      command.Flags = GetLinearVoiLookupTableCommandFlags.None
      command.Run(leadImage)
      MessageBox.Show("Width  = " + command.Width.ToString + "\n" + "Center = " + command.Center.ToString)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void GetLinearVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand();
         command.Flags = GetLinearVoiLookupTableCommandFlags.None;
         command.Run(image);
         MessageBox.Show("Width  = " + command.Width + "\n" + "Center = " + command.Center);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function GetLinearVoiLookupTableCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new GetLinearVoiLookupTableCommand();
         command.flags = GetLinearVoiLookupTableCommandFlags.none;
         command.run(image);
         console.error("Width  = " + command.width + "\n" + "Center = " + command.center);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task GetLinearVoiLookupTableCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand();
         command.Flags = GetLinearVoiLookupTableCommandFlags.None;
         command.Run(image);
         Debug.WriteLine("Width  = " + command.Width + "\n" + "Center = " + command.Center);

      }</code>
        <code lang="SilverlightCSharp">      public void GetLinearVoiLookupTableCommandExample(RasterImage image)
      {
         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand();
         command.Flags = GetLinearVoiLookupTableCommandFlags.None;
         command.Run(image);
         Debug.WriteLine("Width  = " + command.Width + "\n" + "Center = " + command.Center);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub GetLinearVoiLookupTableCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As GetLinearVoiLookupTableCommand = New GetLinearVoiLookupTableCommand()
         command.Flags = GetLinearVoiLookupTableCommandFlags.None
         command.Run(image)
         Debug.WriteLine("Width  = " &amp; command.Width + Constants.vbLf &amp; "Center = " &amp; command.Center)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand">
      </seealso>.
            <seealso cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)"></seealso>.
            <seealso cref="M:Leadtools.ImageProcessing.Effects.EffectsUtilities.GetUserLookupTable(System.Int32[],Leadtools.LeadPoint[])"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.RemapIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ApplyLinearVoiLookupTableCommand"></seealso>.
            <objectivec><pre>@interface LTGetLinearVoiLookupTableCommand : LTRasterCommand</pre></objectivec><java><pre>public class GetLinearVoiLookupTableCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.#ctor">
      <summary>Initializes a new GetLinearVoiLookupTableCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ConvertSignedToUnsignedCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public GetLinearVoiLookupTableCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.#ctor(Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommandFlags)">
      <summary>Initializes a new GetLinearVoiLookupTableCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Reserved for future use. Pass 0 for now.</param>
      <example>
        <code lang="VB">   Public Sub GetLinearVoiLookupTableConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"))

      ' Prepare the command
      Dim command As GetLinearVoiLookupTableCommand = New GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.None)
      command.Run(leadImage)
      MessageBox.Show("Width  = " + command.Width.ToString + "\n" + "Center = " + command.Center.ToString)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void GetLinearVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "IMAGE2.dcm"));

         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.None);
         command.Run(image);
         MessageBox.Show("Width  = " + command.Width + "\n" + "Center = " + command.Center);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function GetLinearVoiLookupTableConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\IMAGE2.dcm";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.none);
         command.run(image);
         console.error("Width  = " + command.width + "\n" + "Center = " + command.center);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task GetLinearVoiLookupTableConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\IMAGE2.dcm";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.None);
         command.Run(image);
         Debug.WriteLine("Width  = " + command.Width + "\n" + "Center = " + command.Center);

      }</code>
        <code lang="SilverlightCSharp">      public void GetLinearVoiLookupTableConstructorExample(RasterImage image)
      {
         // Prepare the command
         GetLinearVoiLookupTableCommand command = new GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.None);
         command.Run(image);
         Debug.WriteLine("Width  = " + command.Width + "\n" + "Center = " + command.Center);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub GetLinearVoiLookupTableConstructorExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As GetLinearVoiLookupTableCommand = New GetLinearVoiLookupTableCommand(GetLinearVoiLookupTableCommandFlags.None)
         command.Run(image)
         Debug.WriteLine("Width  = " &amp; command.Width + Constants.vbLf &amp; "Center = " &amp; command.Center)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>- (id)initWithFlags:(LTGetLinearVoiLookupTableCommandFlags)flags;</pre>
      </objectivec>
      <java>
        <pre>public GetLinearVoiLookupTableCommand(int flags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Center">
      <summary>A variable to be updated with the center of the range of color 
            intensities that define your window of interest. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A variable to be updated with the center of the range of color 
            intensities that define your window of interest.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) double center;</pre>
      </objectivec>
      <java>
        <pre>public double getCenter()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Width">
      <summary>A variable to be updated with the range of color intensities that 
            define your window of interest. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A variable to be updated with the range of color intensities 
            that define your window of interest.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) double width;</pre>
      </objectivec>
      <java>
        <pre>public double getWidth()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand.Flags">
      <summary>Reserved for future use. Use 0 for now. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Reserved for future use. Use 0 for now.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.GetLinearVoiLookupTableCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTGetLinearVoiLookupTableCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags">
      <summary>
        <para>Enumerated values that determine the behavior of the smoothing process.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
      <objectivec>
        <pre>enum LTSmoothCommandFlags</pre>
      </objectivec>
      <java>
        <pre>public enum SmoothCommandFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.None">
      <summary>No flags. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandFlags_None</pre>
      </objectivec>
      <java>
        <pre>NONE</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.SingleRegion">
      <summary>For each bump or nick found by the <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />, if the <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Status" /> is set to 
            <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus" />.Remove , the removed bump or nick is added to an 
            internal single region. If it is set to <see cref="T:Leadtools.ImageProcessing.Core.RemoveStatus" />.NoRemove, 
            the bump or nick is not added to the single region. When <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" /> returns, 
            either <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion" /> or <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region" /> will 
            reference a region that contains all the removed bumps or nicks. If LeadRegion is also set, <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion" /> will be 
            updated with a shallow copy of the image that has a LEAD region that contains all the removed bumps or nicks. If LeadRegion is not set, 
            <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region" /> is updated with a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> that contains all the removed bumps or nicks. 
            When the region (either LEAD or Windows) is no longer needed, it must be disposed of (either the region allocated in <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion" /> 
            or <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region" />). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandFlags_SingleRegion</pre>
      </objectivec>
      <java>
        <pre>SINGLE_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.LeadRegion">
      <summary>When <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" /> returns, <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion" /> 
            is updated with a shallow copy of the affected image that also contains a region with all the removed bumps or nicks. 
            This flag must be used in conjunction with SingleRegion. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandFlags_LeadRegion</pre>
      </objectivec>
      <java>
        <pre>LEAD_REGION</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.ImageUnchanged">
      <summary>The affected image (Run method image) is unchanged. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandFlags_ImageUnchanged</pre>
      </objectivec>
      <java>
        <pre>IMAGE_UNCHANGED</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandFlags.FavorLong">
      <summary>Processes long bumps or nicks before short bumps or nicks.  If this flag is not passed, short is favored over long. For example:<br />
            Smooth the following image with <see cref="P:Leadtools.ImageProcessing.Core.SmoothCommand.Length" /> == 3<br /><pre><code>
              X   X
            XXXXXXXXXX
            </code></pre>
            Favoring short would remove the two "bumps" giving:<br /><pre><code>
            XXXXXXXXXX
            </code></pre>
            Favoring long would fill in the "gap" giving:<br /><pre><code>
              XXXXX
            XXXXXXXXXX
            </code></pre><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandFlags_FavorLong</pre>
      </objectivec>
      <java>
        <pre>FAVOR_LONG</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType">
      <summary>
        <para>Enumerated values that indicate whether to remove bumps or fill in nicks.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTSmoothCommandBumpNickType</pre>
      </objectivec>
      <java>
        <pre>public enum SmoothCommandBumpNickType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType.Bump">
      <summary>(0x00000000)Remove a bump. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandBumpNickType_Bump</pre>
      </objectivec>
      <java>
        <pre>BUMP</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType.Nick">
      <summary>(0x00000001)Fill in a nick. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandBumpNickType_Nick</pre>
      </objectivec>
      <java>
        <pre>NICK</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType">
      <summary>
        <para>Enumerated values that indicate whether the element being smoothed is vertical or horizontal. </para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="Android.png" alt="Android support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="iOS.png" alt="iOS / OS X support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="silverlight.png" alt="Silverlight support" border="0" />
        </a>
      </summary>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>enum LTSmoothCommandDirectionType</pre>
      </objectivec>
      <java>
        <pre>public enum SmoothCommandDirectionType</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType.Horizontal">
      <summary>(0x00000000)A horizontal bump or nick. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandDirectionType_Horizontal</pre>
      </objectivec>
      <java>
        <pre>HORIZONTAL</pre>
      </java>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SmoothCommandDirectionType.Vertical">
      <summary>(0x00000001)A vertical bump or nick. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <objectivec>
        <pre>LTSmoothCommandDirectionType_Vertical</pre>
      </objectivec>
      <java>
        <pre>VERTICAL</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs">
      <summary>Handles each bump or nick found by the <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents smoothEventExample_S4 As SmoothCommand
   Public Sub SmoothCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      smoothEventExample_S4 = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion, 2)
      smoothEventExample_S4.Run(leadImage)

   End Sub

   Private Sub SmoothEventExample_SmoothCommand(ByVal sender As Object, ByVal e As SmoothCommandEventArgs) Handles smoothEventExample_S4.Smooth
      Dim ee As SmoothCommandEventArgs = New SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction)

      Dim BumpOrNeck As String
      If (ee.BumpNick = SmoothCommandBumpNickType.Bump) Then
         BumpOrNeck = "Bump"
      Else
         BumpOrNeck = "Neck"
      End If

      Dim Direction As String
      If (ee.Direction = SmoothCommandDirectionType.Horizontal) Then
         Direction = "Horizontal"
      Else
         Direction = "Vertical"
      End If

      e.Status = RemoveStatus.Remove

      MessageBox.Show("The width of the image is: " &amp; e.Image.Width &amp; Chr(13) &amp; "The height of the image is: " &amp; e.Image.Height &amp; Chr(13) &amp; " Bump Or Neck : " &amp; BumpOrNeck &amp; Chr(13) &amp; "Direction : " &amp; Direction)
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SmoothCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "clean.tif"));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);

      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         MessageBox.Show("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SmoothCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SmoothCommand(SmoothCommandFlags.favorLong | SmoothCommandFlags.singleRegion | SmoothCommandFlags.leadRegion, 2);
         command.addEventListener("smooth", SmoothEventExample_S4);
         command.run(image);
      }
   });
}

function SmoothEventExample_S4(e) {
   with (Leadtools.ImageProcessing.Core) {
      var ee = new SmoothCommandEventArgs(e.image, e.bumpNick, e.startRow, e.startColumn, e.length, e.direction);

      var BumpOrNeck;
      if (ee.bumpNick == SmoothCommandBumpNickType.bump)
         BumpOrNeck = "Bump";
      else
         BumpOrNeck = "Neck";

      var Direction;
      if (ee.direction == SmoothCommandDirectionType.horizontal)
         Direction = "Horizontal";
      else
         Direction = "Vertical";

      e.status = RemoveStatus.remove;

      console.error("The width of the image is: " + e.image.width + "\n" + "The height of the image is: " + e.image.height + "\n" + "Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task SmoothCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);

      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         Debug.WriteLine("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }</code>
        <code lang="SilverlightCSharp">      public void SmoothCommandEventArgsExample(RasterImage image)
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);
      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         Debug.WriteLine("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }</code>
        <code lang="VB">      Public Sub SmoothCommandEventArgsExample(ByVal image As RasterImage)
         ' Load an image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.ThrowExceptionsOnInvalidImages = True

         ' Prepare the command
         Dim command As SmoothCommand = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion, 2)
         AddHandler command.Smooth, AddressOf SmoothEventExample_S4
         command.Run(image)
      End Sub

      Private Sub SmoothEventExample_S4(ByVal sender As Object, ByVal e As SmoothCommandEventArgs)
         Dim ee As SmoothCommandEventArgs = New SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction)

         Dim BumpOrNeck As String
         If ee.BumpNick = SmoothCommandBumpNickType.Bump Then
            BumpOrNeck = "Bump"
         Else
            BumpOrNeck = "Neck"
         End If

         Dim Direction As String
         If ee.Direction = SmoothCommandDirectionType.Horizontal Then
            Direction = "Horizontal"
         Else
            Direction = "Vertical"
         End If

         e.Status = RemoveStatus.Remove

         Debug.WriteLine("The width of the image is: " &amp; e.Image.Width + Constants.vbLf &amp; "The height of the image is: " &amp; e.Image.Height + Constants.vbLf &amp; _
                         " Bump Or Neck : " &amp; BumpOrNeck &amp; Constants.vbLf &amp; "Direction : " &amp; Direction)
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@interface LTSmoothCommandEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class SmoothCommandEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.SmoothCommandDirectionType)">
      <summary>Initializes a new SmoothCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">RasterImage object that references the affected image.</param>
      <param name="bumpNick">Value that indicates whether to remove bumps or fill in nicks.</param>
      <param name="startRow">The starting row of the bump or nick. The rows are zero-based.</param>
      <param name="startColumn">The starting column of the bump or nick. The columns are zero-based.</param>
      <param name="length">Length (in pixels) of the bump or nick.</param>
      <param name="direction">Flag that indicates whether the element being smoothed is vertical or horizontal.</param>
      <example>
        <code lang="VB">   Public WithEvents smoothEventExample_S4 As SmoothCommand
   Public Sub SmoothCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      smoothEventExample_S4 = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion, 2)
      smoothEventExample_S4.Run(leadImage)

   End Sub

   Private Sub SmoothEventExample_SmoothCommand(ByVal sender As Object, ByVal e As SmoothCommandEventArgs) Handles smoothEventExample_S4.Smooth
      Dim ee As SmoothCommandEventArgs = New SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction)

      Dim BumpOrNeck As String
      If (ee.BumpNick = SmoothCommandBumpNickType.Bump) Then
         BumpOrNeck = "Bump"
      Else
         BumpOrNeck = "Neck"
      End If

      Dim Direction As String
      If (ee.Direction = SmoothCommandDirectionType.Horizontal) Then
         Direction = "Horizontal"
      Else
         Direction = "Vertical"
      End If

      e.Status = RemoveStatus.Remove

      MessageBox.Show("The width of the image is: " &amp; e.Image.Width &amp; Chr(13) &amp; "The height of the image is: " &amp; e.Image.Height &amp; Chr(13) &amp; " Bump Or Neck : " &amp; BumpOrNeck &amp; Chr(13) &amp; "Direction : " &amp; Direction)
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SmoothCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "clean.tif"));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);

      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         MessageBox.Show("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SmoothCommandEventArgsExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SmoothCommand(SmoothCommandFlags.favorLong | SmoothCommandFlags.singleRegion | SmoothCommandFlags.leadRegion, 2);
         command.addEventListener("smooth", SmoothEventExample_S4);
         command.run(image);
      }
   });
}

function SmoothEventExample_S4(e) {
   with (Leadtools.ImageProcessing.Core) {
      var ee = new SmoothCommandEventArgs(e.image, e.bumpNick, e.startRow, e.startColumn, e.length, e.direction);

      var BumpOrNeck;
      if (ee.bumpNick == SmoothCommandBumpNickType.bump)
         BumpOrNeck = "Bump";
      else
         BumpOrNeck = "Neck";

      var Direction;
      if (ee.direction == SmoothCommandDirectionType.horizontal)
         Direction = "Horizontal";
      else
         Direction = "Vertical";

      e.status = RemoveStatus.remove;

      console.error("The width of the image is: " + e.image.width + "\n" + "The height of the image is: " + e.image.height + "\n" + "Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task SmoothCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);

      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         Debug.WriteLine("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }</code>
        <code lang="SilverlightCSharp">      public void SmoothCommandEventArgsExample(RasterImage image)
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S4);
         command.Run(image);
      }

      private void SmoothEventExample_S4(object sender, SmoothCommandEventArgs e)
      {
         SmoothCommandEventArgs ee = new SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction);

         string BumpOrNeck;
         if (ee.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (ee.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         e.Status = RemoveStatus.Remove;

         Debug.WriteLine("The width of the image is: " + e.Image.Width + "\n" + "The height of the image is: " + e.Image.Height + "\n" + " Bump Or Neck : " + BumpOrNeck + "\n" + "Direction : " + Direction);
      }</code>
        <code lang="VB">      Public Sub SmoothCommandEventArgsExample(ByVal image As RasterImage)
         ' Load an image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.ThrowExceptionsOnInvalidImages = True

         ' Prepare the command
         Dim command As SmoothCommand = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion, 2)
         AddHandler command.Smooth, AddressOf SmoothEventExample_S4
         command.Run(image)
      End Sub

      Private Sub SmoothEventExample_S4(ByVal sender As Object, ByVal e As SmoothCommandEventArgs)
         Dim ee As SmoothCommandEventArgs = New SmoothCommandEventArgs(e.Image, e.BumpNick, e.StartRow, e.StartColumn, e.Length, e.Direction)

         Dim BumpOrNeck As String
         If ee.BumpNick = SmoothCommandBumpNickType.Bump Then
            BumpOrNeck = "Bump"
         Else
            BumpOrNeck = "Neck"
         End If

         Dim Direction As String
         If ee.Direction = SmoothCommandDirectionType.Horizontal Then
            Direction = "Horizontal"
         Else
            Direction = "Vertical"
         End If

         e.Status = RemoveStatus.Remove

         Debug.WriteLine("The width of the image is: " &amp; e.Image.Width + Constants.vbLf &amp; "The height of the image is: " &amp; e.Image.Height + Constants.vbLf &amp; _
                         " Bump Or Neck : " &amp; BumpOrNeck &amp; Constants.vbLf &amp; "Direction : " &amp; Direction)
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithImage:(LTRasterImage*)image 
           bumpNick:(LTSmoothCommandBumpNickType)bumpNick 
           startRow:(int)startRow 
        startColumn:(int)startColumn 
             length:(int)length 
          direction:(LTSmoothCommandDirectionType)direction;            </pre>
      </objectivec>
      <java>
        <pre>
public SmoothCommandEvent(
   Object source,
   RasterImage image, 
   SmoothCommandBumpNickType bumpNick, 
   int startRow, 
   int startColumn, 
   int length, 
   SmoothCommandDirectionType direction
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object that references the affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <see cref="T:Leadtools.RasterImage" /> that references the affected image.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.SmoothCommandBumpNickType,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.Core.SmoothCommandDirectionType)">SmoothCommandEventArgs(RasterImage, SmoothCommandBumpNickType, int, int, int, SmoothCommandDirectionType)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.BumpNick">
      <summary>Gets a value that indicates whether to remove bumps or fill in nicks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates whether to remove bumps or fill in nicks.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTSmoothCommandBumpNickType bumpNick;</pre>
      </objectivec>
      <java>
        <pre>public SmoothCommandBumpNickType getBumpNick()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.StartRow">
      <summary>Gets the starting row of the bump or nick. The rows are zero-based. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The starting row of the bump or nick. The rows are zero-based.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int startRow;</pre>
      </objectivec>
      <java>
        <pre>public int getStartRow()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.StartColumn">
      <summary>Gets the starting column of the bump or nick. The columns are zero-based. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The starting column of the bump or nick. The columns are zero-based.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int startColumn;</pre>
      </objectivec>
      <java>
        <pre>public int getStartColumn()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Length">
      <summary>Gets the length (in pixels) of the bump or nick. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Length (in pixels) of the bump or nick.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int length;</pre>
      </objectivec>
      <java>
        <pre>public int getLength()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Direction">
      <summary>Gets a value that indicates whether the element being smoothed is vertical or horizontal. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Enumerator that indicates whether the element being smoothed is vertical or horizontal.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTSmoothCommandDirectionType direction;</pre>
      </objectivec>
      <java>
        <pre>public SmoothCommandDirectionType getDirection()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs.Status">
      <summary>Gets or sets a value that represents the status of the smoothing process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the status of the smoothing process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTRemoveStatus status;</pre>
      </objectivec>
      <java>
        <pre>
public RemoveStatus getStatus()
public void setStatus(RemoveStatus value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SmoothCommand">
      <summary>Smooths the bumps and fills in the nicks of a 1-bit black and white image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Document cleanup|Smoothing|Bumps|Cleanup|1-bit images|Nicks|Smoothing text</keywords>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command smooths the text in scanned text documents. The behavior of this command can be modified by using an Event Handler 
            that handles the <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandEventArgs" />.
            This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>This command works only on 1-bit black and white images.</description>
          </item>
          <item>
            <description>If a region is selected, only the selected region will be changed by this command.  If no region is selected, the whole image will be processed.</description>
          </item>
          <item>
            <description>This command does not support signed data images. </description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Cleaning Up 1-Bit Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public WithEvents smoothEventExample_S1 As SmoothCommand
   Public Sub SmoothCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      smoothEventExample_S1 = New SmoothCommand
      smoothEventExample_S1.Flags = SmoothCommandFlags.FavorLong
      smoothEventExample_S1.Length = 2
      smoothEventExample_S1.Run(leadImage)

   End Sub

   Private Sub SmoothEventExample_SmoothCommand_S1(ByVal sender As Object, ByVal e As SmoothCommandEventArgs) Handles smoothEventExample_S1.Smooth
      Dim BumpOrNeck As String
      Dim Direction As String

      If (e.BumpNick = SmoothCommandBumpNickType.Bump) Then
         BumpOrNeck = "Bump"
      Else
         BumpOrNeck = "Neck"
      End If


      If (e.Direction = SmoothCommandDirectionType.Horizontal) Then
         Direction = "Horizontal"
      Else
         Direction = "Vertical"
      End If


      MessageBox.Show("Type " + BumpOrNeck.ToString() + _
               Chr(13) + " Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() + _
               Chr(13) + " Length " + e.Length.ToString() + _
               Chr(13) + " Direction " + Direction.ToString())

      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SmoothCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "clean.tif"));

         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S1);
         command.Flags  = SmoothCommandFlags.FavorLong ;
         command.Length = 2;

         command.Run(image);

      }

      private void SmoothEventExample_S1(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         string Direction;

         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         MessageBox.Show("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction);

         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SmoothCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SmoothCommand();
         command.addEventListener("smooth", SmoothEventExample_S1);
         command.flags = SmoothCommandFlags.favorLong;
         command.length = 2;

         command.run(image);
      }
   });
}

function SmoothEventExample_S1(e) {
   var BumpOrNeck;
   var Direction;

   with (Leadtools.ImageProcessing.Core) {
      if (e.bumpNick == SmoothCommandBumpNickType.bump)
         BumpOrNeck = "Bump";
      else
         BumpOrNeck = "Neck";

      if (e.direction == SmoothCommandDirectionType.horizontal)
         Direction = "Horizontal";
      else
         Direction = "Vertical";

      console.error("Type " + BumpOrNeck +
         "\n Row Column " + e.startRow.toString() + "," + e.startColumn.toString() +
         "\n Length " + e.length +
         "\n Direction " + Direction);

      e.status = RemoveStatus.remove;
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task SmoothCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S1);
         command.Flags  = SmoothCommandFlags.FavorLong ;
         command.Length = 2;

         command.Run(image);

      }

      private void SmoothEventExample_S1(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         string Direction;

         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void SmoothCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S1);
         command.Flags = SmoothCommandFlags.FavorLong;
         command.Length = 2;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }

      private void SmoothEventExample_S1(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         string Direction;

         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub SmoothCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As SmoothCommand = New SmoothCommand()
         AddHandler command.Smooth, AddressOf SmoothEventExample_S1
         command.Flags = SmoothCommandFlags.FavorLong
         command.Length = 2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub

      Private Sub SmoothEventExample_S1(ByVal sender As Object, ByVal e As SmoothCommandEventArgs)
         Dim BumpOrNeck As String
         Dim Direction As String

         If e.BumpNick = SmoothCommandBumpNickType.Bump Then
            BumpOrNeck = "Bump"
         Else
            BumpOrNeck = "Neck"
         End If

         If e.Direction = SmoothCommandDirectionType.Horizontal Then
            Direction = "Horizontal"
         Else
            Direction = "Vertical"
         End If

         Debug.WriteLine("Type " &amp; BumpOrNeck &amp; Constants.vbLf &amp; " Row Column " &amp; e.StartRow.ToString() &amp; e.StartColumn.ToString() &amp; Constants.vbLf &amp; _
                         " Length " &amp; e.Length + Constants.vbLf &amp; " Direction " &amp; Direction)

         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <seealso cref="T:FO.Topics.CleaningUp1bitImages">Cleaning Up 1-Bit Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.BorderRemoveCommand" /><seealso cref="T:Leadtools.ImageProcessing.Core.LineRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedTextCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.InvertedPageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DotRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HolePunchRemoveCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.HighQualityRotateCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionHolesRemovalCommand"></seealso>.
            <objectivec><pre>@interface LTSmoothCommand : LTRasterCommand</pre></objectivec><java><pre>public class SmoothCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor">
      <summary>Initializes a new SmoothCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public SmoothCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor(Leadtools.ImageProcessing.Core.SmoothCommandFlags,System.Int32)">
      <summary>Initializes a new SmoothCommand class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="flags">Flags that determine the behavior of the smoothing process.</param>
      <param name="length">Length of the bump (or nick) to remove (or fill). All bumps and nicks less than or equal 
            to this size are processed. This value is in pixels.</param>
      <example>
        <code lang="VB">   Public WithEvents smoothEventExample_S2 As SmoothCommand
   Public Sub SmoothConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      smoothEventExample_S2 = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion, 2)
      smoothEventExample_S2.Run(leadImage)

   End Sub

   Private Sub SmoothEventExample_SmoothCommand_S2(ByVal sender As Object, ByVal e As SmoothCommandEventArgs) Handles smoothEventExample_S2.Smooth

      Dim BumpOrNeck As String
      If (e.BumpNick = SmoothCommandBumpNickType.Bump) Then
         BumpOrNeck = "Bump"
      Else
         BumpOrNeck = "Neck"
      End If

      Dim Direction As String
      If (e.Direction = SmoothCommandDirectionType.Horizontal) Then
         Direction = "Horizontal"
      Else
         Direction = "Vertical"
      End If

      MessageBox.Show("Type " + BumpOrNeck.ToString() + _
             Chr(13) + " Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() + _
             Chr(13) + " Length " + e.Length.ToString() + _
             Chr(13) + " Direction " + Direction.ToString() + _
             Chr(13) + " Bump Or Neck " + BumpOrNeck.ToString())

      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SmoothConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "clean.tif"));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S2); 
         command.Run(image);

      }

      private void SmoothEventExample_S2(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         MessageBox.Show("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SmoothConstructorExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SmoothCommand(SmoothCommandFlags.favorLong | SmoothCommandFlags.singleRegion, 2);
         command.addEventListener("smooth", SmoothEventExample_S2);
         command.run(image);
      }
   });
}

function SmoothEventExample_S2(e) {
   with (Leadtools.ImageProcessing.Core) {
      var BumpOrNeck;
      if (e.bumpNick == SmoothCommandBumpNickType.bump)
         BumpOrNeck = "Bump";
      else
         BumpOrNeck = "Neck";

      var Direction;
      if (e.direction == SmoothCommandDirectionType.horizontal)
         Direction = "Horizontal";
      else
         Direction = "Vertical";

      console.error("Type " + BumpOrNeck +
         "\n Row Column " + e.startRow.toString() + e.startColumn.toString() +
         "\n Length " + e.length +
         "\n Direction " + Direction +
         "\n Bump Or Neck " + BumpOrNeck);

      e.status = RemoveStatus.remove;
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task SmoothConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S2); 
         command.Run(image);

      }

      private void SmoothEventExample_S2(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void SmoothConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         SmoothCommand command = new SmoothCommand(SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion, 2);
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S2);
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }
      private void SmoothEventExample_S2(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type "          + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length "     + e.Length +
            "\n Direction "  + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub SmoothConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As SmoothCommand = New SmoothCommand(SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion, 2)
         AddHandler command.Smooth, AddressOf SmoothEventExample_S2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub
      Private Sub SmoothEventExample_S2(ByVal sender As Object, ByVal e As SmoothCommandEventArgs)
         Dim BumpOrNeck As String
         If e.BumpNick = SmoothCommandBumpNickType.Bump Then
            BumpOrNeck = "Bump"
         Else
            BumpOrNeck = "Neck"
         End If

         Dim Direction As String
         If e.Direction = SmoothCommandDirectionType.Horizontal Then
            Direction = "Horizontal"
         Else
            Direction = "Vertical"
         End If

         Debug.WriteLine("Type " &amp; BumpOrNeck &amp; Constants.vbLf &amp; " Row Column " &amp; e.StartRow.ToString() &amp; e.StartColumn.ToString() &amp; Constants.vbLf &amp; _
                         " Length " &amp; e.Length + Constants.vbLf &amp; " Direction " &amp; Direction &amp; Constants.vbLf &amp; " Bump Or Neck " &amp; BumpOrNeck)

         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithFlags:(LTSmoothCommandFlags)flags 
             length:(int)length;            </pre>
      </objectivec>
      <java>
        <pre>
public SmoothCommand(
   int flags, 
   int length
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SmoothCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Flags">
      <summary>Gets or sets a value that determines the behavior of the smoothing process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that determines the behavior of the smoothing process.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LTSmoothCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Length">
      <summary>Gets or sets the length of the bump (or nick) to remove (or fill). All bumps and nicks less than or equal 
            to this size are processed. This value is in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Length of the bump (or nick) to remove (or fill). All bumps and nicks less than or equal 
            to this size are processed. This value is in pixels.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) int length;</pre>
      </objectivec>
      <java>
        <pre>
public int getLength()
public void setLength(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.ImageRegion">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object that is updated with a shallow copy of the image that also has a region that contains the removed bumps and nicks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The <see cref="T:Leadtools.RasterImage" /> object that is updated with a shallow copy of the image that also has a region that contains the removed bumps and nicks.
            </value>
      <remarks>
            If <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.SingleRegion | 
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.LeadRegion has been set in the Flags
            property, then when <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" /> returns, this property
            is updated with a shallow copy of the image that also has a region that contains the removed bumps and nicks.
            So set Flags to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.SingleRegion | 
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.LeadRegion. 
            It is the programmer's responsibility to dispose of the region when it is no longer needed.
            </remarks>
      <example>
        <code lang="VB">   Public WithEvents smoothEventExample_S3 As SmoothCommand
   Public Sub ImageRegionPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Clean.tif"))

      ' Prepare the command
      smoothEventExample_S3 = New SmoothCommand
      smoothEventExample_S3.Flags = SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion
      smoothEventExample_S3.Length = 2
      smoothEventExample_S3.Run(leadImage)

   End Sub

   Private Sub SmoothEventExample_SmoothCommand_S3(ByVal sender As Object, ByVal e As SmoothCommandEventArgs) Handles smoothEventExample_S3.Smooth
      Dim BumpOrNeck As String
      If (e.BumpNick = SmoothCommandBumpNickType.Bump) Then
         BumpOrNeck = "Bump"
      Else
         BumpOrNeck = "Neck"
      End If

      Dim Direction As String
      If (e.Direction = SmoothCommandDirectionType.Horizontal) Then
         Direction = "Horizontal"
      Else
         Direction = "Vertical"
      End If

      MessageBox.Show("Type " + BumpOrNeck.ToString() + _
             Chr(13) + " Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() + _
             Chr(13) + " Length " + e.Length.ToString() + _
             Chr(13) + " Direction " + Direction.ToString() + _
             Chr(13) + " Bump Or Neck" + BumpOrNeck.ToString())

      e.Status = RemoveStatus.Remove
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "clean.tif"));

         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S3);
         command.Flags  = SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion;
         command.Length = 2; 
         command.Run(image);

      }

      private void SmoothEventExample_S3(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         MessageBox.Show("Type " + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length " + e.Length +
            "\n Direction " + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ImageRegionPropertyExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Clean.tif";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new SmoothCommand();
         command.addEventListener("smooth", SmoothEventExample_S3);
         command.flags = SmoothCommandFlags.favorLong | SmoothCommandFlags.singleRegion | SmoothCommandFlags.leadRegion;
         command.length = 2;
         command.run(image);
      }
   });
}

function SmoothEventExample_S3(e) {
   with (Leadtools.ImageProcessing.Core) {
      var BumpOrNeck;
      if (e.bumpNick == SmoothCommandBumpNickType.bump)
         BumpOrNeck = "Bump";
      else
         BumpOrNeck = "Neck";

      var Direction;
      if (e.direction == SmoothCommandDirectionType.horizontal)
         Direction = "Horizontal";
      else
         Direction = "Vertical";

      console.error("Type " + BumpOrNeck +
         "\n Row Column " + e.startRow.toString() + e.startColumn.toString() +
         "\n Length " + e.length +
         "\n Direction " + Direction +
         "\n Bump Or Neck " + BumpOrNeck);

      e.status = RemoveStatus.remove;
   }
}
 </code>
        <code lang="CSWinRT">      
      public async Task ImageRegionPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Clean.tif";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S3);
         command.Flags  = SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion;
         command.Length = 2; 
         command.Run(image);

      }

      private void SmoothEventExample_S3(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type " + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length " + e.Length +
            "\n Direction " + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="SilverlightCSharp">      public void ImageRegionPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         SmoothCommand command = new SmoothCommand();
         command.Smooth += new EventHandler&lt;SmoothCommandEventArgs&gt;(SmoothEventExample_S3);
         command.Flags = SmoothCommandFlags.FavorLong | SmoothCommandFlags.SingleRegion | SmoothCommandFlags.LeadRegion;
         command.Length = 2;
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1);
         image.Dispose();
      }
      private void SmoothEventExample_S3(object sender, SmoothCommandEventArgs e)
      {
         string BumpOrNeck;
         if (e.BumpNick == SmoothCommandBumpNickType.Bump)
            BumpOrNeck = "Bump";
         else
            BumpOrNeck = "Neck";

         string Direction;
         if (e.Direction == SmoothCommandDirectionType.Horizontal)
            Direction = "Horizontal";
         else
            Direction = "Vertical";

         Debug.WriteLine("Type " + BumpOrNeck +
            "\n Row Column " + e.StartRow.ToString() + e.StartColumn.ToString() +
            "\n Length " + e.Length +
            "\n Direction " + Direction +
            "\n Bump Or Neck " + BumpOrNeck);

         e.Status = RemoveStatus.Remove;
      }</code>
        <code lang="VB">      Public Sub ImageRegionPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As SmoothCommand = New SmoothCommand()
         AddHandler command.Smooth, AddressOf SmoothEventExample_S3
         command.Flags = SmoothCommandFlags.FavorLong Or SmoothCommandFlags.SingleRegion Or SmoothCommandFlags.LeadRegion
         command.Length = 2
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.CcittGroup4, 1)
         image.Dispose()
      End Sub
      Private Sub SmoothEventExample_S3(ByVal sender As Object, ByVal e As SmoothCommandEventArgs)
         Dim BumpOrNeck As String
         If e.BumpNick = SmoothCommandBumpNickType.Bump Then
            BumpOrNeck = "Bump"
         Else
            BumpOrNeck = "Neck"
         End If

         Dim Direction As String
         If e.Direction = SmoothCommandDirectionType.Horizontal Then
            Direction = "Horizontal"
         Else
            Direction = "Vertical"
         End If

         Debug.WriteLine("Type " &amp; BumpOrNeck &amp; Constants.vbLf &amp; " Row Column " &amp; e.StartRow.ToString() &amp; e.StartColumn.ToString() &amp; Constants.vbLf &amp; _
                         " Length " &amp; e.Length + Constants.vbLf &amp; " Direction " &amp; Direction &amp; Constants.vbLf &amp; " Bump Or Neck " &amp; BumpOrNeck)

         e.Status = RemoveStatus.Remove
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* imageRegion;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImageRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SmoothCommand.Region">
      <summary>Gets the handle to a windows region. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            Handle to a windows region.
            </value>
      <remarks>
            When <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" /> returns, 
            this property is updated with a single windows region corresponding to all changes, only if 
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.SIngleRegion 
            has been set in Flags and <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.LeadRegion 
            has not been set. To use this, set the Flags property to 
            <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommandFlags" />.SingleRegion.
            It is the programmer's responsibility to dispose of this region when the region is no longer needed.
            </remarks>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.SmoothCommand.#ctor(Leadtools.ImageProcessing.Core.SmoothCommandFlags,System.Int32)">Leadtools.ImageProcessing.Effectts. SmoothCommand. SmoothCommand(SmoothCommandFlags,int)</see></example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterRegion* region;</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion getRegion()</pre>
      </java>
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.SmoothCommand.Smooth">
      <summary>Optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SmoothCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, unsafe_unretained) id&lt;LTSmoothCommandDelegate&gt; delegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addSmoothCommandListener(SmoothCommandListener listener)
public void removeSmoothCommandListener(SmoothCommandListener listener)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SliceCommandFlags">
      <summary>
        <para>Flags that indicate whether to deskew the sliced image, which type of interpolation to use when rotating, and whether to cut the slice from the original image.</para>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="dotnet.png" alt=".NET support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="WinRTicon.png" alt="WinRT support" border="0" />
        </a>
        <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
          <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
        </a>
      </summary>
      <remarks>
             You can use a bitwise OR (|) to specify one or more flags.
             </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.DeskewImage">
      <summary>Do not Deskew. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.WithoutDeskewImage">
      <summary>Deskew the sliced image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Normal">
      <summary>Do not perform any interpolation methods when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Resample">
      <summary>Perform bilinear interpolation when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.Bicubic">
      <summary>Perform bicubic interpolation when rotating. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.WithoutCut">
      <summary>Do not cut the slice from its original image. Send the null value to the callback sliceImage parameter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.Core.SliceCommandFlags.CutSlices">
      <summary>Cut the slice from its original image. Send a pointer to the created image to the callback sliceImage parameter. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs">
      <summary>Handles each slice segment found by <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public WithEvents sliceEventExample_S2 As SliceCommand
   Public Sub SliceCommandEventArgsExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim cmd As SliceCommand = New SliceCommand(40, New RasterColor(0, 0, 0), SliceCommandFlags.Bicubic Or SliceCommandFlags.CutSlices Or SliceCommandFlags.DeskewImage)

      ' Apply the slice command on the image.
      cmd.Run(leadImage)

      ' Print out the deskew amount.
      Console.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle)

   End Sub

   Private Sub SliceEventExample_SliceCommand(ByVal sender As Object, ByVal e As SliceCommandEventArgs) Handles sliceEventExample_S2.Slice
      e.Image.AddPage(e.SliceImage)
      e.Cancel = True
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SliceCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SliceCommand cmd = new SliceCommand(40, new RasterColor(0, 0, 0), SliceCommandFlags.Bicubic | SliceCommandFlags.CutSlices | SliceCommandFlags.DeskewImage);
         cmd.Slice += new EventHandler&lt;SliceCommandEventArgs&gt;(SliceEventExample_S2);

         // Apply the slice command on the image.
         cmd.Run(image);

         // Print out the deskew amount.
         Console.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle);

      }

      private void SliceEventExample_S2(object sender, SliceCommandEventArgs e)
      {
         e.Image.AddPage(e.SliceImage);
         e.Cancel = true;
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SliceCommandEventArgsExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var cmd = new SliceCommand(40, Leadtools.RasterColorHelper.create(0, 0, 0), SliceCommandFlags.bicubic | SliceCommandFlags.cutSlices | SliceCommandFlags.deskewImage);
         cmd.addEventListener("slice", SliceEventExample_S2);

         // Apply the slice command on the image.
         cmd.run(image);

         // Print out the deskew amount.
         console.error("Deskew Angle = {0}", cmd.deskewAngle);
      }
   });
}

function SliceEventExample_S2(e)
{
   e.image.addPage(e.sliceImage);
   e.cancel = true;
}
 </code>
        <code lang="CSWinRT">      
      public async Task SliceCommandEventArgsExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SliceCommand cmd = new SliceCommand(40, RasterColorHelper.Create(0, 0, 0), SliceCommandFlags.Bicubic | SliceCommandFlags.CutSlices | SliceCommandFlags.DeskewImage);
         cmd.Slice += new EventHandler&lt;SliceCommandEventArgs&gt;(SliceEventExample_S2);

         // Apply the slice command on the image.
         cmd.Run(image);

         // Print out the deskew amount.
         Debug.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle);

      }

      private void SliceEventExample_S2(object sender, SliceCommandEventArgs e)
      {
         e.Image.AddPage(e.SliceImage);
         e.Cancel = true;
      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.#ctor(Leadtools.RasterImage,Leadtools.RasterImage,Leadtools.LeadRect,System.Int32)">
      <summary>Initializes a new SliceCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="image">The affected images.</param>
      <param name="sliceImage">The sliced images. It is the programmer's responsibility to free this image, when it is no longer needed, this member is 
            updated only if SliceCommandFlags.CutSlices flag is used, else it will be null.</param>
      <param name="sliceRectangle">The bounding rectangle of the extracted slice.</param>
      <param name="deskewAngle">Angle of deskewing. The amount of rotation is expressed in hundredths of degrees. For example, 500 means 5 degrees clockwise.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.Image">
      <summary>Affected image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Affected image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.SliceImage">
      <summary>Gets the The sliced images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The sliced images. It is the programmer's responsibility to free this image, when it is no longer needed, this member is 
            updated only if SliceCommandFlags.CutSlices flag is used, else it will be null.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.SliceRectangle">
      <summary>Gets the bounding rectangle of the extracted slice. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>The bounding rectangle of the extracted slice.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.DeskewAngle">
      <summary>Gets the angle of deskewing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Angle of deskewing. The amount of rotation is expressed in hundredths of degrees. For example, 500 means 5 degrees clockwise.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommandEventArgs.Cancel">
      <summary>Gets or sets the value which indicates whether or not to continue with the slicing command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value which indicates whether or not to continue with the slicing command.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs" /> example.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.SliceCommand">
      <summary>Extracts individual slices from a radiographic scanned film. This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>.This command is designed to extract the individual slices from radiographic scanned film. The image below shows an 
            example of these radiographic images before and after applying the SliceCommand where we use the output data to draw a white line around each separate slice.<br /><img src="BeforeSliceBitmap.jpg"></img><br />Before<br /><img src="AfterSliceBitmap.jpg"></img><br />After<br /></description>
          </item>
          <item>
            <description>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale 
            and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This method does not support signed data images.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
      </remarks>
      <example>
        <code lang="VB">   Public WithEvents sliceEventExample_S1 As SliceCommand
   Public Sub SliceCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim cmd As New SliceCommand
      cmd.FillColor = New RasterColor(0, 0, 0)
      cmd.MaximumDeskewAngle = 40
      cmd.Flags = SliceCommandFlags.Bicubic Or SliceCommandFlags.WithoutCut Or SliceCommandFlags.DeskewImage

      ' Apply the slice command on the image.
      cmd.Run(leadImage)

      ' Print out the deskew amount.
      Console.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle)

   End Sub

   Private Sub SliceEventExample_SliceCommand(ByVal sender As Object, ByVal e As SliceCommandEventArgs) Handles sliceEventExample_S1.Slice
      ' create a region around the slice
      If (e.Image.HasRegion) Then
         e.Image.AddRectangleToRegion(Nothing, e.SliceRectangle, RasterRegionCombineMode.Xor)
      Else
         e.Image.AddRectangleToRegion(Nothing, e.SliceRectangle, RasterRegionCombineMode.Set)
      End If

      ' print out the deskew angle
      Console.WriteLine("The rotation Amount is {0}", e.DeskewAngle)
   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void SliceCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         SliceCommand cmd = new SliceCommand();
         cmd.FillColor = new RasterColor(0, 0, 0);
         cmd.MaximumDeskewAngle = 40;
         cmd.Flags = SliceCommandFlags.Bicubic | SliceCommandFlags.WithoutCut | SliceCommandFlags.DeskewImage;
         cmd.Slice += new EventHandler&lt;SliceCommandEventArgs&gt;(SliceEventExample_S1);

         // Apply the slice command on the image.
         cmd.Run(image);

         // Print out the deskew amount.
         Console.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle);

      }

      private void SliceEventExample_S1(object sender, SliceCommandEventArgs e)
      {
         // create a region around the slice
         if (e.Image.HasRegion)
            e.Image.AddRectangleToRegion(null, e.SliceRectangle, Leadtools.RasterRegionCombineMode.Xor);
         else
            e.Image.AddRectangleToRegion(null, e.SliceRectangle, Leadtools.RasterRegionCombineMode.Set);

         // print out the deskew angle
         Console.WriteLine("The rotation Amount is {0}", e.DeskewAngle);
      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function SliceCommandExample() {
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var cmd = new SliceCommand();
         cmd.fillColor = Leadtools.RasterColorHelper.create(0, 0, 0);
         cmd.maximumDeskewAngle = 40;
         cmd.flags = SliceCommandFlags.bicubic | SliceCommandFlags.withoutCut | SliceCommandFlags.deskewImage;
         cmd.addEventListener("slice", SliceEventExample_S1);

         // Apply the slice command on the image.
         cmd.run(image);

         // Print out the deskew amount.
         console.error("Deskew Angle = {0}", cmd.deskewAngle);
      }
   });
}

function SliceEventExample_S1(e) {
   // create a region around the slice
   if (e.image.hasRegion)
      e.image.addRectangleToRegion(null, e.sliceRectangle, Leadtools.RasterRegionCombineMode.xor);
   else
      e.image.addRectangleToRegion(null, e.sliceRectangle, Leadtools.RasterRegionCombineMode.set);

   // print out the deskew angle
   console.error("The rotation Amount is {0}", e.deskewAngle);
}
 </code>
        <code lang="CSWinRT">      
      public async Task SliceCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         SliceCommand cmd = new SliceCommand();
         cmd.FillColor = RasterColorHelper.Create(0, 0, 0);
         cmd.MaximumDeskewAngle = 40;
         cmd.Flags = SliceCommandFlags.Bicubic | SliceCommandFlags.WithoutCut | SliceCommandFlags.DeskewImage;
         cmd.Slice += new EventHandler&lt;SliceCommandEventArgs&gt;(SliceEventExample_S1);

         // Apply the slice command on the image.
         cmd.Run(image);

         // Print out the deskew amount.
         Debug.WriteLine("Deskew Angle = {0}", cmd.DeskewAngle);

      }

      private void SliceEventExample_S1(object sender, SliceCommandEventArgs e)
      {
         // create a region around the slice
         if (e.Image.HasRegion)
            e.Image.AddRectangleToRegion(null, e.SliceRectangle, Leadtools.RasterRegionCombineMode.Xor);
         else
            e.Image.AddRectangleToRegion(null, e.SliceRectangle, Leadtools.RasterRegionCombineMode.Set);

         // print out the deskew angle
         Debug.WriteLine("The rotation Amount is {0}", e.DeskewAngle);
      }</code>
      </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.#ctor">
      <summary>Initializes a new SliceCommand with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.#ctor(System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.Core.SliceCommandFlags)">
      <summary>Initializes a new SliceCommand with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="maximumDeskewAngle">Maximum angle of deskew, in hundredths of a degree. Possible values range from 0 to 1000. 
            (The value in degrees is MaximumDeskewAngle divided by 100). This parameter is used only if the SliceCommandFlags.DeskewImage flag is set.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate whether to deskew the sliced image, which type of interpolation to use when rotating, and whether 
            to cut the slice from the original image.</param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommandEventArgs" /> example.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>string that is the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.SliceCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.Flags">
      <summary>Gets or sets the flags that indicate whether to deskew the sliced image, which type of interpolation to use 
            when rotating, and whether to cut the slice from the original image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Flags that indicate whether to deskew the sliced image, which type of interpolation to use when rotating, and whether to cut the slice from the original image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.MaximumDeskewAngle">
      <summary>Gets or sets maximum angle of deskew. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Maximum angle of deskew, in hundredths of a degree. Possible values range from 0 to 1000. (The value in degrees is MaximumDeskewAngle divided by 100). 
            This parameter is used only if the SliceCommandFlags.DeskewImage flag is set.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Specifies the fill color for any exposed areas.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.SliceCommand.DeskewAngle">
      <summary>Gets the variable that will be updated with the amount that the command rotates the sliced image. 
            The amount of rotation is expressed in hundredths of degrees. For example, 500 means 5 degrees clockwise. 
            This property is updated only if SliceCommandFlags.DeskewImage is selected in the Flags property. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>A variable that will be updated with the amount that the command rotates the sliced image. 
            The amount of rotation is expressed in hundredths of degrees. For example, 500 means 5 degrees clockwise. 
            This property is updated only if SliceCommandFlags.DeskewImage is selected in the Flags property.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="E:Leadtools.ImageProcessing.Core.SliceCommand.Slice">
      <summary>Gets or set the optional delegate method for additional processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Optional delegate method for additional processing.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.SliceCommand" /> example.
            </example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.ShiftDataCommand">
      <summary>Selects a specific number of bits from an 8, 12 or 16-bit grayscale image to create a mask and places the mask in a new 8, 12 or 16-bit grayscale image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command is used as a visualization aid. You can select certain bits of the supported type image and show the variances of that image under conditions that you define.</description>
          </item>
          <item>
            <description>You can use this command for other purposes than visualization. For example, let's say you loaded a 16-bit file that has the pixels in Motorola format (where the high and low bytes are swapped). You can swap the high and low 8 bits for each pixel by calling this command twice and OR-ing the results.</description>
          </item>
          <item>
            <description>The destination image should not be allocated when calling this command. You should free the allocated image before calling this command. When the command returns successfully the destination image will be an 8, 12 or 16-bit grayscale.</description>
          </item>
          <item>
            <description>For 8, 12 and 16-bit grayscale images, the source low bit can range from 0 to 7, 0 to 11, and 0 to 15 respectively. However if this value exceeded the range then the command will not return an error, and the destination image will be a pure black image.</description>
          </item>
          <item>
            <description>The source high bit must be greater than or equal to source low bit. The command will return an invalid parameter error if SourceHighBit &lt; SourceLowBit. </description>
          </item>
          <item>
            <description>The destination low bit can range from 0 to destination bits per pixel - 1. If you pass greater values for destination low bit, the command will not return an error, but destination image will become a pure black image.</description>
          </item>
          <item>
            <description>The following example shows you how to treat a 16-bit grayscale image:<br /><list type="bullet"><item><description>In a16-bit grayscale image, the bits are ordered as b15  b14  b13 ... b2  b1  b0. You can choose the bit from where to start moving the bits.</description></item><item><description>For example, if the mask starts at the fourth bit (b3), with a length equal to 6 bits, the destination starting position is 4 and we want to create an 8-bit destination image:</description></item><item><description>SourceLowBit = 3, SourceHighBit = 8, DestinationLowBit = 4, DestinationBitsPerPixel = 8.</description></item><item><description>Source image:                                          </description></item><item><description>                            -----------------          </description></item><item><description>b15 b14 b13 b12 b11 b10 b9 |b8 b7 b6 b5 b4 b3| b2 b1 b0</description></item><item><description>                            -----------------          </description></item><item><description>  0   1   1   0   1   1  1   0  1  0  0  1  1   1  0  1</description></item><item><description>Destination image (DestinationImage):                  </description></item><item><description>                               -----------             </description></item><item><description>                              |b7 b6 b5 b4| b3 b2 b1 b0</description></item><item><description>                               -----------             </description></item><item><description>                                0  0  1  1   0  0  0  0</description></item><item><description>You can notice that b7 and b8 of Source Image are truncated in the DestinationImage since there is no space for them.</description></item></list></description>
          </item>
          <item>
            <description>This command supports 8, 12 and 16-bit grayscale bitmaps only. Support for 12 and 16-bit grayscale images are available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits. It also can process the whole image or a region of the image. If an image has a region, the effect is applied only to the region.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub ShiftDataCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As ShiftDataCommand = New ShiftDataCommand
      command.DestinationBitsPerPixel = 8
      command.DestinationLowBit = 3
      command.SourceLowBit = 2
      command.SourceHighBit = 6
      ' Move 5 bits starting from bit 2 into the high bits of the affected image.
      command.Run(leadImage)
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ShiftDataResult.Bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ShiftDataCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand();
         command.DestinationBitsPerPixel = 8;
         command.DestinationLowBit = 3;
         command.SourceLowBit = 2;
         command.SourceHighBit = 6;
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ShiftDataResult.bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ShiftDataCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ShiftDataCommand();
         command.destinationBitsPerPixel = 8;
         command.destinationLowBit = 3;
         command.sourceLowBit = 2;
         command.sourceHighBit = 6;
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.run(image);
         processedImage = command.destinationImage;
      }
      var destFileName = "ShiftDataResult.bmp";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(processedImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ShiftDataCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand();
         command.DestinationBitsPerPixel = 8;
         command.DestinationLowBit = 3;
         command.SourceLowBit = 2;
         command.SourceHighBit = 6;
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);

         string destFileName = @"ShiftDataResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
        <code lang="SilverlightCSharp">      public void ShiftDataCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand();
         command.DestinationBitsPerPixel = 8;
         command.DestinationLowBit = 3;
         command.SourceLowBit = 2;
         command.SourceHighBit = 6;
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ShiftDataCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ShiftDataCommand = New ShiftDataCommand()
         command.DestinationBitsPerPixel = 8
         command.DestinationLowBit = 3
         command.SourceLowBit = 2
         command.SourceHighBit = 6
         ' Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.CorrectingColors">Correcting Colors</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.ImageProcessing.Core.SelectDataCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.ColorizeGrayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.AdjustTintCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ColorHalftoneCommand"></seealso>.
            <objectivec><pre>@interface LTShiftDataCommand : LTRasterCommand</pre></objectivec><java><pre>public class ShiftDataCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.ShiftDataCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public ShiftDataCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ShiftDataCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="sourceLowBit">Position of the start bit that will construct the mask. The position is a zero-based number. This parameter accepts only positive values.</param>
      <param name="sourceHighBit">Position of the end bit. This is inclusive (it is part of the mask). The value should not be less than sourceLowBit. You can also pass -1, which is interpreted as "highest bit" (SourceImage-&gt;BitsPerPixel - 1). This parameter accepts only positive values.</param>
      <param name="destinationLowBit">The bit position where the selected mask will be copied into the destination image. This parameter accepts only positive values.</param>
      <param name="destinationBitsPerPixel">Bits per pixel for the destination image. The allowed values are 8, 12, or 16.</param>
      <example>
        <code lang="VB">   Public Sub ShiftDataConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As ShiftDataCommand = New ShiftDataCommand(2, 6, 3, 8)
      ' Move 5 bits starting from bit 2 into the high bits of the affected image.
      command.Run(leadImage)
      codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ShiftDataResult.Bmp"), RasterImageFormat.Bmp, 24)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void ShiftDataConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand(2, 6, 3, 8);
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);
         codecs.Save(command.DestinationImage, Path.Combine(LEAD_VARS.ImagesDir, "ShiftDataResult.bmp"), RasterImageFormat.Bmp, 24);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function ShiftDataConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   var processedImage;
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command = new ShiftDataCommand(2, 6, 3, 8);
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.run(image);
         processedImage = command.destinationImage;
      }
      var destFileName = "ShiftDataResult.bmp";
      return Tools.AppLocalFolder().createFileAsync(destFileName);
   }).then(function (saveFile) {
      return codecs.saveAsync(processedImage, Leadtools.LeadStreamFactory.create(saveFile), Leadtools.RasterImageFormat.bmp, 24);
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task ShiftDataConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand(2, 6, 3, 8);
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);

         string destFileName = @"ShiftDataResult.bmp";
         StorageFile saveFile = await Tools.AppLocalFolder.CreateFileAsync(destFileName);
         await codecs.SaveAsync(command.DestinationImage, LeadStreamFactory.Create(saveFile), RasterImageFormat.Bmp, 24);
      }</code>
        <code lang="SilverlightCSharp">      public void ShiftDataConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         ShiftDataCommand command = new ShiftDataCommand(2, 6, 3, 8);
         // Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub ShiftDataConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim command As ShiftDataCommand = New ShiftDataCommand(2, 6, 3, 8)
         ' Move 5 bits starting from bit 2 into the high bits of the affected image.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithSourceLowBit:(unsigned int)sourceLowBit 
             sourceHighBit:(unsigned int)sourceHighBit 
         destinationLowBit:(unsigned int)destinationLowBit 
   destinationBitsPerPixel:(unsigned int)destinationBitsPerPixel;            </pre>
      </objectivec>
      <java>
        <pre>
public ShiftDataCommand(
   int sourceLowBit, 
   int sourceHighBit, 
   int destinationLowBit, 
   int destinationBitsPerPixel
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ShiftDataCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ShiftDataCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.ShiftDataCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ShiftDataCommand.DestinationImage">
      <summary>RasterImage object that references the 8, 12 or 16-bit grayscale image resulting from the command. The source image will not be affected. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>RasterImage object that references the 8, 12 or 16-bit grayscale image resulting from the command. The source image will not be affected.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ShiftDataCommand.SourceLowBit">
      <summary>Gets or sets the position of the start bit that will construct the mask. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Position of the start bit that will construct the mask. The position is a zero based number. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int sourceLowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getSourceLowBit()
public void setSourceLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ShiftDataCommand.SourceHighBit">
      <summary>Gets or sets the position of the end bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Position of the end bit. This is inclusive (it is part of the mask). 
            The value should not be less than SourceLowBit. You can also set -1, which is interpreted 
            as "highest bit" (SourceImage-&gt;BitsPerPixel - 1). This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int sourceHighBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getSourceHighBit()
public void setSourceHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ShiftDataCommand.DestinationLowBit">
      <summary>Gets or sets the bit position where the selected mask will be copied into the destination image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bit position where the selected mask will be copied into the destination image. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int destinationLowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getDestinationLowBit()
public void setDestinationLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.ShiftDataCommand.DestinationBitsPerPixel">
      <summary>Gets or sets the bits per pixel for the destination image. The allowed values are 8, 12, or 16. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Bits per pixel for the destination image. The allowed values are 8, 12, or 16.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.ShiftDataCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int destinationBitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getDestinationBitsPerPixel()
public void setDestinationBitsPerPixel(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand">
      <summary>Gets the low and high bits of the values present in a 12 or 16-bit 
            grayscale or a 48 or 64-bit color image. This class is available in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>The minimum and maximum bit values can be used to 
            specify the range of useful bits and to create a lookup table, for use 
            in the WindowLevelCommand class.</description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale images. 
            Support for 12 and 16-bit grayscale images is available only in the 
            <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br />
            For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            <para>In Silverlight and Windows Phone versions of LEADTOOLS, this image processing 
            command will fail if the image data for the RasterImage object is stored internally
             using a Silverlight WriteableBitmap object.  For more information,
            refer to <see cref="T:Leadtools.Topics.ImageProcessingCommandLimitationsinSilverlight">Image Processing Command Limitations in Silverlight</see>.</para></remarks>
      <example>
        <code lang="VB">   Public Sub MinMaxBitsCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "ImageProcessingDemo\Beauty16.jpg"))

      ' Prepare the command
      Dim command As MinMaxBitsCommand = New MinMaxBitsCommand
      Dim MinimumBit As Integer   'the minimum value.
      Dim MaximumBit As Integer   'the maximum value.

      MinimumBit = 0
      MaximumBit = 0

      'Get min/max bits.
      command.Run(leadImage)
      MinimumBit = command.MinimumBit
      MaximumBit = command.MaximumBit
      MessageBox.Show("The Minuimum Bit is : " + MinimumBit.ToString() + ", The Maximum Bit is : " + MaximumBit.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void MinMaxBitsCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, @"ImageProcessingDemo\Beauty16.jpg"));

         // Prepare the command
         MinMaxBitsCommand command  = new MinMaxBitsCommand();
         int MinimumBit = 0; //the low bit variable.
         int MaximumBit = 0; //the high bit variable.
         //Get min/max bits.
         command.Run(image);
         MinimumBit = command.MinimumBit;
         MaximumBit = command.MaximumBit;
         MessageBox.Show("The Minuimum Bit is : " + MinimumBit.ToString() + ", The Maximum Bit is : " + MaximumBit.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function MinMaxBitsCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Beauty16.jpg";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var command  = new MinMaxBitsCommand();
         var MinimumBit = 0; //the low bit variable.
         var MaximumBit = 0; //the high bit variable.
         //Get min/max bits.
         command.run(image);
         MinimumBit = command.minimumBit;
         MaximumBit = command.maximumBit;
         console.error("The Minuimum Bit is : " + MinimumBit.toString() + ", The Maximum Bit is : " + MaximumBit.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task MinMaxBitsCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Beauty16.jpg";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         MinMaxBitsCommand command  = new MinMaxBitsCommand();
         int MinimumBit = 0; //the low bit variable.
         int MaximumBit = 0; //the high bit variable.
         //Get min/max bits.
         command.Run(image);
         MinimumBit = command.MinimumBit;
         MaximumBit = command.MaximumBit;
         Debug.WriteLine("The Minuimum Bit is : " + MinimumBit.ToString() + ", The Maximum Bit is : " + MaximumBit.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void MinMaxBitsCommandExample(RasterImage image)
      {
         // Prepare the command
         MinMaxBitsCommand command  = new MinMaxBitsCommand();
         int MinimumBit = 0; //the low bit variable.
         int MaximumBit = 0; //the high bit variable.
         //Get min/max bits.
         command.Run(image);
         MinimumBit = command.MinimumBit;
         MaximumBit = command.MaximumBit;
         Debug.WriteLine("The Minuimum Bit is : " + MinimumBit.ToString() + ", The Maximum Bit is : " + MaximumBit.ToString());
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub MinMaxBitsCommandExample(ByVal image As RasterImage)
         ' Prepare the command
         Dim command As MinMaxBitsCommand = New MinMaxBitsCommand()
         Dim MinimumBit As Integer = 0 'the low bit variable.
         Dim MaximumBit As Integer = 0 'the high bit variable.
         'Get min/max bits.
         command.Run(image)
         MinimumBit = command.MinimumBit
         MaximumBit = command.MaximumBit
         Debug.WriteLine("The Minuimum Bit is : " &amp; MinimumBit.ToString() &amp; ", The Maximum Bit is : " &amp; MaximumBit.ToString())
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>.   
            <seealso cref="T:Leadtools.Topics.ColorHalftoneandHalftoneImages">Color Halftone and Halftone Images</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand"></seealso>.
            <objectivec><pre>@interface LTMinMaxBitsCommand : LTRasterCommand</pre></objectivec><java><pre>public class MinMaxBitsCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.#ctor">
      <summary>Initializes a new MinMaxBitsCommand class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public MinMaxBitsCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this class.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.MinimumBit">
      <summary>This property is updated with the lowest bit set in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the lowest bit set in the 
            image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int minimumBit;</pre>
      </objectivec>
      <java>
        <pre>public int getMinimumBit()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.MinMaxBitsCommand.MaximumBit">
      <summary>This property is updated with the highest bit set in the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the highest bit set in the 
            image.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.MinMaxBitsCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int maximumBit;</pre>
      </objectivec>
      <java>
        <pre>public int getMaximumBit()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand">
      <summary>Creates a mask filter to remove specific frequency components from the image. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Raster Pro</see> and above toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command is used only when you are dealing with Fourier Transform methods.</description>
          </item>
          <item>
            <description>The MaskImage will be treated as grayscale image. The (0,0) frequency located in mask image center; positive X harmonics located in the right half of the mask image and positive Y harmonics located in the lower half of the mask image. Mask image's dimensions must be equal to Data's dimensions.</description>
          </item>
          <item>
            <description>This command does not support 12 and 16-bit grayscale and 48 and 64-bit color images. If the image is 12 and 16-bit grayscale and 48 and 64-bit color, the command will not threw an exception.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>This command does not support signed images.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:L.Topics.RemovingNoise">Removing Noise</see>.
            </remarks>
      <example>
        <code lang="VB">   Public Sub FrequencyFilterMaskCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizecommand As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)

      sizecommand.Run(leadImage)

      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      ' Apply FFT.
      Dim command As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray)

      command.Run(leadImage)

      Dim FreqCommand As FrequencyFilterMaskCommand = New FrequencyFilterMaskCommand(leadImage, FTArray, False)
      Dim InvCommand As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)

      InvCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FrequencyFilterMaskCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);
         command.Run(image);

         FrequencyFilterMaskCommand FreqCommand = new FrequencyFilterMaskCommand(image, FTArray, false);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FrequencyFilterMaskCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizecommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);

         sizecommand.run(image);

         var FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         var command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.fastFourierTransform |  FastFourierTransformCommandFlags.gray);
         command.run(image);

         var FreqCommand = new FrequencyFilterMaskCommand(image, FTArray, false);

         var InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.inverseFastFourierTransform |  FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         InvCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FrequencyFilterMaskCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizecommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);

         sizecommand.Run(image);

         FourierTransformInformation FTArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform |  FastFourierTransformCommandFlags.Gray);
         command.Run(image);

         FrequencyFilterMaskCommand FreqCommand = new FrequencyFilterMaskCommand(image, FTArray, false);

         FastFourierTransformCommand InvCommand = new FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform |  FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         InvCommand.Run(image);

      }</code>
      </example>
      <seealso cref="T:L.Topics.RemovingNoise">Removing Noise</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.DiscreteFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FourierTransformDisplayCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AverageCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MedianCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.AddNoiseCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ChangeHueSaturationIntensityCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.ColorThresholdCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.DirectionEdgeStatisticalCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.FastFourierTransformCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.StatisticsInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.FeretsDiameterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.ObjectInformationCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.RegionContourPointsCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.MathematicalFunctionCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.SegmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.SubtractBackgroundCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UserFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.HighPassCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.UnsharpMaskCommand"></seealso>.
        </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <example>
        <code lang="VB">   Public Sub FrequencyFilterMaskConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      ' Resize the image to make sure the image's dimensions are power of two.
      Dim sizeCmd As SizeCommand = New SizeCommand(256, 256, RasterSizeFlags.Bicubic)
      sizeCmd.Run(leadImage)

      Dim FTArray As FourierTransformInformation = New FourierTransformInformation(leadImage)
      ' Apply FFT.
      Dim command As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.FastFourierTransform Or FastFourierTransformCommandFlags.Gray)
      command.Run(leadImage)

      Dim FreqCommand As FrequencyFilterMaskCommand = New FrequencyFilterMaskCommand
      FreqCommand.MaskImage = leadImage
      FreqCommand.FourierTransformInformation = FTArray
      FreqCommand.OnOff = False
      Dim InvCommand As FastFourierTransformCommand = New FastFourierTransformCommand(FTArray, FastFourierTransformCommandFlags.InverseFastFourierTransform Or FastFourierTransformCommandFlags.Gray Or FastFourierTransformCommandFlags.Scale Or FastFourierTransformCommandFlags.Both)
      InvCommand.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void FrequencyFilterMaskConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.FastFourierTransform | FastFourierTransformCommandFlags.Gray);
         command.Run(image);

         FrequencyFilterMaskCommand freqCommand = new FrequencyFilterMaskCommand();
         freqCommand.MaskImage = image;
         freqCommand.FourierTransformInformation = ftArray;
         freqCommand.OnOff = false;

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform | FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function FrequencyFilterMaskConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         // Resize the image to make sure the image's dimensions are power of two.
         var sizeCommand = new Leadtools.ImageProcessing.SizeCommand(256, 256, Leadtools.RasterSizeFlags.bicubic);
         sizeCommand.run(image);

         var ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         var command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.fastFourierTransform | FastFourierTransformCommandFlags.gray);
         command.run(image);

         var freqCommand = new FrequencyFilterMaskCommand();
         freqCommand.maskImage = image;
         freqCommand.fourierTransformInformation = ftArray;
         freqCommand.onOff = false;

         var invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.inverseFastFourierTransform | FastFourierTransformCommandFlags.gray | FastFourierTransformCommandFlags.scale | FastFourierTransformCommandFlags.both);
         invCommand.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task FrequencyFilterMaskConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         // Resize the image to make sure the image's dimensions are power of two.
         SizeCommand sizeCommand = new SizeCommand(256, 256, RasterSizeFlags.Bicubic);
         sizeCommand.Run(image);

         FourierTransformInformation ftArray = new FourierTransformInformation(image);
         // Apply FFT.
         FastFourierTransformCommand command = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.FastFourierTransform | FastFourierTransformCommandFlags.Gray);
         command.Run(image);

         FrequencyFilterMaskCommand freqCommand = new FrequencyFilterMaskCommand();
         freqCommand.MaskImage = image;
         freqCommand.FourierTransformInformation = ftArray;
         freqCommand.OnOff = false;

         FastFourierTransformCommand invCommand = new FastFourierTransformCommand(ftArray, FastFourierTransformCommandFlags.InverseFastFourierTransform | FastFourierTransformCommandFlags.Gray | FastFourierTransformCommandFlags.Scale | FastFourierTransformCommandFlags.Both);
         invCommand.Run(image);

      }</code>
      </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor(Leadtools.RasterImage,Leadtools.ImageProcessing.Core.FourierTransformInformation,System.Boolean)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <param name="maskImage">RasterImage object that contains the mask image.</param>
      <param name="fourierTransformInformation">
        <see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation" /> structure. The Data property of the <see cref="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation" /> structure is a two-dimensional array holding the frequency components.</param>
      <param name="onOff">Value that indicates whether the frequency components are removed if the corresponding pixel value is zero. Possible values are:
            <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>true</td><td>If the pixel value equals zero the frequency components in its location in the Data property of the FourierTransformInformation structure will be removed, otherwise no change. A component is "removed" when both members of the corresponding <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> structure are set to 0.</td></tr><tr><td>false</td><td>The frequency component in the pixel location in Data property of the FourierTransformInformation structure will be multiplied by the value of the pixel divided by 255.</td></tr></table></param>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand" />.
            </example>
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.Run">
      <summary>Apply the method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>1     the command was successful <br /> &lt; 1   An error occurred. </returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.OnOff">
      <summary>Gets or sets a value that indicates whether the frequency components are removed if the corresponding pixel value is zero. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>Value that indicates whether the frequency components are removed if the corresponding pixel value is zero. Possible values are:
            <table><tr><td><b>Value</b></td><td><b>Meaning</b></td></tr><tr><td>true</td><td>If the pixel value equals zero the frequency components in its location in the Data property of the FourierTransformInformation structure will be removed, otherwise no change. A component is "removed" when both members of the corresponding <see cref="T:Leadtools.ImageProcessing.Core.Complex" /> structure are set to 0.</td></tr><tr><td>false</td><td>The frequency component in the pixel location in the Data property of the FourierTransformInformation structure will be multiplied by the value of the pixel divided by 255.</td></tr></table></value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.MaskImage">
      <summary>Gets or sets the RasterImage object that references the mask image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>RasterImage object that references the mask image.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see></example>
      <noremarks />
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.FourierTransformInformation">
      <summary>Gets or sets a <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see> structure that contains information about the Fourier Transform. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <value>      
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see>structure is a two-dimensional array holding the frequency components.</value>
      <example>
            Refer to <see cref="M:Leadtools.ImageProcessing.Core.FrequencyFilterMaskCommand.#ctor">FrequencyFilterMaskCommand()</see></example>
      <noremarks />
    </member>
    <member name="T:Leadtools.ImageProcessing.Core.CorrelationCommand">
      <summary>This command compares the correlation image(or part of the correlation image) with all the areas of the same dimensions in the image to be searched (the Run method image) and finds those portions that match according to the measure of correlation. This command is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> Toolkits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <list type="bullet">
          <item>
            <description>This command compares the correlation image (or part of the correlation image) with all the areas of the same dimensions in the image to be searched and finds those portions that match according to the measure of correlation. Correlation is a measure of association (resemblance) between two images. It varies from 0 (zero resemblance) to 100 (perfect resemblance). This command updates the Points property (or the points parameter of the Constructor) with the point of origin for those areas of the image to be searched where the resemblance with the correlation image (or part of the correlation image) is greater than the threshold. The correlation image dimensions must be less than or equal to the dimensions of the image to be searched.</description>
          </item>
          <item>
            <description>For example:
            <list type="number"><item><description>Select an image of the object for which you want to look. Put it in the CorrelationImage property (or the correlationImage parameter of the constructor). For example: <br /><img src="Correlation1.jpg" /><br /></description></item><item><description>Select an image that contains the image you wish to search and put it in the affected image. For example:<br /><img src="Correlation2.jpg" /><br /></description></item><item><description>Call CorrelationCommand.</description></item><item><description>The command will update the Points array property (or the points parameter of the Constructor) with the point of origin (top-left) for each area of the image to be searched where the correlation with the correlation image is greater than the correlation threshold. The height and width of the rectangles are the same as for the correlation image.</description></item><item><description>The result is:<br /><img src="Correlation3.jpg" /><br /></description></item></list></description>
          </item>
          <item>
            <description>This command supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 48 and 64-bit color images is available only in the <see cref="T:Leadtools.Topics.RasterProDocMed">Document/Medical</see> toolkits.</description>
          </item>
          <item>
            <description>This command does not support 32-bit grayscale images.</description>
          </item>
          <item>
            <description>All images must be signed or unsigned.</description>
          </item>
        </list>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.<br /></remarks>
      <example>
        <code lang="VB">   Public Sub CorrelationCommandExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim points() As LeadPoint
      ReDim points(89)

      Dim DstImage As RasterImage = leadImage.Clone()
      Dim command As CorrelationCommand = New CorrelationCommand
      command.CorrelationImage = DstImage
      command.Threshold = 70
      command.XStep = 1
      command.YStep = 1
      command.Points = points
      'Apply the correlation filter.
      command.Run(leadImage)

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CorrelationCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage DstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = DstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         //Apply the correlation filter.
         command.Run(image);

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function CorrelationCommandExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var DstImage = image.clone();
         var command = new CorrelationCommand();
         command.correlationImage = DstImage;
         command.threshold = 70;
         command.xStep = 1;
         command.yStep = 1;
         command.points = new Array();
         //Size the array to 90
         for (var i = 0; i &lt; 90; i++)
            command.points[i] = Leadtools.LeadPointHelper.create(0, 0);

         //Apply the correlation filter.
         command.run(image);
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task CorrelationCommandExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         RasterImage DstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = DstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         //Apply the correlation filter.
         command.Run(image);

      }</code>
        <code lang="SilverlightCSharp">      public void CorrelationCommandExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         RasterImage DstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = DstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         //Apply the correlation filter.
         command.Run(image);
         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CorrelationCommandExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim DstImage As RasterImage = image.Clone()
         Dim command As CorrelationCommand = New CorrelationCommand()
         command.CorrelationImage = DstImage
         command.Threshold = 70
         command.XStep = 1
         command.YStep = 1
         command.Points = New LeadPoint(89){}
         'Apply the correlation filter.
         command.Run(image)
         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Color.IntensityDetectCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Effects.BinaryFilterCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MaximumCommand"></seealso>.
            <seealso cref="T:Leadtools.ImageProcessing.Core.MinimumCommand"></seealso>.
            <objectivec><pre>@interface LTCorrelationCommand : LTRasterCommand</pre></objectivec><java><pre>public class CorrelationCommand extends RasterCommand</pre></java></member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.#ctor">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" /> class object with default parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>- (id) init;</pre>
      </objectivec>
      <java>
        <pre>public CorrelationCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.#ctor(Leadtools.RasterImage,Leadtools.LeadPoint[],System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" /> class object with explicit parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="correlationImage">RasterImage object that references the image for which to search.</param>
      <param name="points">An array of <see cref="T:Leadtools.LeadPoint" /> structures. This array will be updated with the starting points for the correlated areas.</param>
      <param name="xStep">Step size in the X direction (along image width), in pixels. For best results, use 1. This parameter accepts only positive values.</param>
      <param name="yStep">Step size in the Y direction (along image height), in pixels. For best results, use 1. This parameter accepts only positive values.</param>
      <param name="threshold">Value that indicates the correlation threshold, which is a measure of association required to consider two areas to be correlated. If the correlation value between correlationImage and an area in the image to be searched (the Run method image) is less than the correlation threshold they are uncorrelated. Valid values range from 0 (zero resemblance) to 100 (perfect resemblance).</param>
      <example>
        <code lang="VB">   Public Sub CorrelationConstructorExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim points() As LeadPoint
      ReDim points(89)

      Dim DstImage As RasterImage = leadImage.Clone()
      Dim command As CorrelationCommand = New CorrelationCommand(DstImage, points, 1, 1, 70)
      ' Apply the correlation filter.
      command.Run(leadImage)

      MessageBox.Show("The number of points are:" &amp; command.NumberOfPoints.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void CorrelationConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage dstImage = image.Clone();
         LeadPoint[] points = new LeadPoint[90];

         CorrelationCommand command = new CorrelationCommand(dstImage, points, 1, 1, 70);
         // Apply the correlation filter.
         command.Run(image);

         MessageBox.Show("The number of points are:" + command.NumberOfPoints.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function CorrelationConstructorExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var dstImage = image.clone();
         var points = new Array();
         //Size the array to 90
         for (var i = 0; i &lt; 90; i++)
            points[i] = Leadtools.LeadPointHelper.create(0, 0);
         
         var command = new CorrelationCommand(dstImage, points, 1, 1, 70);
         // Apply the correlation filter.
         command.run(image);
         
         console.error("The number of points are:" + command.numberOfPoints.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task CorrelationConstructorExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         RasterImage dstImage = image.Clone();
         LeadPoint[] points = new LeadPoint[90];

         CorrelationCommand command = new CorrelationCommand(dstImage, points, 1, 1, 70);
         // Apply the correlation filter.
         command.Run(image);

         Debug.WriteLine("The number of points are:" + command.NumberOfPoints.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void CorrelationConstructorExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         RasterImage dstImage = image.Clone();
         LeadPoint [] points = new LeadPoint[90];
         CorrelationCommand command = new CorrelationCommand(dstImage, points, 1, 1, 70);
         // Apply the correlation filter.
         command.Run(image);
         Debug.WriteLine("The number of points are:" + command.NumberOfPoints.ToString());

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub CorrelationConstructorExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim dstImage As RasterImage = image.Clone()
         Dim points As LeadPoint() = New LeadPoint(89){}
         Dim command As CorrelationCommand = New CorrelationCommand(dstImage, points, 1, 1, 70)
         ' Apply the correlation filter.
         command.Run(image)
         Debug.WriteLine("The number of points are:" &amp; command.NumberOfPoints.ToString())

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>
- (id)initWithCorrelationImage:(LTRasterImage*)correlationImage 
                        points:(LeadPoint*)points 
                   pointsCount:(unsigned int)pointsCount 
                         xStep:(unsigned int)xStep 
                         yStep:(unsigned int)yStep 
                     threshold:(unsigned int)threshold;            </pre>
      </objectivec>
      <java>
        <pre>
public CorrelationCommand(
   RasterImage correlationImage, 
   LeadPoint[] points, 
   int xStep, 
   int yStep, 
   int threshold
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>String that contains the name of this command.</returns>
      <noexample />
      <noremarks />
      <objectivec>
        <pre>-(NSString*) description;</pre>
      </objectivec>
      <java>
        <pre>@Override public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.GetStringDescription">
      <summary>Returns a meaningful name for this command. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a></summary>
      <returns>Character string that contains the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.Core.CorrelationCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="WinRTicon.png" alt="WinRT support" border="0" />
      </a>
      <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation">
        <img src="winrtphone.png" alt="WinRT Phone support" border="0" />
      </a>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.CorrelationImage">
      <summary>Gets or sets the RasterImage object that references the image for which to search. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>RasterImage that references the image for which to search.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* correlationImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getCorrelationImage()
public void setCorrelationImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.Points">
      <summary>Gets an array of <see cref="T:Leadtools.LeadPoint" />structures that will be filled with the starting points for the correlated areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An array of <see cref="T:Leadtools.LeadPoint" /> structures. This array will be filled with the starting points for the correlated areas.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) LeadPoint* points;</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint[] getPoints()
public void setPoints(LeadPoint[] value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.pointsCount_objectivec">
      <summary>Get or set the count of points <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a></summary>
      <value>An <see cref="T:System.Int32" /> that specifies the count of points in the array in points property</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int pointsCount;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.NumberOfPoints">
      <summary>This property is updated with the number of areas in the image actually found to be correlated to the correlation image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the number of areas in the image actually found to be correlated to the correlation image. Its maximum value is the length of the Points array.</value>
      <example>
        <code lang="VB">   Public Sub NumberOfPointsPropertyExample()
      Dim codecs As New RasterCodecs()
      codecs.ThrowExceptionsOnInvalidImages = True

      Dim leadImage As RasterImage = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"))

      ' Prepare the command
      Dim points() As LeadPoint
      ReDim points(89)

      Dim DstImage As RasterImage = leadImage.Clone()
      Dim command As CorrelationCommand = New CorrelationCommand
      command.CorrelationImage = DstImage
      command.Threshold = 70
      command.XStep = 1
      command.YStep = 1
      command.Points = points
      ' Apply the correlation filter.
      command.Run(leadImage)

      MessageBox.Show("The number of points are:" &amp; command.NumberOfPoints.ToString())

   End Sub

   Public NotInheritable Class LEAD_VARS
      Public Const ImagesDir As String = "C:\Users\Public\Documents\LEADTOOLS Images"
   End Class</code>
        <code lang="CS">      public void NumberOfPointsPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;

         RasterImage image = codecs.Load(Path.Combine(LEAD_VARS.ImagesDir, "Master.jpg"));

         // Prepare the command
         RasterImage dstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = dstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         // Apply the correlation filter.
         command.Run(image);

         MessageBox.Show("The number of points are:" + command.NumberOfPoints.ToString());

      }

   static class LEAD_VARS
   {
      public const string ImagesDir = @"C:\Users\Public\Documents\LEADTOOLS Images";
   }</code>
        <code lang="JavaScript">
function NumberOfPointsPropertyExample()
{
   var codecs = new Leadtools.Codecs.RasterCodecs();
   codecs.throwExceptionsOnInvalidImages = true;

   // Load the image
   var srcFileName = "Assets\\Image1.cmp";
   return Tools.AppInstallFolder().getFileAsync(srcFileName).then(function (loadFile) {
      return codecs.loadAsync(Leadtools.LeadStreamFactory.create(loadFile));
   }).then(function (image) {
      // Prepare the command
      with (Leadtools.ImageProcessing.Core) {
         var dstImage = image.clone();
         var command = new CorrelationCommand();
         command.correlationImage = dstImage;
         command.threshold = 70;
         command.xStep = 1;
         command.yStep = 1;
         command.points = new Array();
         //Size the array to 90
         for (var i = 0; i &lt; 90; i++)
            command.points[i] = Leadtools.LeadPointHelper.create(0, 0);

         // Apply the correlation filter.
         command.run(image);
         
         console.error("The number of points are:" + command.numberOfPoints.toString());
      }
   });
}
 </code>
        <code lang="CSWinRT">      
      public async Task NumberOfPointsPropertyExample()
      {
         // Load an image
         RasterCodecs codecs = new RasterCodecs();
         codecs.ThrowExceptionsOnInvalidImages = true;
         // Load the image
         string srcFileName = @"Assets\Image1.cmp";
         StorageFile loadFile = await Tools.AppInstallFolder.GetFileAsync(srcFileName);
         RasterImage image = await codecs.LoadAsync(LeadStreamFactory.Create(loadFile));

         // Prepare the command
         RasterImage dstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = dstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         // Apply the correlation filter.
         command.Run(image);

         Debug.WriteLine("The number of points are:" + command.NumberOfPoints.ToString());

      }</code>
        <code lang="SilverlightCSharp">      public void NumberOfPointsPropertyExample(RasterImage image, Stream outStream)
      {
         // Prepare the command
         RasterImage dstImage = image.Clone();
         CorrelationCommand command = new CorrelationCommand();
         command.CorrelationImage = dstImage;
         command.Threshold = 70;
         command.XStep = 1;
         command.YStep = 1;
         command.Points = new LeadPoint[90];
         // Apply the correlation filter.
         command.Run(image);
         Debug.WriteLine("The number of points are:" + command.NumberOfPoints.ToString());

         // Save result image
         RasterCodecs codecs = new RasterCodecs();
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24);
         image.Dispose();
      }</code>
        <code lang="VB">      Public Sub NumberOfPointsPropertyExample(ByVal image As RasterImage, ByVal outStream As Stream)
         ' Prepare the command
         Dim dstImage As RasterImage = image.Clone()
         Dim command As CorrelationCommand = New CorrelationCommand()
         command.CorrelationImage = dstImage
         command.Threshold = 70
         command.XStep = 1
         command.YStep = 1
         command.Points = New LeadPoint(89){}
         ' Apply the correlation filter.
         command.Run(image)
         Debug.WriteLine("The number of points are:" &amp; command.NumberOfPoints.ToString())

         ' Save result image
         Dim codecs As RasterCodecs = New RasterCodecs()
         codecs.Save(image, outStream, RasterImageFormat.Jpeg, 24)
         image.Dispose()
      End Sub</code>
      </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int  numberOfPoints;</pre>
      </objectivec>
      <java>
        <pre>public int getNumberOfPoints()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.XStep">
      <summary>Gets or sets the step size in the X direction (along image width), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the step size in the X direction (along image width), in pixels. For best results, use 1. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xStep;</pre>
      </objectivec>
      <java>
        <pre>
public int getXStep()
public void setXStep(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.YStep">
      <summary>Gets or sets the step size in the Y direction (along image height), in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that represents the step size in the Y direction (along image height), in pixels. For best results, use 1. This property accepts only positive values.</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yStep;</pre>
      </objectivec>
      <java>
        <pre>
public int getYStep()
public void setYStep(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.Core.CorrelationCommand.Threshold">
      <summary>Gets or sets a value that indicates the correlation threshold, which is a measure of association required to consider two areas to be correlated. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="WinRTicon.png" alt="WinRT support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="winrtphone.png" alt="WinRT Phone support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="Android.png" alt="Android support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="iOS.png" alt="iOS / OS X support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Value that indicates the correlation threshold, which is a measure of association required to consider two areas to be correlated. If the correlation value between the correlation image and an area in the image to be searched (the Run method image) is less than the correlation threshold they are uncorrelated. Valid values range from 0 (zero resemblance) to 100 (perfect resemblance).</value>
      <example>
            Refer to <see cref="T:Leadtools.ImageProcessing.Core.CorrelationCommand" />.
            </example>
      <noremarks />
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int threshold;</pre>
      </objectivec>
      <java>
        <pre>
public int getThreshold()
public void setThreshold(int value)            </pre>
      </java>
    </member>
  </members>
</doc>